   <Application x:Class="PhotoSW.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
             xmlns:utbc="clr-namespace:PhotoSW.Common;assembly=FrameworkHelper" 
             xmlns:sc="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
           xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
             xmlns:ibc="clr-namespace:Xceed.Wpf.Toolkit.Core.Converters;assembly=WPFToolkit.Extended"
             xmlns:bc="clr-namespace:Xceed.Wpf.Toolkit.Chromes;assembly=WPFToolkit.Extended"
                 xmlns:sys="clr-namespace:System;assembly=mscorlib" 
             StartupUri="Views/Login.xaml"
             >
    <Application.Resources>
        <utbc:UriToBitmapConverter x:Key="Imageconverter" />
        <SolidColorBrush x:Key="darkBlueSolidBrush" Color="#FF00008C" />
        <SolidColorBrush x:Key="lightBlueSolidBrush" Color="#FFDDEEFF" />
        <SolidColorBrush x:Key ="DarkRedSolidBrush" Color="Maroon"/>
        <SolidColorBrush x:Key="WhiteColorSolidBrush" Color="#FFFFFF" />
        <SolidColorBrush x:Key="GrayColorSolidBrush" Color="Gray" />
        <SolidColorBrush x:Key="darkGrayColorSolidBrush" Color="#696969"/>
        <!--**********************************************************************************************
             DatePicker items styles
                You cannot call Calender Style from DatePickerStyle. Both must be called from within
                DatePicker definition, like this:                
                                    CalendarStyle="{DynamicResource CalendarStyle}"
                                    Style="{DynamicResource DatePickerStyle}"
             Also: See the CalendarDayButton & CalendarButtonclass for properties of the buttons
            **********************************************************************************************-->

        <Style x:Key="datePickerStyle" TargetType="{x:Type DatePicker}">
            <Setter Property="SelectedDate" Value="{x:Static sys:DateTime.Now}"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Width" Value="148"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="BorderBrush" Value="Maroon"/>
            <Setter Property="TextBlock.FontFamily" Value="Microsoft Sans Serif"/>
            <Setter Property="TextBlock.FontWeight" Value="Normal"/>
            <Setter Property="TextBlock.FontStyle" Value="Normal"/>
            <Setter Property="TextBlock.FontSize" Value="18"/>
            <Setter Property="TextBlock.TextAlignment" Value="Left"/>
            <Setter Property="TextBlock.LineHeight" Value="24"/>
            <Setter Property="TextBlock.Foreground" Value="{DynamicResource WhiteColorSolidBrush}"/>
            <Setter Property="TextBlock.Background" Value="{DynamicResource GrayColorSolidBrush}"/>
        </Style>

        <Style TargetType="{x:Type DatePickerTextBox}">
            <Setter Property="Background" Value="#696969" />
            <Setter Property="BorderBrush" Value="#696969"/>
            <!--<Setter Property="Height"  Value="50" />-->
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <!--<Setter Property="BorderThickness" Value="5"/>-->
            <!--<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>-->
        </Style>

        <!--ColorPicker Style-->
        <Style TargetType="ComboBox" x:Key="BrushSelector">
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <UniformGrid/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate DataType="{x:Type SolidColorBrush}">
                        <Rectangle Width="18" Height="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Width}" Margin="2" Fill="{Binding}"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
          

        </Style>

       
        <x:Array x:Key="SomeBrushes" Type="{x:Type SolidColorBrush}">
            <SolidColorBrush>Red</SolidColorBrush>
            <SolidColorBrush>Green</SolidColorBrush>
            <SolidColorBrush>Blue</SolidColorBrush>
            <SolidColorBrush>Yellow</SolidColorBrush>
            <SolidColorBrush>Black</SolidColorBrush>
            <SolidColorBrush>Gray</SolidColorBrush>
            <SolidColorBrush>Cyan</SolidColorBrush>
            <SolidColorBrush>GreenYellow</SolidColorBrush>
            <SolidColorBrush>HotPink</SolidColorBrush>
            <SolidColorBrush>Indigo</SolidColorBrush>
            <SolidColorBrush>Lavender</SolidColorBrush>
            <SolidColorBrush>LightGreen</SolidColorBrush>
            <SolidColorBrush>LightBlue</SolidColorBrush>
            <SolidColorBrush>LightPink</SolidColorBrush>
            <SolidColorBrush>DarkBlue</SolidColorBrush>
            <SolidColorBrush>DarkCyan</SolidColorBrush>
            <SolidColorBrush>DarkGray</SolidColorBrush>
            <SolidColorBrush>DarkGoldenrod</SolidColorBrush>
            <SolidColorBrush>Gold</SolidColorBrush>
            <SolidColorBrush>White</SolidColorBrush>
            <SolidColorBrush>Navy</SolidColorBrush>
            <SolidColorBrush>Olive</SolidColorBrush>
            <SolidColorBrush>OliveDrab</SolidColorBrush>
            <SolidColorBrush>Orange</SolidColorBrush>
            <SolidColorBrush>OrangeRed</SolidColorBrush>
            <SolidColorBrush>Orchid</SolidColorBrush>
            <SolidColorBrush>RoyalBlue</SolidColorBrush>
            <SolidColorBrush>Purple</SolidColorBrush>
            <SolidColorBrush>Fuchsia</SolidColorBrush>
            <SolidColorBrush>ForestGreen</SolidColorBrush>
            <SolidColorBrush>DodgerBlue</SolidColorBrush>
            <SolidColorBrush>DeepPink</SolidColorBrush>

            <SolidColorBrush>Aqua</SolidColorBrush>
            <SolidColorBrush>AntiqueWhite</SolidColorBrush>
            <SolidColorBrush>Gold</SolidColorBrush>
            <SolidColorBrush>BlueViolet</SolidColorBrush>
            <SolidColorBrush>Brown</SolidColorBrush>
            <SolidColorBrush>Lawngreen</SolidColorBrush>
            <SolidColorBrush>Salmon</SolidColorBrush>
            <SolidColorBrush>SandyBrown</SolidColorBrush>
            <SolidColorBrush>YellowGreen</SolidColorBrush>
            <SolidColorBrush>Wheat</SolidColorBrush>
            <SolidColorBrush>SteelBlue</SolidColorBrush>
            <SolidColorBrush>Snow</SolidColorBrush>
            <SolidColorBrush>SlateGray</SolidColorBrush>
            <SolidColorBrush>Silver</SolidColorBrush>
            <SolidColorBrush>Sienna</SolidColorBrush>
            <SolidColorBrush>Khaki</SolidColorBrush>
            <SolidColorBrush>MediumPurple</SolidColorBrush>
            <SolidColorBrush>MediumSlateBlue</SolidColorBrush>
            <SolidColorBrush>MediumOrchid</SolidColorBrush>
            <SolidColorBrush>Maroon</SolidColorBrush>
            <SolidColorBrush>LightCyan</SolidColorBrush>
            <SolidColorBrush>WhiteSmoke</SolidColorBrush>
            <SolidColorBrush>Pink</SolidColorBrush>
            <SolidColorBrush>Plum</SolidColorBrush>
            <SolidColorBrush>PapayaWhip</SolidColorBrush>
            <SolidColorBrush>DarkSalmon</SolidColorBrush>
            <SolidColorBrush>DarkSeaGreen</SolidColorBrush>
            <SolidColorBrush>DarkSlateBlue</SolidColorBrush>
            <SolidColorBrush>DarkOrchid</SolidColorBrush>
            <SolidColorBrush>Tan</SolidColorBrush>
            <SolidColorBrush>LightSteelBlue</SolidColorBrush>
            <SolidColorBrush>Linen</SolidColorBrush>
        </x:Array>


        <Style x:Key="ComboBoxColorPickerStyle"  TargetType="ComboBox">
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>              
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
            
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <UniformGrid/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate DataType="{x:Type SolidColorBrush}">
                        <Rectangle Width="18" Height="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Width}" Margin="2" Fill="{Binding}"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" Grid.Column="2"
                ClickMode="Press" Focusable="False"
                IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                            <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                              HorizontalAlignment="Left" VerticalAlignment="Center"                              
                              Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                            <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
                     IsReadOnly="{TemplateBinding IsReadOnly}"
                     Visibility="Hidden" Background="Transparent"
                     HorizontalAlignment="Left" VerticalAlignment="Center"
                     Focusable="True" >
                                <TextBox.Template>
                                    <ControlTemplate TargetType="TextBox" >
                                        <Border Name="PART_ContentHost" Focusable="False" />
                                    </ControlTemplate>
                                </TextBox.Template>
                            </TextBox>
                            <!-- Popup showing items -->
                            <Popup Name="Popup" Placement="Bottom"
                   Focusable="False" AllowsTransparency="True"
                   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                   PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True"
                    MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                    MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                    <Border Name="DropDownBorder" Background="#606060" Margin="0, 1, 0, 0"
                        CornerRadius="0" BorderThickness="1,1,1,1" 
                        BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"/>
                                    <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                            </Trigger>
                            <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </Trigger>
                            <Trigger Property="ComboBox.IsEditable" Value="True">
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--<Style TargetType="ComboBox" x:Key="BrushesSelector" BasedOn="{StaticResource BrushSelector}">
            <Setter Property="ItemsSource" Value="{x:Static src:BrushesToList.Brushes}"/>
        </Style>-->

        <!--End-->
        
        <!--Style for the months of a year button, and years of a decade button.-->
        <Style x:Key="calendarButtonStyle" TargetType="{x:Type CalendarButton}">
            <Setter Property="Width" Value="70" />
            <Setter Property="Height" Value="48" />
            <Setter Property="FontFamily" Value="Microsoft Sans Serif"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontStyle" Value="Normal"/>
            <Setter Property="FontSize" Value="18" />
            <Setter Property="Background" Value="{StaticResource GrayColorSolidBrush}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CalendarButton}">
                        <Grid>
                            <Rectangle  x:Name="activeButton"
                                RadiusX="5" RadiusY="5" 
                                Fill="{TemplateBinding Panel.Background}" 
                                Stroke="{DynamicResource GrayColorSolidBrush}"
                                StrokeThickness="1" 
                                Opacity="255">
                            </Rectangle>
                            <ContentPresenter 
                                Content="{TemplateBinding ContentControl.Content}" 
                                ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" 
                                ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" 
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" 
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" 
                                TextElement.Foreground="{DynamicResource darkBlueSolidBrush}">
                            </ContentPresenter>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsInactive" Value="True">
                                <Setter Property="Background" Value="LightPink"></Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="GreenYellow"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Style for CalendarDayButton-->
        <!--<Style x:Key="calendarDayButtonStyle" TargetType="{x:Type CalendarDayButton}">
            <Setter Property="Width" Value="40"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="FontFamily" Value="Microsoft Sans Serif"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontStyle" Value="Normal"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CalendarDayButton}">

                        <Grid>
                            <Rectangle  x:Name="activeButton"
                                RadiusX="5" RadiusY="5" 
                                Fill="{TemplateBinding Panel.Background}" 
                                Stroke="{DynamicResource GrayColorSolidBrush}"
                                StrokeThickness="1" 
                                Opacity="255">
                            </Rectangle>

                            <ContentPresenter 
                                Content="{TemplateBinding ContentControl.Content}" 
                                ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" 
                                ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"                   
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" 
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" 
                                TextElement.Foreground="{DynamicResource darkBlueSolidBrush}">
                            </ContentPresenter>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsToday" Value="True">
                                <Setter Property="Background" Value="#696969"></Setter>
                            </Trigger>
                            <Trigger Property="IsInactive" Value="True">
                                <Setter Property="Background" Value="LightPink"></Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="GreenYellow"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->

        <Style x:Key="calendarDayButtonStyle" TargetType="{x:Type CalendarDayButton}">
            <Setter Property="Width" Value="40"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="FontFamily" Value="Microsoft Sans Serif"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontStyle" Value="Normal"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CalendarDayButton}">

                        <Grid>
                            <Rectangle  x:Name="activeButton"
                                RadiusX="5" RadiusY="5" 
                                Fill="{TemplateBinding Panel.Background}" 
                                Stroke="{DynamicResource GrayColorSolidBrush}"
                                StrokeThickness="1" 
                                Opacity="255">
                            </Rectangle>

                            <ContentPresenter 
                                Content="{TemplateBinding ContentControl.Content}" 
                                ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" 
                                ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"                   
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" 
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" 
                                TextElement.Foreground="{DynamicResource WhiteColorSolidBrush}">
                            </ContentPresenter>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsToday" Value="True">
                                <Setter Property="Background" Value="Maroon"></Setter>
                            </Trigger>
                            <Trigger Property="IsInactive" Value="True">
                                <Setter Property="Background" Value="#80808080"></Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="Maroon"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!--Style for CalendarItem-->
        <Style x:Key="itemStyle" TargetType="{x:Type CalendarItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CalendarItem">
                        <Border x:Name="border" BorderBrush="{DynamicResource DarkRedSolidBrush}" BorderThickness="2">
                            <DockPanel Name="PART_Root" 
                                       LastChildFill="True"
                                       Background="{DynamicResource darkGrayColorSolidBrush}" >

                                <Button x:Name="PART_PreviousButton" 
                                        DockPanel.Dock="Left"
                                        FontSize="28"
                                        FontWeight="Bold"
                                        Content="&lt;"
                                        Width="24"
                                        BorderThickness="0,0,2,0"
                                        Foreground="{DynamicResource DarkRedSolidBrush}"
                                        BorderBrush="{DynamicResource DarkRedSolidBrush}"
                                        Background="#808080"
                                        Focusable="False" />

                                <Button x:Name="PART_NextButton" 
                                        DockPanel.Dock="Right"
                                        FontSize="28"
                                        FontWeight="Bold"
                                        Content="&gt;" 
                                        Width="24"
                                        BorderThickness="2,0,0,0"
                                        Foreground="{DynamicResource DarkRedSolidBrush}"
                                        BorderBrush="{DynamicResource DarkRedSolidBrush}"
                                        Background="#808080"
                                        Focusable="False" />

                                <Button x:Name="PART_HeaderButton"                                          
                                        DockPanel.Dock="Top"
                                        FontSize="22"
                                        FontWeight="Bold"
                                        Height="40"
                                        BorderThickness="0,0,0,2"
                                        Foreground="{DynamicResource WhiteColorSolidBrush}"
                                        BorderBrush="{DynamicResource DarkRedSolidBrush}"
                                        Background="{DynamicResource darkGrayColorSolidBrush}"         
                                        Focusable="False" />

                                <Grid>
                                    <Grid x:Name="PART_MonthView" Visibility="Visible">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>

                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                    </Grid>

                                    <Grid x:Name="PART_YearView"  Visibility="Hidden">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>

                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                    </Grid>
                                </Grid>
                                <Rectangle x:Name="PART_DisabledVisual" Opacity="0" Visibility="Collapsed" Fill="#A5FFFFFF"/>
                            </DockPanel>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="PART_DisabledVisual" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Calendar}}, Path=DisplayMode}" Value="Year">
                                <Setter TargetName="PART_MonthView" Property="Visibility" Value="Hidden" />
                                <Setter TargetName="PART_YearView" Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Calendar}}, Path=DisplayMode}" Value="Decade">
                                <Setter TargetName="PART_MonthView" Property="Visibility" Value="Hidden" />
                                <Setter TargetName="PART_YearView" Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Style for Calendar-->
        <Style x:Key="calendarStyle" TargetType="{x:Type Calendar}">
            <Setter Property="CalendarDayButtonStyle" Value="{DynamicResource calendarDayButtonStyle}"/>
            <Setter Property="CalendarButtonStyle" Value="{DynamicResource calendarButtonStyle}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="Gray"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Calendar">
                        <StackPanel Name="PART_Root"   Orientation="Horizontal">
                            <CalendarItem 
                                Name="PART_CalendarItem" 
                                Style="{DynamicResource itemStyle}"
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                VerticalAlignment="Center" />
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DigiKeySpaceButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Control.BorderThickness" Value="0" />
            <Setter Property="Control.Foreground" Value="#FFFFFFFF" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="border" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Padding="2" Background="{x:Null}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image1">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="viewbox">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="2.5" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Image Name="image" HorizontalAlignment="Stretch" Height="Auto" Source="/PhotoSW;component/images/key-space-normal.png" Stretch="Fill" VerticalAlignment="Stretch" Width="Auto" Margin="0" Visibility="Visible">
                                    <Image.Effect>
                                        <DropShadowEffect Direction="272" BlurRadius="4" ShadowDepth="9" Opacity="0.945" />
                                    </Image.Effect>
                                </Image>
                                <Image Name="image1" Margin="0,9,0,-2" Source="/PhotoSW;component/images/key-space-pressed.png" Stretch="Fill" Visibility="Collapsed" RenderTransformOrigin="0.5,0.5">
                                    <Image.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Image.RenderTransform>
                                </Image>
                                <Viewbox Name="viewbox" HorizontalAlignment="Center" Margin="10,7" Stretch="Uniform" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                                    <Viewbox.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Viewbox.RenderTransform>
                                    <ContentPresenter Name="contentPresenter" RecognizesAccessKey="True" RenderTransformOrigin="0.5,0.5" Height="Auto" Width="Auto" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,1">
                                        <ContentPresenter.Effect>
                                            <DropShadowEffect ShadowDepth="1" Direction="90" BlurRadius="1" Opacity="0.31" />
                                        </ContentPresenter.Effect>
                                        <ContentPresenter.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform />
                                                <SkewTransform />
                                                <RotateTransform />
                                                <TranslateTransform />
                                            </TransformGroup>
                                        </ContentPresenter.RenderTransform>
                                    </ContentPresenter>
                                </Viewbox>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.FontFamily" Value="Franklin Gothic Demi" />
            <Setter Property="Control.FontSize" Value="9.333" />
            <Setter Property="Control.FontWeight" Value="Bold" />
            <Setter Property="FrameworkElement.Width" Value="Auto" />
        </Style>

        <Style x:Key="myTextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="BorderBrush" Value=" Maroon"/>
         
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="16"/>                  
            <Setter Property="MaxLength" Value="15"/>
            <!--<Setter Property="TextWrapping" Value="Wrap"/>-->
            <!--<Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="White"/>
                </Setter.Value>
            </Setter>-->
            
            <Setter Property="Background">
                <Setter.Value>                         
                    <LinearGradientBrush>
                        <GradientStop Color="#606060" Offset="0.0"/>                        
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="Gray"/>
                   
                </Trigger>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>                                               
        </Style>

        <Style x:Key="txtTextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="BorderBrush" Value=" Maroon"/>

            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="MaxLength" Value="15"/>
            <!--<Setter Property="TextWrapping" Value="Wrap"/>-->
            <!--<Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="White"/>
                </Setter.Value>
            </Setter>-->

            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush>
                        <GradientStop Color="#606060" Offset="0.0"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>

            <!--<Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="Gray"/>

                </Trigger>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>-->

        </Style>

        <Style x:Key="DigiKeyCloseButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="0" />
            <Setter Property="Control.Foreground" Value="#FFFFFFFF" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="border" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Padding="2" Background="{x:Null}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image1">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="viewbox">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="6.833" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Image Name="image" HorizontalAlignment="Stretch" Height="Auto" Source="/PhotoSW;component/images/key-close-normal.png" Stretch="Fill" VerticalAlignment="Stretch" Width="Auto" Margin="0" Visibility="Visible">
                                    <Image.Effect>
                                        <DropShadowEffect Direction="272" BlurRadius="4" ShadowDepth="9" Opacity="0.945" />
                                    </Image.Effect>
                                </Image>
                                <Image Name="image1" Margin="0,9,0,-2" Source="/PhotoSW;component/images/key-close-normal.png" Stretch="Fill" Visibility="Collapsed" RenderTransformOrigin="0.5,0.5">
                                    <Image.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Image.RenderTransform>
                                </Image>
                                <Viewbox Name="viewbox" HorizontalAlignment="Center" Margin="10,18.71,10,13.374" Stretch="Uniform" VerticalAlignment="Stretch" RenderTransformOrigin="0.5,0.5">
                                    <Viewbox.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Viewbox.RenderTransform>
                                    <ContentPresenter Name="contentPresenter" RecognizesAccessKey="True" RenderTransformOrigin="0.5,0.5" Height="Auto" Width="Auto" HorizontalAlignment="Center" VerticalAlignment="Stretch">
                                        <ContentPresenter.Effect>
                                            <DropShadowEffect ShadowDepth="1" Direction="90" BlurRadius="1" Opacity="0.31" />
                                        </ContentPresenter.Effect>
                                        <ContentPresenter.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform />
                                                <SkewTransform />
                                                <RotateTransform />
                                                <TranslateTransform />
                                            </TransformGroup>
                                        </ContentPresenter.RenderTransform>
                                    </ContentPresenter>
                                </Viewbox>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.FontFamily" Value="Franklin Gothic Demi" />
            <Setter Property="Control.FontSize" Value="10.667" />
            <Setter Property="Control.FontWeight" Value="Bold" />
            <Setter Property="FrameworkElement.Width" Value="Auto" />
        </Style>
        <Style x:Key="ButtonStyleGraphic" TargetType="{x:Type Button}">
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome" SnapsToDevicePixels="True" BorderBrush="#00FF0000" BorderThickness="5">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Unfocused" />
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="Chrome">
                                                <EasingColorKeyFrame KeyTime="0" Value="Red" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="Control.Padding" Value="5" />
            <Setter Property="Control.Background" Value="#00FFFFFF" />
            <Setter Property="FrameworkElement.Margin" Value="5" />
            <Setter Property="FrameworkElement.Width" Value="90" />
            <Setter Property="FrameworkElement.Height" Value="90" />
            <Setter Property="Control.BorderThickness" Value="0" />
        </Style>
        <Style x:Key="ButtonStyle2" TargetType="{x:Type Button}">
            <Setter Property="Control.Padding" Value="5" />
            <Setter Property="Control.Background" Value="#00FFFFFF" />
            <Setter Property="FrameworkElement.Margin" Value="5" />
            <Setter Property="FrameworkElement.Width" Value="100" />
            <Setter Property="FrameworkElement.Height" Value="80" />
            <Setter Property="Control.BorderThickness" Value="0" />
            <Setter Property="Control.FontSize" Value="20" />
        </Style>
        <Style x:Key="album-header" TargetType="{x:Type TextBlock}">
            <Setter Property="TextBlock.FontSize" Value="14" />
            <Setter Property="TextBlock.FontWeight" Value="Bold" />
        </Style>
        <Style x:Key="HyperlinkLikeButton" TargetType="{x:Type Button}">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ContentPresenter />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}" />
            <Setter Property="FrameworkElement.Cursor" Value="Hand" />
            <Style.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <ControlTemplate.Resources>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="TextBlock.TextDecorations" Value="Underline" />
                                    </Style>
                                </ControlTemplate.Resources>
                                <ContentPresenter />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ButtonStyleAlpha" TargetType="{x:Type Button}">
            <Setter Property="Control.Padding" Value="0" />
            <Setter Property="FrameworkElement.Cursor" Value="Hand" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0.405" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                                <EasingColorKeyFrame KeyTime="0" Value="White" />
                                                <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FFD2D2D2" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.66" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FF8F8F8F" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                            <Rectangle Name="rectangle" Fill="#FFFFFFFF" Opacity="0" Margin="0" RadiusX="10" RadiusY="10" Stroke="{x:Null}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsFocused" Value="True" />
                            <Trigger Property="Button.IsDefaulted" Value="True" />
                            <Trigger Property="UIElement.IsMouseOver" Value="True" />
                            <Trigger Property="ButtonBase.IsPressed" Value="True" />
                            <Trigger Property="UIElement.IsEnabled" Value="False" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyleAlpha2" TargetType="{x:Type Button}">
            <Setter Property="Control.Padding" Value="0" />
            <Setter Property="FrameworkElement.Cursor" Value="Hand" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ellipse">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="viewbox">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.865" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="viewbox">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.865" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="viewbox">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.118" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="viewbox">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.125" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="ellipse">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1.511" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="ellipse">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1.511" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="ellipse">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="18.778" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="ellipse">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-0.569" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Ellipse Name="ellipse" Margin="16.667,0,15.335,2.002" RenderTransformOrigin="1.271,0.5" HorizontalAlignment="Center" VerticalAlignment="Center" Height="48.999" Width="47.366" Opacity="0" Stroke="{x:Null}">
                                <Ellipse.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Ellipse.RenderTransform>
                                <Ellipse.Fill>
                                    <RadialGradientBrush>
                                        <GradientStop Color="#FFF7F900" Offset="0" />
                                        <GradientStop Offset="1" Color="#00F7F900" />
                                    </RadialGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                            <Viewbox Name="viewbox" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Stretch="Uniform" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" RenderTransformOrigin="0.5,0.5">
                                <Viewbox.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Viewbox.RenderTransform>
                                <ContentPresenter RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Height="Auto" Margin="2" />
                            </Viewbox>
                            <Rectangle Name="rectangle" Fill="#FFFFFFFF" Opacity="0" Margin="0" RadiusX="10" RadiusY="10" Stroke="{x:Null}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsFocused" Value="True" />
                            <Trigger Property="Button.IsDefaulted" Value="True" />
                            <Trigger Property="UIElement.IsMouseOver" Value="True" />
                            <Trigger Property="ButtonBase.IsPressed" Value="True" />
                            <Trigger Property="UIElement.IsEnabled" Value="False" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyleBack" TargetType="{x:Type Button}">
            <Setter Property="Control.Padding" Value="0" />
            <Setter Property="FrameworkElement.Cursor" Value="Hand" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed" />
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Image Margin="0,0,0,0" VerticalAlignment="Center" Source="/PhotoSW;component/images/key-back.png" />
                            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                            <Rectangle Name="rectangle" Fill="#FFFFFFFF" Opacity="0" Margin="0" RadiusX="10" RadiusY="10" Stroke="{x:Null}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsFocused" Value="True" />
                            <Trigger Property="Button.IsDefaulted" Value="True" />
                            <Trigger Property="UIElement.IsMouseOver" Value="True" />
                            <Trigger Property="ButtonBase.IsPressed" Value="True" />
                            <Trigger Property="UIElement.IsEnabled" Value="False" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyleEnter" TargetType="{x:Type Button}">
            <Setter Property="Control.Padding" Value="0" />
            <Setter Property="FrameworkElement.Cursor" Value="Hand" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed" />
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups> <!--Source="/PhotoSW;component/images/enter-btn.png"-->
                            <Image Margin="0,0,0,0" VerticalAlignment="Stretch" Source="/PhotoSW;component/images/btn_red.png" 
                            Stretch="Uniform" />
                            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsFocused" Value="True" />
                            <Trigger Property="Button.IsDefaulted" Value="True" />
                            <Trigger Property="UIElement.IsMouseOver" Value="True" />
                            <Trigger Property="ButtonBase.IsPressed" Value="True" />
                            <Trigger Property="UIElement.IsEnabled" Value="False" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyleCancel" TargetType="{x:Type Button}">
            <Setter Property="Control.Padding" Value="0" />
            <Setter Property="FrameworkElement.Cursor" Value="Hand" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed" />
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Image Margin="0,0,0,0" VerticalAlignment="Center" Source="/PhotoSW;component/images/cancel-btn1.png" />
                            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                            <Rectangle Name="rectangle" Fill="#FFFFFFFF" Opacity="0" Margin="0" RadiusX="10" RadiusY="10" Stroke="{x:Null}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsFocused" Value="True" />
                            <Trigger Property="Button.IsDefaulted" Value="True" />
                            <Trigger Property="UIElement.IsMouseOver" Value="True" />
                            <Trigger Property="ButtonBase.IsPressed" Value="True" />
                            <Trigger Property="UIElement.IsEnabled" Value="False" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- -->
        <Style x:Key="ButtonStyleCloseBotton" TargetType="{x:Type Button}">
            <Setter Property="Control.Padding" Value="0" />
            <Setter Property="FrameworkElement.Cursor" Value="Hand" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed" />
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Image Margin="0,0,0,0" VerticalAlignment="Center" Source="/PhotoSW;component/images/icon-close.png" />
                            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                            <Rectangle Name="rectangle" Fill="#FFFFFFFF" Opacity="0" Margin="0" RadiusX="10" RadiusY="10" Stroke="{x:Null}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsFocused" Value="True" />
                            <Trigger Property="Button.IsDefaulted" Value="True" />
                            <Trigger Property="UIElement.IsMouseOver" Value="True" />
                            <Trigger Property="ButtonBase.IsPressed" Value="True" />
                            <Trigger Property="UIElement.IsEnabled" Value="False" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyleCancelBotton" TargetType="{x:Type Button}">
            <Setter Property="Control.Padding" Value="0" />
            <Setter Property="FrameworkElement.Cursor" Value="Hand" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed" />
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Image Margin="0,0,0,0" VerticalAlignment="Center" Source="/PhotoSW;component/images/icon_cross.png" />
                            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                            <Rectangle Name="rectangle" Fill="#FFFFFFFF" Opacity="0" Margin="0" RadiusX="10" RadiusY="10" Stroke="{x:Null}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsFocused" Value="True" />
                            <Trigger Property="Button.IsDefaulted" Value="True" />
                            <Trigger Property="UIElement.IsMouseOver" Value="True" />
                            <Trigger Property="ButtonBase.IsPressed" Value="True" />
                            <Trigger Property="UIElement.IsEnabled" Value="False" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ButtonStyleNewCancelBotton" TargetType="{x:Type Button}">
            <Setter Property="Control.Padding" Value="0" />
            <Setter Property="FrameworkElement.Cursor" Value="Hand" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed" />
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Image Margin="0,0,0,0" VerticalAlignment="Center" Source="/PhotoSW;component/images/CancelNew.png" />
                            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                            <Rectangle Name="rectangle" Fill="#FFFFFFFF" Opacity="0" Margin="0" RadiusX="10" RadiusY="10" Stroke="{x:Null}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsFocused" Value="True" />
                            <Trigger Property="Button.IsDefaulted" Value="True" />
                            <Trigger Property="UIElement.IsMouseOver" Value="True" />
                            <Trigger Property="ButtonBase.IsPressed" Value="True" />
                            <Trigger Property="UIElement.IsEnabled" Value="False" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyleChromaKey" TargetType="{x:Type Button}">
            <Setter Property="Control.Padding" Value="0" />
            <Setter Property="FrameworkElement.Cursor" Value="Hand" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed" />
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Image Margin="0,0,0,0" VerticalAlignment="Center" Source="/PhotoSW;component/images/munis_new.png" />
                            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                            <Rectangle Name="rectangle" Fill="#FFFFFFFF" Opacity="0" Margin="0" RadiusX="10" RadiusY="10" Stroke="{x:Null}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsFocused" Value="True" />
                            <Trigger Property="Button.IsDefaulted" Value="True" />
                            <Trigger Property="UIElement.IsMouseOver" Value="True" />
                            <Trigger Property="ButtonBase.IsPressed" Value="True" />
                            <Trigger Property="UIElement.IsEnabled" Value="False" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ButtonStyleBgMask" TargetType="{x:Type Button}">
            <Setter Property="Control.Padding" Value="0" />
            <Setter Property="FrameworkElement.Cursor" Value="Hand" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed" />
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Image Margin="0,0,0,0" VerticalAlignment="Center" Source="/PhotoSW;component/images/fill.png" />
                            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                            <Rectangle Name="rectangle" Fill="#FFFFFFFF" Opacity="0" Margin="0" RadiusX="10" RadiusY="10" Stroke="{x:Null}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsFocused" Value="True" />
                            <Trigger Property="Button.IsDefaulted" Value="True" />
                            <Trigger Property="UIElement.IsMouseOver" Value="True" />
                            <Trigger Property="ButtonBase.IsPressed" Value="True" />
                            <Trigger Property="UIElement.IsEnabled" Value="False" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ButtonStyleAssociateSearch" TargetType="{x:Type Button}">
            <Setter Property="Control.Padding" Value="0" />
            <Setter Property="FrameworkElement.Cursor" Value="Hand" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed" />
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Image Margin="0,0,0,0" VerticalAlignment="Center" Source="/PhotoSW;component/images/btnSearchNew.png" />
                            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                            <Rectangle Name="rectangle" Fill="#FFFFFFFF" Opacity="0" Margin="0" RadiusX="10" RadiusY="10" Stroke="{x:Null}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsFocused" Value="True" />
                            <Trigger Property="Button.IsDefaulted" Value="True" />
                            <Trigger Property="UIElement.IsMouseOver" Value="True" />
                            <Trigger Property="ButtonBase.IsPressed" Value="True" />
                            <Trigger Property="UIElement.IsEnabled" Value="False" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ButtonStyleAssociate" TargetType="{x:Type Button}">
            <Setter Property="Control.Padding" Value="0" />
            <Setter Property="FrameworkElement.Cursor" Value="Hand" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed" />
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Image Margin="0,0,0,0" VerticalAlignment="Center" Source="/PhotoSW;component/images/btnAssociate.png" />
                            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                            <Rectangle Name="rectangle" Fill="#FFFFFFFF" Opacity="0" Margin="0" RadiusX="10" RadiusY="10" Stroke="{x:Null}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsFocused" Value="True" />
                            <Trigger Property="Button.IsDefaulted" Value="True" />
                            <Trigger Property="UIElement.IsMouseOver" Value="True" />
                            <Trigger Property="ButtonBase.IsPressed" Value="True" />
                            <Trigger Property="UIElement.IsEnabled" Value="False" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ButtonStyleBgRed" TargetType="{x:Type Button}">
            <Setter Property="Control.Padding" Value="0" />
            <Setter Property="FrameworkElement.Cursor" Value="Hand" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed" />
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Image Margin="0,0,0,0" VerticalAlignment="Center" Source="/PhotoSW;component/images/bg_red.png" />
                            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                            <Rectangle Name="rectangle" Fill="#FFFFFFFF" Opacity="0" Margin="0" RadiusX="10" RadiusY="10" Stroke="{x:Null}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsFocused" Value="True" />
                            <Trigger Property="Button.IsDefaulted" Value="True" />
                            <Trigger Property="UIElement.IsMouseOver" Value="True" />
                            <Trigger Property="ButtonBase.IsPressed" Value="True" />
                            <Trigger Property="UIElement.IsEnabled" Value="False" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ButtonStyleEyesClose" TargetType="{x:Type Button}">
            <Setter Property="Control.Padding" Value="0" />
            <Setter Property="FrameworkElement.Cursor" Value="Hand" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed" />
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Image Margin="0,0,0,0" VerticalAlignment="Center" Source="/PhotoSW;component/images/closeEyes.png" />
                            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                            <Rectangle Name="rectangle" Fill="#FFFFFFFF" Opacity="0" Margin="0" RadiusX="10" RadiusY="10" Stroke="{x:Null}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsFocused" Value="True" />
                            <Trigger Property="Button.IsDefaulted" Value="True" />
                            <Trigger Property="UIElement.IsMouseOver" Value="True" />
                            <Trigger Property="ButtonBase.IsPressed" Value="True" />
                            <Trigger Property="UIElement.IsEnabled" Value="False" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="ButtonStyleCancelBlue" TargetType="{x:Type Button}">
            <Setter Property="Control.Padding" Value="0" />
            <Setter Property="FrameworkElement.Cursor" Value="Hand" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed" />
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Image Margin="0,0,0,0" VerticalAlignment="Center" Source="/PhotoSW;component/images/CancelNew.png" />
                            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                            <Rectangle Name="rectangle" Fill="#FFFFFFFF" Opacity="0" Margin="0" RadiusX="10" RadiusY="10" Stroke="{x:Null}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsFocused" Value="True" />
                            <Trigger Property="Button.IsDefaulted" Value="True" />
                            <Trigger Property="UIElement.IsMouseOver" Value="True" />
                            <Trigger Property="ButtonBase.IsPressed" Value="True" />
                            <Trigger Property="UIElement.IsEnabled" Value="False" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ButtonStyleOkBlue" TargetType="{x:Type Button}">
            <Setter Property="Control.Padding" Value="0" />
            <Setter Property="FrameworkElement.Cursor" Value="Hand" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed" />
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <!--<Image Margin="0,0,0,0" VerticalAlignment="Center" Source="/PhotoSW;component/images/OkBlue.png" />-->
                            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                            <Rectangle Name="rectangle" Fill="#FFFFFFFF" Opacity="0" Margin="0" RadiusX="10" RadiusY="10" Stroke="{x:Null}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsFocused" Value="True" />
                            <Trigger Property="Button.IsDefaulted" Value="True" />
                            <Trigger Property="UIElement.IsMouseOver" Value="True" />
                            <Trigger Property="ButtonBase.IsPressed" Value="True" />
                            <Trigger Property="UIElement.IsEnabled" Value="False" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- -->
        <Style x:Key="ButtonStyleSubmitGreen" TargetType="{x:Type Button}">
            <Setter Property="Control.Padding" Value="0" />
            <Setter Property="FrameworkElement.Cursor" Value="Hand" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed" />
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Image Margin="0,0,0,0" VerticalAlignment="Center" Source="/PhotoSW;component/images/icon_green_ok.png" Stretch="Fill" />
                            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                            <Rectangle Name="rectangle" Fill="#FFFFFFFF" Opacity="0" Margin="0" RadiusX="10" RadiusY="10" Stroke="{x:Null}" />

                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsFocused" Value="True" />
                            <Trigger Property="Button.IsDefaulted" Value="True" />
                            <Trigger Property="UIElement.IsMouseOver" Value="True" />
                            <Trigger Property="ButtonBase.IsPressed" Value="True" />
                            <Trigger Property="UIElement.IsEnabled" Value="False" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ButtonStyleSubmitBlue" TargetType="{x:Type Button}">
            <Setter Property="Control.Padding" Value="0" />
            <Setter Property="FrameworkElement.Cursor" Value="Hand" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed" />
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Image Margin="0,0,0,0" VerticalAlignment="Center" Source="/PhotoSW;component/images/OkBlue.png" Stretch="Fill" />
                            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                            <Rectangle Name="rectangle" Fill="#FFFFFFFF" Opacity="0" Margin="0" RadiusX="10" RadiusY="10" Stroke="{x:Null}" />

                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsFocused" Value="True" />
                            <Trigger Property="Button.IsDefaulted" Value="True" />
                            <Trigger Property="UIElement.IsMouseOver" Value="True" />
                            <Trigger Property="ButtonBase.IsPressed" Value="True" />
                            <Trigger Property="UIElement.IsEnabled" Value="False" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="ButtonStyleBgGreensubmit" TargetType="{x:Type Button}">
            <Setter Property="Control.Padding" Value="0" />
            <Setter Property="FrameworkElement.Cursor" Value="Hand" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed" />
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <!--<Image Margin="0,0,0,0" VerticalAlignment="Center" Source="/PhotoSW;component/images/green_button.png" Stretch="Fill" />-->
                            <Image Margin="0,0,0,0" VerticalAlignment="Center" Source="/PhotoSW;component/images/Greenbtn.png" Stretch="Fill" />
                            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                            <Rectangle Name="rectangle" Fill="#FFFFFFFF" Opacity="0" Margin="0" RadiusX="10" RadiusY="10" Stroke="{x:Null}" />

                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsFocused" Value="True" />
                            <Trigger Property="Button.IsDefaulted" Value="True" />
                            <Trigger Property="UIElement.IsMouseOver" Value="True" />
                            <Trigger Property="ButtonBase.IsPressed" Value="True" />
                            <Trigger Property="UIElement.IsEnabled" Value="False" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ButtonStylesubmit" TargetType="{x:Type Button}">
            <Setter Property="Control.Padding" Value="0" />
            <Setter Property="FrameworkElement.Cursor" Value="Hand" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed" />
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Image Margin="0,0,0,0" VerticalAlignment="Center" Source="/PhotoSW;component/images/green_button.png" Stretch="Fill" />
                            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                            <Rectangle Name="rectangle" Fill="#FFFFFFFF" Opacity="0" Margin="0" RadiusX="10" RadiusY="10" Stroke="{x:Null}" />
                           
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsFocused" Value="True" />
                            <Trigger Property="Button.IsDefaulted" Value="True" />
                            <Trigger Property="UIElement.IsMouseOver" Value="True" />
                            <Trigger Property="ButtonBase.IsPressed" Value="True" />
                            <Trigger Property="UIElement.IsEnabled" Value="False" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        
        <Style x:Key="ButtonStyleRed" TargetType="{x:Type Button}">
            <Setter Property="Control.Padding" Value="0" />
            <Setter Property="FrameworkElement.Cursor" Value="Hand" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed" />
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Image Margin="0,0,0,0" VerticalAlignment="Center" Source="/PhotoSW;component/images/red_button.png" />
                            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                            <Rectangle Name="rectangle" Fill="#FFFFFFFF" Opacity="0" Margin="0" RadiusX="10" RadiusY="10" Stroke="{x:Null}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsFocused" Value="True" />
                            <Trigger Property="Button.IsDefaulted" Value="True" />
                            <Trigger Property="UIElement.IsMouseOver" Value="True" />
                            <Trigger Property="ButtonBase.IsPressed" Value="True" />
                            <Trigger Property="UIElement.IsEnabled" Value="False" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyleRedFlexibleWidth" TargetType="{x:Type Button}">
            <Setter Property="Control.Padding" Value="0" />
            <Setter Property="FrameworkElement.Cursor" Value="Hand" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed" />
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid.Background>
                                <ImageBrush ImageSource="/PhotoSW;component/images/red_button.png" />
                            </Grid.Background>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                            <Rectangle Name="rectangle" Fill="#FFFFFFFF" Opacity="0" Margin="0" RadiusX="10" RadiusY="10" Stroke="{x:Null}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsFocused" Value="True" />
                            <Trigger Property="Button.IsDefaulted" Value="True" />
                            <Trigger Property="UIElement.IsMouseOver" Value="True" />
                            <Trigger Property="ButtonBase.IsPressed" Value="True" />
                            <Trigger Property="UIElement.IsEnabled" Value="False" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyleZoomin" TargetType="{x:Type Button}">
            <Setter Property="Control.Padding" Value="0" />
            <Setter Property="FrameworkElement.Cursor" Value="Hand" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed" />
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Image Margin="0,0,0,0" VerticalAlignment="Center" Source="/PhotoSW;component/images/zoom-in-icon.png" />
                            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                            <Rectangle Name="rectangle" Fill="#FFFFFFFF" Opacity="0" Margin="0" RadiusX="10" RadiusY="10" Stroke="{x:Null}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsFocused" Value="True" />
                            <Trigger Property="Button.IsDefaulted" Value="True" />
                            <Trigger Property="UIElement.IsMouseOver" Value="True" />
                            <Trigger Property="ButtonBase.IsPressed" Value="True" />
                            <Trigger Property="UIElement.IsEnabled" Value="False" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyleZoomout" TargetType="{x:Type Button}">
            <Setter Property="Control.Padding" Value="0" />
            <Setter Property="FrameworkElement.Cursor" Value="Hand" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed" />
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Image Margin="0,0,0,0" VerticalAlignment="Center" Source="/PhotoSW;component/images/zoom-out-icon.png" />
                            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                            <Rectangle Name="rectangle" Fill="#FFFFFFFF" Opacity="0" Margin="0" RadiusX="10" RadiusY="10" Stroke="{x:Null}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsFocused" Value="True" />
                            <Trigger Property="Button.IsDefaulted" Value="True" />
                            <Trigger Property="UIElement.IsMouseOver" Value="True" />
                            <Trigger Property="ButtonBase.IsPressed" Value="True" />
                            <Trigger Property="UIElement.IsEnabled" Value="False" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{x:Type NavigationWindow}" TargetType="{x:Type NavigationWindow}">
            <Setter Property="Window.WindowStyle" Value="None" />
            <Setter Property="NavigationWindow.ShowsNavigationUI" Value="False" />
            <Setter Property="Window.WindowState" Value="Maximized" />
            <Setter Property="Window.Topmost" Value="True" />
            <Setter Property="FrameworkElement.Cursor" Value="None" />
        </Style>
        <SolidColorBrush x:Key="ScrollBarDisabledBackground" Color="#F4F4F4" />
        <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
            <Setter Property="UIElement.Focusable" Value="False" />
            <Setter Property="Control.IsTabStop" Value="False" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border HorizontalAlignment="Stretch" Height="Auto" Margin="0" VerticalAlignment="Stretch" Width="Auto" Background="#00000000">
                            <Image Source="/PhotoSW;component/images/scroll-btn-up.png" Stretch="Fill" VerticalAlignment="Center" HorizontalAlignment="Center" Width="150" Height="40" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
            <Setter Property="Control.Background" Value="#00FFFFFF" />
            <Setter Property="UIElement.Focusable" Value="False" />
            <Setter Property="Control.IsTabStop" Value="False" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Control.Background}" Height="{TemplateBinding FrameworkElement.Height}" Width="{TemplateBinding FrameworkElement.Width}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
            <Setter Property="Control.IsTabStop" Value="False" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">

                        <!--<sc:ScrollChrome Name="Chrome" RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" RenderPressed="{TemplateBinding Thumb.IsDragging}" SnapsToDevicePixels="True" ScrollChrome.ScrollGlyph="{TemplateBinding Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph}" />-->
                        <sc:ScrollChrome Name="Chrome" RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" RenderPressed="{TemplateBinding Thumb.IsDragging}" SnapsToDevicePixels="True"  />

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="HorizontalScrollBarBackground" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#E1E1E1" Offset="0" />
            <GradientStop Color="#EDEDED" Offset="0.20" />
            <GradientStop Color="#EDEDED" Offset="0.80" />
            <GradientStop Color="#E3E3E3" Offset="1" />
        </LinearGradientBrush>
        <Style x:Key="HorizontalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
            <Setter Property="Control.Background" Value="#00FFFFFF" />
            <Setter Property="UIElement.Focusable" Value="False" />
            <Setter Property="Control.IsTabStop" Value="False" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Control.Background}" Height="{TemplateBinding FrameworkElement.Height}" Width="{TemplateBinding FrameworkElement.Width}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarButtonHorizontal" TargetType="{x:Type RepeatButton}">
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
            <Setter Property="UIElement.Focusable" Value="False" />
            <Setter Property="Control.IsTabStop" Value="False" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border HorizontalAlignment="Stretch" Height="Auto" Margin="0" VerticalAlignment="Stretch" Width="Auto" Background="#00000000" RenderTransformOrigin="0.5,0.5">
                            <Border.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="0" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Border.RenderTransform>
                            <Image Source="/PhotoSW;component/images/scroll-btn-up.png" Stretch="Fill" VerticalAlignment="Center" HorizontalAlignment="Center" Width="150" Height="40" RenderTransformOrigin="0.5,0.5">
                                <Image.LayoutTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform Angle="90" />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Image.LayoutTransform>
                            </Image>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DigiScrollBarStyle" TargetType="{x:Type ScrollBar}">
            <Setter Property="Control.Background" Value="{x:Null}" />
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="FrameworkElement.Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
            <Setter Property="FrameworkElement.MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid Name="Bg" SnapsToDevicePixels="True" Margin="0,-19.333,0,-17.333">
                            <Grid.RowDefinitions>
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" Height="Auto" MinHeight="17" />
                                <RowDefinition Height="0.894*" />
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" Height="0.106*" />
                            </Grid.RowDefinitions>
                            <RepeatButton Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Style="{StaticResource ScrollBarButton}" sc:ScrollChrome.ScrollGlyph="UpArrow" Margin="0,-37.5,0,0" Height="Auto" VerticalAlignment="Stretch" />
                            <Track Name="PART_Track" IsDirectionReversed="True" IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Grid.Row="1" Visibility="Collapsed" HorizontalAlignment="Right" Margin="0,0,-30,0" Width="17">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource VerticalScrollBarPageButton}" />
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VerticalScrollBarPageButton}" />
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBarThumb}" sc:ScrollChrome.ScrollGlyph="VerticalGripper" />
                                </Track.Thumb>
                            </Track>
                            <RepeatButton Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Grid.Row="2" Style="{DynamicResource DigiDownRepeatButtonStyle}" sc:ScrollChrome.ScrollGlyph="DownArrow" Margin="0,0,0,-37.5" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="ScrollBar.Orientation" Value="Horizontal">
                    <Setter Property="FrameworkElement.Width" Value="Auto" />
                    <Setter Property="FrameworkElement.MinWidth" Value="0" />
                    <Setter Property="FrameworkElement.Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                    <Setter Property="FrameworkElement.MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                    <Setter Property="Control.Background" Value="{StaticResource HorizontalScrollBarBackground}" />
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid Name="Bg" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                        <ColumnDefinition Width="0.00001*" />
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                    </Grid.ColumnDefinitions>
                                    <RepeatButton Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Style="{DynamicResource ScrollBarButtonHorizontal}" sc:ScrollChrome.ScrollGlyph="LeftArrow" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Stretch" Margin="-70,0,0,0" Width="Auto" Height="Auto" VerticalAlignment="Stretch">
                                        <RepeatButton.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleY="1" ScaleX="-1" />
                                                <SkewTransform AngleY="0" AngleX="0" />
                                                <RotateTransform Angle="0" />
                                                <TranslateTransform />
                                            </TransformGroup>
                                        </RepeatButton.RenderTransform>
                                    </RepeatButton>
                                    <Track Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Visibility="Collapsed">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource HorizontalScrollBarPageButton}" />
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource HorizontalScrollBarPageButton}" />
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource ScrollBarThumb}" sc:ScrollChrome.ScrollGlyph="HorizontalGripper" />
                                        </Track.Thumb>
                                    </Track>
                                    <RepeatButton Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Style="{DynamicResource ScrollBarButtonHorizontal}" sc:ScrollChrome.ScrollGlyph="RightArrow" RenderTransformOrigin="0.5,0.5" Height="Auto" Margin="0,0,-70,0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Width="Auto">
                                        <RepeatButton.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform />
                                                <SkewTransform />
                                                <RotateTransform Angle="0" />
                                                <TranslateTransform />
                                            </TransformGroup>
                                        </RepeatButton.RenderTransform>
                                    </RepeatButton>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DigiDownRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
            <Setter Property="UIElement.Focusable" Value="False" />
            <Setter Property="Control.IsTabStop" Value="False" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="#00000000" Margin="0">
                            <Image Margin="0" Source="/PhotoSW;component/images/scroll-btn.png" Stretch="Fill" Width="150" Height="40" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DigiScrollBarStyleSearch" TargetType="{x:Type ScrollBar}">
            <Setter Property="Control.Background" Value="{x:Null}" />
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="FrameworkElement.Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
            <Setter Property="FrameworkElement.MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid Name="Bg" SnapsToDevicePixels="True" Margin="0,-19.333,0,-17.333">
                            <Grid.RowDefinitions>
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" Height="Auto" MinHeight="17" />
                                <RowDefinition Height="0.894*" />
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" Height="0.106*" />
                            </Grid.RowDefinitions>
                            <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Style="{StaticResource ScrollBarButton}" sc:ScrollChrome.ScrollGlyph="UpArrow" Margin="0,-37.5,0,0" Height="Auto" VerticalAlignment="Stretch" />
                            <Track Name="PART_Track" IsDirectionReversed="True" IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Grid.Row="1" Visibility="Collapsed" HorizontalAlignment="Right" Margin="0,0,-30,0" Width="17">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource VerticalScrollBarPageButton}" />
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VerticalScrollBarPageButton}" />
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBarThumb}" sc:ScrollChrome.ScrollGlyph="VerticalGripper" />
                                </Track.Thumb>
                            </Track>
                            <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Grid.Row="2" Style="{DynamicResource DigiDownRepeatButtonStyle}" sc:ScrollChrome.ScrollGlyph="DownArrow" Margin="0,0,0,-37.5" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="ScrollBar.Orientation" Value="Horizontal">
                    <Setter Property="FrameworkElement.Width" Value="Auto" />
                    <Setter Property="FrameworkElement.MinWidth" Value="0" />
                    <Setter Property="FrameworkElement.Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                    <Setter Property="FrameworkElement.MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                    <Setter Property="Control.Background" Value="{StaticResource HorizontalScrollBarBackground}" />
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid Name="Bg" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                        <ColumnDefinition Width="0.00001*" />
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                    </Grid.ColumnDefinitions>
                                    <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Style="{DynamicResource ScrollBarButtonHorizontal}" sc:ScrollChrome.ScrollGlyph="LeftArrow" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Stretch" Margin="-70,0,0,0" Width="Auto" Height="Auto" VerticalAlignment="Stretch">
                                        <RepeatButton.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleY="1" ScaleX="-1" />
                                                <SkewTransform AngleY="0" AngleX="0" />
                                                <RotateTransform Angle="0" />
                                                <TranslateTransform />
                                            </TransformGroup>
                                        </RepeatButton.RenderTransform>
                                    </RepeatButton>
                                    <Track Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Visibility="Collapsed">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource HorizontalScrollBarPageButton}" />
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource HorizontalScrollBarPageButton}" />
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource ScrollBarThumb}" sc:ScrollChrome.ScrollGlyph="HorizontalGripper" />
                                        </Track.Thumb>
                                    </Track>
                                    <RepeatButton Grid.Column="2" Command="{x:Static ScrollBar.PageRightCommand}" IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Style="{DynamicResource ScrollBarButtonHorizontal}" sc:ScrollChrome.ScrollGlyph="RightArrow" RenderTransformOrigin="0.5,0.5" Height="Auto" Margin="0,0,-70,0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Width="Auto">
                                        <RepeatButton.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform />
                                                <SkewTransform />
                                                <RotateTransform Angle="0" />
                                                <TranslateTransform />
                                            </TransformGroup>
                                        </RepeatButton.RenderTransform>
                                    </RepeatButton>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <ControlTemplate x:Key="DigiScrollViewerControlTemplate" TargetType="{x:Type ScrollViewer}">
            <Grid Name="Grid">
                <Rectangle Name="Corner" Grid.Column="1" Grid.Row="1" Visibility="Collapsed" Fill="{x:Null}" />
                <ScrollContentPresenter Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Content="{TemplateBinding ContentControl.Content}" Grid.Column="0" Margin="{TemplateBinding Control.Padding}" Grid.Row="0" />
                <!--<ScrollBar Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}" ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}" Margin="0" HorizontalAlignment="Stretch" Style="{DynamicResource DigiScrollBarStyleSearch}" Width="Auto" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />-->
                 <ScrollBar Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}" ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}" Margin="0" HorizontalAlignment="Stretch" Style="{DynamicResource DigiScrollBarStyleSearch}" Width="Auto" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                <ScrollBar Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="0" Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}" Style="{DynamicResource DigiScrollBarStyleSearch}" VerticalAlignment="Stretch" Height="Auto" Margin="0" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Background="{x:Null}" />
            </Grid>
        </ControlTemplate>
        <LinearGradientBrush x:Key="VerticalScrollBarBackground" EndPoint="1,0" StartPoint="0,0">
            <GradientStop Color="#E1E1E1" Offset="0" />
            <GradientStop Color="#EDEDED" Offset="0.20" />
            <GradientStop Color="#EDEDED" Offset="0.80" />
            <GradientStop Color="#E3E3E3" Offset="1" />
        </LinearGradientBrush>
        <Style x:Key="DigiScrollChromeStyle" TargetType="{x:Type Microsoft_Windows_Themes:ScrollChrome}" />
        <ControlTemplate x:Key="DigiListBoxControlTemplate" TargetType="{x:Type ListBox}">
            <Border Name="Bd" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" Padding="1" SnapsToDevicePixels="True">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="ValidationStates">
                        <VisualState x:Name="Valid" />
                        <VisualState x:Name="InvalidFocused" />
                        <VisualState x:Name="InvalidUnfocused" />
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <ScrollViewer Focusable="False" Padding="{TemplateBinding Control.Padding}" Template="{DynamicResource DigiScrollViewerControlTemplate}">
                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Margin="15,0,0,0" Style="{DynamicResource digiItemsPresenterStyle}" HorizontalAlignment="Center" />
                </ScrollViewer>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                    <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Border.Background" />
                </Trigger>
                <Trigger Property="ItemsControl.IsGrouping" Value="True">
                    <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        
        <ControlTemplate x:Key="DigiListBoxControlTemplate10" TargetType="{x:Type ListBox}">
            <Border Name="Bd" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" Padding="1" SnapsToDevicePixels="True">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="ValidationStates">
                        <VisualState x:Name="Valid" />
                        <VisualState x:Name="InvalidFocused" />
                        <VisualState x:Name="InvalidUnfocused" />
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <ScrollViewer Focusable="False" Padding="{TemplateBinding Control.Padding}" Template="{DynamicResource DigiScrollViewerControlTemplate}">
                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Margin="5,0,0,0" Style="{DynamicResource digiItemsPresenterStyle}" HorizontalAlignment="Center" />
                   
                </ScrollViewer>
                                      
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                    <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Border.Background" />
                </Trigger>
                <Trigger Property="ItemsControl.IsGrouping" Value="True">
                    <Setter Property="ScrollViewer.CanContentScroll" Value="False" /> 
                </Trigger>
                
            </ControlTemplate.Triggers>
        </ControlTemplate>
        
        <Style x:Key="DigiframeButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Control.Padding" Value="0" />
            <Setter Property="FrameworkElement.Cursor" Value="Hand" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Rectangle RadiusX="5" RadiusY="5" Margin="-3" Stroke="{x:Null}">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="Black" Offset="0" />
                                        <GradientStop Color="#FF504D4D" Offset="1" />
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsFocused" Value="True" />
                            <Trigger Property="Button.IsDefaulted" Value="True" />
                            <Trigger Property="UIElement.IsMouseOver" Value="True" />
                            <Trigger Property="ButtonBase.IsPressed" Value="True" />
                            <Trigger Property="UIElement.IsEnabled" Value="False" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#F3F3F3" Offset="0" />
            <GradientStop Color="#EBEBEB" Offset="0.5" />
            <GradientStop Color="#DDDDDD" Offset="0.5" />
            <GradientStop Color="#CDCDCD" Offset="1" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070" />
        <Style x:Key="DigiKeyButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="0" />
            <Setter Property="Control.Foreground" Value="#FF910A0A" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="border" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Padding="2" Background="{x:Null}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image1">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="viewbox">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="2.5" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Image Name="image" HorizontalAlignment="Stretch" Height="Auto" Source="/PhotoSW;component/images/keyuptst.png" Stretch="Fill" VerticalAlignment="Stretch" Width="Auto" Margin="0" Visibility="Visible">
                                    <Image.Effect>
                                        <DropShadowEffect Direction="272" BlurRadius="4" ShadowDepth="9" Opacity="0.945" />
                                    </Image.Effect>
                                </Image>
                                <Image Name="image1" Margin="0,9,0,-2" Source="/PhotoSW;component/images/key-pressed.png" Stretch="Fill" Visibility="Collapsed" RenderTransformOrigin="0.5,0.5">
                                    <Image.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Image.RenderTransform>
                                </Image>
                                <Viewbox Name="viewbox" HorizontalAlignment="Center" Margin="10" Stretch="Uniform" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                                    <Viewbox.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Viewbox.RenderTransform>
                                    <ContentPresenter Name="contentPresenter" RecognizesAccessKey="True" RenderTransformOrigin="0.5,0.5" Height="Auto" Width="Auto" HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <ContentPresenter.Effect>
                                            <DropShadowEffect BlurRadius="1" ShadowDepth="1" Color="White" Opacity="0.665" Direction="328" />
                                        </ContentPresenter.Effect>
                                        <ContentPresenter.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform />
                                                <SkewTransform />
                                                <RotateTransform />
                                                <TranslateTransform />
                                            </TransformGroup>
                                        </ContentPresenter.RenderTransform>
                                    </ContentPresenter>
                                </Viewbox>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.FontFamily" Value="Franklin Gothic Demi" />
            <Setter Property="Control.FontSize" Value="10.667" />
            <Setter Property="Control.FontWeight" Value="Bold" />
            <Setter Property="FrameworkElement.Width" Value="Auto" />
        </Style>
        <Style x:Key="DigiKeyButtonChromeStyle" TargetType="{x:Type Microsoft_Windows_Themes:ButtonChrome}" />
        <Style x:Key="DigiKeyDelButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="0" />
            <Setter Property="Control.Foreground" Value="#FFFFFFFF" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="border" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Padding="2" Background="{x:Null}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image1">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="viewbox">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="2.5" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Image Name="image" HorizontalAlignment="Stretch" Height="Auto" Source="/PhotoSW;component/images/key-delete-normal.png" Stretch="Fill" VerticalAlignment="Stretch" Width="Auto" Margin="0,0,0,-1.375" Visibility="Visible">
                                    <Image.Effect>
                                        <DropShadowEffect Direction="272" BlurRadius="4" ShadowDepth="9" Opacity="0.945" />
                                    </Image.Effect>
                                </Image>
                                <Image Name="image1" Margin="0,9,0,-2" Source="/PhotoSW;component/images/key-delete-pressed.png" Stretch="Fill" Visibility="Collapsed" RenderTransformOrigin="0.5,0.5">
                                    <Image.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Image.RenderTransform>
                                </Image>
                                <Viewbox Name="viewbox" HorizontalAlignment="Center" Margin="10" Stretch="Uniform" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                                    <Viewbox.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Viewbox.RenderTransform>
                                    <ContentPresenter Name="contentPresenter" RecognizesAccessKey="True" RenderTransformOrigin="0.5,0.5" Height="Auto" Width="Auto" HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <ContentPresenter.Effect>
                                            <DropShadowEffect ShadowDepth="1" Direction="90" BlurRadius="1" Opacity="0.31" />
                                        </ContentPresenter.Effect>
                                        <ContentPresenter.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform />
                                                <SkewTransform />
                                                <RotateTransform />
                                                <TranslateTransform />
                                            </TransformGroup>
                                        </ContentPresenter.RenderTransform>
                                    </ContentPresenter>
                                </Viewbox>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.FontFamily" Value="Franklin Gothic Demi" />
            <Setter Property="Control.FontSize" Value="16" />
            <Setter Property="Control.FontWeight" Value="Bold" />
            <Setter Property="FrameworkElement.Width" Value="Auto" />
        </Style>
        <Style x:Key="DigiKeyCanButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="0" />
            <Setter Property="Control.Foreground" Value="#FFFFFFFF" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="border" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Padding="2" Background="{x:Null}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image1">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="viewbox">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="2.5" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Image Name="image" HorizontalAlignment="Stretch" Height="Auto" Source="/PhotoSW;component/images/sml-key-cancel-normal.png" Stretch="Fill" VerticalAlignment="Stretch" Width="Auto" Margin="0,0,0,-1.375" Visibility="Visible">
                                    <Image.Effect>
                                        <DropShadowEffect Direction="272" BlurRadius="4" ShadowDepth="9" Opacity="0.945" />
                                    </Image.Effect>
                                </Image>
                                <Image Name="image1" Margin="0,9,0,-2" Source="/PhotoSW;component/images/sml-key-cancel-pressed.png" Stretch="Fill" Visibility="Collapsed" RenderTransformOrigin="0.5,0.5">
                                    <Image.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Image.RenderTransform>
                                </Image>
                                <Viewbox Name="viewbox" HorizontalAlignment="Center" Margin="10" Stretch="Uniform" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                                    <Viewbox.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Viewbox.RenderTransform>
                                    <ContentPresenter Name="contentPresenter" RecognizesAccessKey="True" RenderTransformOrigin="0.5,0.5" Height="Auto" Width="Auto" HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <ContentPresenter.Effect>
                                            <DropShadowEffect ShadowDepth="1" Direction="90" BlurRadius="1" Opacity="0.31" />
                                        </ContentPresenter.Effect>
                                        <ContentPresenter.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform />
                                                <SkewTransform />
                                                <RotateTransform />
                                                <TranslateTransform />
                                            </TransformGroup>
                                        </ContentPresenter.RenderTransform>
                                    </ContentPresenter>
                                </Viewbox>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.FontFamily" Value="Franklin Gothic Demi" />
            <Setter Property="Control.FontSize" Value="16" />
            <Setter Property="Control.FontWeight" Value="Bold" />
            <Setter Property="FrameworkElement.Width" Value="Auto" />
        </Style>
        <Style x:Key="DigiKeyEnterBigButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="0" />
            <Setter Property="Control.Foreground" Value="#FFFFFFFF" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="border" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Padding="2" Background="{x:Null}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image1">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="viewbox">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="2.5" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Image Name="image" HorizontalAlignment="Stretch" Height="Auto" Source="/PhotoSW;component/images/sml-key-enter-normal.png" Stretch="Fill" VerticalAlignment="Stretch" Width="Auto" Margin="0,0,0,-1.375" Visibility="Visible">
                                    <Image.Effect>
                                        <DropShadowEffect Direction="272" BlurRadius="4" ShadowDepth="9" Opacity="0.945" />
                                    </Image.Effect>
                                </Image>
                                <Image Name="image1" Margin="0,9,0,-2" Source="/PhotoSW;component/images/sml-key-enter-pressed.png" Stretch="Fill" Visibility="Collapsed" RenderTransformOrigin="0.5,0.5">
                                    <Image.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Image.RenderTransform>
                                </Image>
                                <Viewbox Name="viewbox" HorizontalAlignment="Center" Margin="10" Stretch="Uniform" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                                    <Viewbox.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Viewbox.RenderTransform>
                                    <ContentPresenter Name="contentPresenter" RecognizesAccessKey="True" RenderTransformOrigin="0.5,0.5" Height="Auto" Width="Auto" HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <ContentPresenter.Effect>
                                            <DropShadowEffect ShadowDepth="1" Direction="90" BlurRadius="1" Opacity="0.31" />
                                        </ContentPresenter.Effect>
                                        <ContentPresenter.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform />
                                                <SkewTransform />
                                                <RotateTransform />
                                                <TranslateTransform />
                                            </TransformGroup>
                                        </ContentPresenter.RenderTransform>
                                    </ContentPresenter>
                                </Viewbox>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.FontFamily" Value="Franklin Gothic Demi" />
            <Setter Property="Control.FontSize" Value="16" />
            <Setter Property="Control.FontWeight" Value="Bold" />
            <Setter Property="FrameworkElement.Width" Value="Auto" />
        </Style>
        <Style x:Key="DigiKeyEnterButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="0" />
            <Setter Property="Control.Foreground" Value="#FFFFFFFF" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="border" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Padding="2" Background="{x:Null}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image1">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="viewbox">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="2.5" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Image Name="image" HorizontalAlignment="Stretch" Height="Auto" Source="/PhotoSW;component/images/key-enter-normal.png" Stretch="Fill" VerticalAlignment="Stretch" Width="Auto" Margin="0" Visibility="Visible">
                                    <Image.Effect>
                                        <DropShadowEffect Direction="272" BlurRadius="4" ShadowDepth="9" Opacity="0.945" />
                                    </Image.Effect>
                                </Image>
                                <Image Name="image1" Margin="0,9,0,-2" Source="/PhotoSW;component/images/key-enter-pressed.png" Stretch="Fill" Visibility="Collapsed" RenderTransformOrigin="0.5,0.5">
                                    <Image.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Image.RenderTransform>
                                </Image>
                                <Viewbox Name="viewbox" HorizontalAlignment="Center" Margin="10" Stretch="Uniform" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                                    <Viewbox.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Viewbox.RenderTransform>
                                    <ContentPresenter Name="contentPresenter" RecognizesAccessKey="True" RenderTransformOrigin="0.5,0.5" Height="Auto" Width="Auto" HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <ContentPresenter.Effect>
                                            <DropShadowEffect ShadowDepth="1" Direction="90" BlurRadius="1" Opacity="0.31" />
                                        </ContentPresenter.Effect>
                                        <ContentPresenter.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform />
                                                <SkewTransform />
                                                <RotateTransform />
                                                <TranslateTransform />
                                            </TransformGroup>
                                        </ContentPresenter.RenderTransform>
                                    </ContentPresenter>
                                </Viewbox>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.FontFamily" Value="Franklin Gothic Demi" />
            <Setter Property="Control.FontSize" Value="10.667" />
            <Setter Property="Control.FontWeight" Value="Bold" />
            <Setter Property="FrameworkElement.Width" Value="Auto" />
        </Style>
        <Style x:Key="DigiKeyAaButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="0" />
            <Setter Property="Control.Foreground" Value="#FFFFFFFF" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="border" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Padding="2" Background="{x:Null}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image1">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="viewbox">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="2.5" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Image Name="image" HorizontalAlignment="Stretch" Height="Auto" Source="/PhotoSW;component/images/keyuptst.png" Stretch="Fill" VerticalAlignment="Stretch" Width="Auto" Margin="0" Visibility="Visible">
                                    <Image.Effect>
                                        <DropShadowEffect Direction="272" BlurRadius="4" ShadowDepth="9" Opacity="0.945" />
                                    </Image.Effect>
                                </Image>
                                <Image Name="image1" Margin="0,9,0,-2" Source="/PhotoSW;component/images/key-pressed.png" Stretch="Fill" Visibility="Collapsed" RenderTransformOrigin="0.5,0.5">
                                    <Image.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Image.RenderTransform>
                                </Image>
                                <Viewbox Name="viewbox" HorizontalAlignment="Center" Margin="10" Stretch="Uniform" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                                    <Viewbox.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Viewbox.RenderTransform>
                                    <Grid Height="12.093" Width="17.593">
                                        <ContentPresenter Name="contentPresenter" RecognizesAccessKey="True" RenderTransformOrigin="0.5,0.5" Height="Auto" Width="Auto" HorizontalAlignment="Center" VerticalAlignment="Center">
                                            <ContentPresenter.Effect>
                                                <DropShadowEffect ShadowDepth="1" Direction="90" BlurRadius="1" Opacity="0.31" />
                                            </ContentPresenter.Effect>
                                            <ContentPresenter.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform />
                                                    <SkewTransform />
                                                    <RotateTransform />
                                                    <TranslateTransform />
                                                </TransformGroup>
                                            </ContentPresenter.RenderTransform>
                                        </ContentPresenter>
                                    </Grid>
                                </Viewbox>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.FontFamily" Value="Franklin Gothic Demi" />
            <Setter Property="Control.FontSize" Value="10.667" />
            <Setter Property="Control.FontWeight" Value="Bold" />
            <Setter Property="FrameworkElement.Width" Value="Auto" />
        </Style>
        <Style x:Key="digiItemsPresenterStyle" TargetType="{x:Type ItemsPresenter}" />
        <LinearGradientBrush x:Key="HorizontalSliderThumbHoverBackgroundInverted" EndPoint="0,0" StartPoint="0,1">
            <GradientStop Color="white" Offset="0" />
            <GradientStop Color="#B8E2F9" Offset="0.5" />
            <GradientStop Color="#B0DFF8" Offset="1" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="HorizontalSliderThumbHoverBorder" Color="#3C7FB1" />
        <LinearGradientBrush x:Key="HorizontalSliderThumbPressedBackgroundInverted" EndPoint="0,0" StartPoint="0,1">
            <GradientStop Color="#B8E4FA" Offset="0.25" />
            <GradientStop Color="#5EB4E3" Offset="0.5" />
            <GradientStop Color="#4C8BB4" Offset="1" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="HorizontalSliderThumbPressedBorder" Color="#2C628B" />
        <Geometry x:Key="SliderThumbDisabledGeometry">M -5,-10.5 L 5,-10.5 L 5,10.5 L -5,10.5 Z</Geometry>
        <Geometry x:Key="SliderPointedThumbDisabledGeometry">M 4.5,-8.5 L -4.5,-8.5 L -4.5,4.5 L -0.5,8.5 L 0.5,8.5 L 4.5,4.5 Z</Geometry>
        <Geometry x:Key="SliderPointedThumbOuterBorderGeometry">M 4.5,-7.5 A 1 1 0 0 0 3.5,-8.5 L -3.5,-8.5 A 1 1 0 0 0 -4.5,-7.5 L -4.5,4.5 L -0.5,8.5 L 0.5,8.5 L 4.5,4.5 Z</Geometry>
        <LinearGradientBrush x:Key="HorizontalSliderThumbNormalBackgroundInverted" EndPoint="0,0" StartPoint="0,1">
            <GradientStop Color="White" Offset="0" />
            <GradientStop Color="#F0EFEF" Offset="0.4" />
            <GradientStop Color="#D6D5D5" Offset=".8" />
        </LinearGradientBrush>
        <Geometry x:Key="SliderPointedThumbMiddleBorderGeometry">M 3.5,-7.5 L -3.5,-7.5 L -3.5,4.5 L 0,8 L 3.5,4.5 Z</Geometry>
        <Style x:Key="HorizontalSliderUpThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="UIElement.Focusable" Value="False" />
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
            <Setter Property="FrameworkElement.Height" Value="18" />
            <Setter Property="FrameworkElement.Width" Value="10" />
            <Setter Property="Control.Foreground" Value="#FF808080" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Canvas SnapsToDevicePixels="True">
                            <Canvas.RenderTransform>
                                <TransformGroup>
                                    <TransformGroup.Children>
                                        <TransformCollection>
                                            <RotateTransform Angle="180" />
                                            <TranslateTransform X="5" Y="9" />
                                        </TransformCollection>
                                    </TransformGroup.Children>
                                </TransformGroup>
                            </Canvas.RenderTransform>
                            <Path Name="Background" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" Fill="{StaticResource HorizontalSliderThumbNormalBackgroundInverted}" />
                            <Path Name="InnerBorder" Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}" Stroke="#FFFFFFFF" StrokeThickness="1" />
                            <Path Name="OuterBorder" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" Stroke="#FF929292" StrokeThickness="1" />
                        </Canvas>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                <Setter TargetName="Background" Value="{StaticResource HorizontalSliderThumbHoverBackgroundInverted}" Property="Shape.Fill" />
                                <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}" Property="Shape.Stroke" />
                            </Trigger>
                            <Trigger Property="Control.Foreground" Value="#FF0000FF">
                                <Setter TargetName="Background" Value="{StaticResource HorizontalSliderThumbHoverBackgroundInverted}" Property="Shape.Fill" />
                                <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}" Property="Shape.Stroke" />
                            </Trigger>
                            <Trigger Property="Thumb.IsDragging" Value="True">
                                <Setter TargetName="Background" Value="{StaticResource HorizontalSliderThumbPressedBackgroundInverted}" Property="Shape.Fill" />
                                <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbPressedBorder}" Property="Shape.Stroke" />
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter TargetName="Background" Property="Shape.Fill" Value="#FFF4F4F4" />
                                <Setter TargetName="InnerBorder" Value="{x:Null}" Property="Shape.Stroke" />
                                <Setter TargetName="OuterBorder" Value="{StaticResource SliderThumbDisabledGeometry}" Property="Path.Data" />
                                <Setter TargetName="OuterBorder" Property="Shape.Stroke" Value="#FFAEB1AF" />
                                <Setter TargetName="OuterBorder" Value="{StaticResource SliderPointedThumbDisabledGeometry}" Property="Path.Data" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="HorizontalSliderThumbHoverBackground" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="white" Offset="0" />
            <GradientStop Color="#B8E2F9" Offset="0.5" />
            <GradientStop Color="#B0DFF8" Offset="1" />
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="HorizontalSliderThumbPressedBackground" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#B8E4FA" Offset="0.25" />
            <GradientStop Color="#5EB4E3" Offset="0.5" />
            <GradientStop Color="#4C8BB4" Offset="1" />
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="HorizontalSliderThumbNormalBackground" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="White" Offset="0" />
            <GradientStop Color="#F0EFEF" Offset="0.4" />
            <GradientStop Color="#D6D5D5" Offset=".8" />
        </LinearGradientBrush>
        <Style x:Key="HorizontalSliderDownThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="UIElement.Focusable" Value="False" />
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
            <Setter Property="FrameworkElement.Height" Value="18" />
            <Setter Property="FrameworkElement.Width" Value="10" />
            <Setter Property="Control.Foreground" Value="#FF808080" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Canvas SnapsToDevicePixels="True">
                            <Canvas.RenderTransform>
                                <TranslateTransform X="5" Y="9" />
                            </Canvas.RenderTransform>
                            <Path Name="Background" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" Fill="{StaticResource HorizontalSliderThumbNormalBackground}" />
                            <Path Name="InnerBorder" Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}" Stroke="#FFFFFFFF" StrokeThickness="1" />
                            <Path Name="OuterBorder" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" Stroke="#FF929292" StrokeThickness="1" />
                        </Canvas>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                <Setter TargetName="Background" Value="{StaticResource HorizontalSliderThumbHoverBackground}" Property="Shape.Fill" />
                                <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}" Property="Shape.Stroke" />
                            </Trigger>
                            <Trigger Property="Control.Foreground" Value="#FF0000FF">
                                <Setter TargetName="Background" Value="{StaticResource HorizontalSliderThumbHoverBackground}" Property="Shape.Fill" />
                                <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}" Property="Shape.Stroke" />
                            </Trigger>
                            <Trigger Property="Thumb.IsDragging" Value="True">
                                <Setter TargetName="Background" Value="{StaticResource HorizontalSliderThumbPressedBackground}" Property="Shape.Fill" />
                                <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbPressedBorder}" Property="Shape.Stroke" />
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter TargetName="Background" Property="Shape.Fill" Value="#FFF4F4F4" />
                                <Setter TargetName="InnerBorder" Value="{x:Null}" Property="Shape.Stroke" />
                                <Setter TargetName="OuterBorder" Value="{StaticResource SliderThumbDisabledGeometry}" Property="Path.Data" />
                                <Setter TargetName="OuterBorder" Property="Shape.Stroke" Value="#FFAEB1AF" />
                                <Setter TargetName="OuterBorder" Value="{StaticResource SliderPointedThumbDisabledGeometry}" Property="Path.Data" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="HorizontalSliderTrackNormalBorder" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFAEB1AF" Offset="0.1" />
            <GradientStop Color="White" Offset=".9" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="HorizontalSliderTrackNormalBackground" Color="#FFE7EAEA" />
        <Style x:Key="SliderRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
            <Setter Property="Control.IsTabStop" Value="False" />
            <Setter Property="UIElement.Focusable" Value="False" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle StrokeThickness="0">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFFF3353" Offset="0" />
                                    <GradientStop Color="#FFB40406" Offset="1" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Geometry x:Key="SliderThumbOuterBorderGeometry">M -5,-9.5 A 1 1 0 0 1 -4,-10.5 L 4,-10.5 A 1 1 0 0 1 5,-9.5 L 5,9.5 A 1 1 0 0 1 4,10.5 L -4,10.5 A 1 1 0 0 1 -5,9.5 Z</Geometry>
        <Geometry x:Key="SliderThumbMiddleBorderGeometry">M -4,-9.5 L 4,-9.5 L 4,9.5 L -4,9.5 Z</Geometry>
        <Style x:Key="HorizontalSliderThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="UIElement.Focusable" Value="False" />
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
            <Setter Property="FrameworkElement.Height" Value="22" />
            <Setter Property="FrameworkElement.Width" Value="11" />
            <Setter Property="Control.Foreground" Value="#FF808080" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Canvas SnapsToDevicePixels="True">
                            <Canvas.RenderTransform>
                                <TranslateTransform X="5.5" Y="11" />
                            </Canvas.RenderTransform>
                            <Image Height="40" Canvas.Left="-5.501" Source="/PhotoSW;component/images/slider-dragger.png" Stretch="Fill" Canvas.Top="-19" Width="33" />
                        </Canvas>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsMouseOver" Value="True" />
                            <Trigger Property="Control.Foreground" Value="#FF0000FF" />
                            <Trigger Property="Thumb.IsDragging" Value="True" />
                            <Trigger Property="UIElement.IsEnabled" Value="False" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="VerticalSliderThumbHoverBackground" EndPoint="1,0" StartPoint="0,0">
            <GradientStop Color="white" Offset="0" />
            <GradientStop Color="#B8E2F9" Offset="0.5" />
            <GradientStop Color="#B0DFF8" Offset="1" />
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="VerticalSliderThumbPressedBackground" EndPoint="1,0" StartPoint="0,0">
            <GradientStop Color="#B8E4FA" Offset="0.25" />
            <GradientStop Color="#5EB4E3" Offset="0.5" />
            <GradientStop Color="#4C8BB4" Offset="1" />
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="VerticalSliderThumbNormalBackground" EndPoint="1,0" StartPoint="0,0">
            <GradientStop Color="White" Offset="0" />
            <GradientStop Color="#F0EFEF" Offset="0.4" />
            <GradientStop Color="#D6D5D5" Offset=".8" />
        </LinearGradientBrush>
        <Style x:Key="VerticalSliderLeftThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="UIElement.Focusable" Value="False" />
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
            <Setter Property="FrameworkElement.Height" Value="10" />
            <Setter Property="FrameworkElement.Width" Value="18" />
            <Setter Property="Control.Foreground" Value="#FF808080" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Canvas SnapsToDevicePixels="True">
                            <Canvas.RenderTransform>
                                <TransformGroup>
                                    <TransformGroup.Children>
                                        <TransformCollection>
                                            <RotateTransform Angle="90" />
                                            <TranslateTransform X="9" Y="5" />
                                        </TransformCollection>
                                    </TransformGroup.Children>
                                </TransformGroup>
                            </Canvas.RenderTransform>
                            <Path Name="Background" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" Fill="{StaticResource VerticalSliderThumbNormalBackground}" />
                            <Path Name="InnerBorder" Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}" Stroke="#FFFFFFFF" StrokeThickness="1" />
                            <Path Name="OuterBorder" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" Stroke="#FF929292" StrokeThickness="1" />
                        </Canvas>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                <Setter TargetName="Background" Value="{StaticResource VerticalSliderThumbHoverBackground}" Property="Shape.Fill" />
                                <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}" Property="Shape.Stroke" />
                            </Trigger>
                            <Trigger Property="Control.Foreground" Value="#FF0000FF">
                                <Setter TargetName="Background" Value="{StaticResource VerticalSliderThumbHoverBackground}" Property="Shape.Fill" />
                                <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}" Property="Shape.Stroke" />
                            </Trigger>
                            <Trigger Property="Thumb.IsDragging" Value="True">
                                <Setter TargetName="Background" Value="{StaticResource VerticalSliderThumbPressedBackground}" Property="Shape.Fill" />
                                <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbPressedBorder}" Property="Shape.Stroke" />
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter TargetName="Background" Property="Shape.Fill" Value="#FFF4F4F4" />
                                <Setter TargetName="InnerBorder" Value="{x:Null}" Property="Shape.Stroke" />
                                <Setter TargetName="OuterBorder" Value="{StaticResource SliderPointedThumbDisabledGeometry}" Property="Path.Data" />
                                <Setter TargetName="OuterBorder" Property="Shape.Stroke" Value="#FFAEB1AF" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="VerticalSliderThumbHoverBackgroundInverted" EndPoint="0,0" StartPoint="1,0">
            <GradientStop Color="white" Offset="0" />
            <GradientStop Color="#B8E2F9" Offset="0.5" />
            <GradientStop Color="#B0DFF8" Offset="1" />
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="VerticalSliderThumbPressedBackgroundInverted" EndPoint="0,0" StartPoint="1,0">
            <GradientStop Color="#B8E4FA" Offset="0.25" />
            <GradientStop Color="#5EB4E3" Offset="0.5" />
            <GradientStop Color="#4C8BB4" Offset="1" />
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="VerticalSliderThumbNormalBackgroundInverted" EndPoint="0,0" StartPoint="1,0">
            <GradientStop Color="White" Offset="0" />
            <GradientStop Color="#F0EFEF" Offset="0.4" />
            <GradientStop Color="#D6D5D5" Offset=".8" />
        </LinearGradientBrush>
        <Style x:Key="VerticalSliderRightThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="UIElement.Focusable" Value="False" />
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
            <Setter Property="FrameworkElement.Height" Value="10" />
            <Setter Property="FrameworkElement.Width" Value="18" />
            <Setter Property="Control.Foreground" Value="#FF808080" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Canvas SnapsToDevicePixels="True">
                            <Canvas.RenderTransform>
                                <TransformGroup>
                                    <TransformGroup.Children>
                                        <TransformCollection>
                                            <RotateTransform Angle="-90" />
                                            <TranslateTransform X="9" Y="5" />
                                        </TransformCollection>
                                    </TransformGroup.Children>
                                </TransformGroup>
                            </Canvas.RenderTransform>
                            <Path Name="Background" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" Fill="{StaticResource VerticalSliderThumbNormalBackgroundInverted}" />
                            <Path Name="InnerBorder" Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}" Stroke="#FFFFFFFF" StrokeThickness="1" />
                            <Path Name="OuterBorder" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" Stroke="#FF929292" StrokeThickness="1" />
                        </Canvas>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                <Setter TargetName="Background" Value="{StaticResource VerticalSliderThumbHoverBackgroundInverted}" Property="Shape.Fill" />
                                <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}" Property="Shape.Stroke" />
                            </Trigger>
                            <Trigger Property="Control.Foreground" Value="#FF0000FF">
                                <Setter TargetName="Background" Value="{StaticResource VerticalSliderThumbHoverBackgroundInverted}" Property="Shape.Fill" />
                                <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}" Property="Shape.Stroke" />
                            </Trigger>
                            <Trigger Property="Thumb.IsDragging" Value="True">
                                <Setter TargetName="Background" Value="{StaticResource VerticalSliderThumbPressedBackgroundInverted}" Property="Shape.Fill" />
                                <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbPressedBorder}" Property="Shape.Stroke" />
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter TargetName="Background" Property="Shape.Fill" Value="#FFF4F4F4" />
                                <Setter TargetName="InnerBorder" Value="{x:Null}" Property="Shape.Stroke" />
                                <Setter TargetName="OuterBorder" Value="{StaticResource SliderPointedThumbDisabledGeometry}" Property="Path.Data" />
                                <Setter TargetName="OuterBorder" Property="Shape.Stroke" Value="#FFAEB1AF" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="VerticalSliderTrackNormalBorder" EndPoint="1,0" StartPoint="0,0">
            <GradientStop Color="#FFAEB1AF" Offset="0.1" />
            <GradientStop Color="White" Offset=".9" />
        </LinearGradientBrush>
        <Style x:Key="VerticalSliderThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="UIElement.Focusable" Value="False" />
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
            <Setter Property="FrameworkElement.Height" Value="11" />
            <Setter Property="FrameworkElement.Width" Value="22" />
            <Setter Property="Control.Foreground" Value="#FF808080" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Canvas SnapsToDevicePixels="True">
                            <Canvas.RenderTransform>
                                <TransformGroup>
                                    <TransformGroup.Children>
                                        <TransformCollection>
                                            <RotateTransform Angle="90" />
                                            <TranslateTransform X="11" Y="5.5" />
                                        </TransformCollection>
                                    </TransformGroup.Children>
                                </TransformGroup>
                            </Canvas.RenderTransform>
                            <Path Name="Background" Data="{StaticResource SliderThumbOuterBorderGeometry}" Fill="{StaticResource VerticalSliderThumbNormalBackground}" />
                            <Path Name="InnerBorder" Data="{StaticResource SliderThumbMiddleBorderGeometry}" Stroke="#FFFFFFFF" StrokeThickness="1" />
                            <Path Name="OuterBorder" Data="{StaticResource SliderThumbOuterBorderGeometry}" Stroke="#FF929292" StrokeThickness="1" />
                        </Canvas>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                <Setter TargetName="Background" Value="{StaticResource VerticalSliderThumbHoverBackground}" Property="Shape.Fill" />
                                <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}" Property="Shape.Stroke" />
                            </Trigger>
                            <Trigger Property="Control.Foreground" Value="#FF0000FF">
                                <Setter TargetName="Background" Value="{StaticResource VerticalSliderThumbHoverBackground}" Property="Shape.Fill" />
                                <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}" Property="Shape.Stroke" />
                            </Trigger>
                            <Trigger Property="Thumb.IsDragging" Value="True">
                                <Setter TargetName="Background" Value="{StaticResource VerticalSliderThumbPressedBackground}" Property="Shape.Fill" />
                                <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbPressedBorder}" Property="Shape.Stroke" />
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter TargetName="Background" Property="Shape.Fill" Value="#FFF4F4F4" />
                                <Setter TargetName="InnerBorder" Value="{x:Null}" Property="Shape.Stroke" />
                                <Setter TargetName="OuterBorder" Value="{StaticResource SliderThumbDisabledGeometry}" Property="Path.Data" />
                                <Setter TargetName="OuterBorder" Property="Shape.Stroke" Value="#FFAEB1AF" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DigiSliderStyle" TargetType="{x:Type Slider}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
            <Setter Property="Control.Background" Value="#00FFFFFF" />
            <Setter Property="Control.Foreground" Value="#FFC4C4C4" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Slider}">
                        <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding FrameworkElement.MinHeight}" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <TickBar Name="TopTick" Fill="{TemplateBinding Control.Foreground}" Height="4" Placement="Top" Grid.Row="0" Visibility="Collapsed" />
                                <TickBar Name="BottomTick" Fill="{TemplateBinding Control.Foreground}" Height="4" Placement="Bottom" Grid.Row="2" Visibility="Collapsed" />
                                <Border Name="TrackBackground" BorderThickness="0,1,0,0" CornerRadius="1" Height="4.0" Margin="5,0,-16.667,0" Grid.Row="1" VerticalAlignment="center" BorderBrush="#FF373737" MinHeight="20" Background="#FF7E7E7E">
                                    <Grid Margin="-6,-1,16,-1">
                                        <Rectangle Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="4.0" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1.0" Visibility="Hidden" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Top" />
                                        <Image Height="Auto" Source="/PhotoSW;component/images/slider-minus.png" Stretch="Fill" Width="38" HorizontalAlignment="Left" Margin="-34.001,-9,0,-10" />
                                        <Image Height="Auto" Source="/PhotoSW;component/images/slider-plus.png" Stretch="Fill" Width="38" HorizontalAlignment="Right" Margin="0,-9,-55.001,-10" />
                                    </Grid>
                                </Border>
                                <Track Name="PART_Track" Grid.Row="1">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}" Visibility="Collapsed" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Name="Thumb" Style="{StaticResource HorizontalSliderThumbStyle}" />
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Slider.TickPlacement" Value="TopLeft">
                                <Setter TargetName="TopTick" Property="UIElement.Visibility" Value="Visible" />
                                <Setter TargetName="Thumb" Value="{StaticResource HorizontalSliderUpThumbStyle}" Property="FrameworkElement.Style" />
                            </Trigger>
                            <Trigger Property="Slider.TickPlacement" Value="BottomRight">
                                <Setter TargetName="BottomTick" Property="UIElement.Visibility" Value="Visible" />
                                <Setter TargetName="Thumb" Value="{StaticResource HorizontalSliderDownThumbStyle}" Property="FrameworkElement.Style" />
                            </Trigger>
                            <Trigger Property="Slider.TickPlacement" Value="Both">
                                <Setter TargetName="TopTick" Property="UIElement.Visibility" Value="Visible" />
                                <Setter TargetName="BottomTick" Property="UIElement.Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="Slider.IsSelectionRangeEnabled" Value="True" />
                            <Trigger Property="UIElement.IsKeyboardFocused" Value="True">
                                <Setter TargetName="Thumb" Property="Control.Foreground" Value="#FF0000FF" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Slider.Orientation" Value="Vertical">
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Slider}">
                                <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition MinWidth="{TemplateBinding FrameworkElement.MinWidth}" Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <TickBar Name="TopTick" Grid.Column="0" Fill="{TemplateBinding Control.Foreground}" Placement="Left" Visibility="Collapsed" Width="4" />
                                        <TickBar Name="BottomTick" Grid.Column="2" Fill="{TemplateBinding Control.Foreground}" Placement="Right" Visibility="Collapsed" Width="4" />
                                        <Border Name="TrackBackground" BorderBrush="{StaticResource VerticalSliderTrackNormalBorder}" BorderThickness="1" Background="{StaticResource HorizontalSliderTrackNormalBackground}" Grid.Column="1" CornerRadius="1" HorizontalAlignment="center" Margin="0,5" Width="4.0">
                                            <Canvas Margin="-1,-6">
                                                <Rectangle Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1.0" Visibility="Hidden" Width="4.0" />
                                            </Canvas>
                                        </Border>
                                        <Track Name="PART_Track" Grid.Column="1">
                                            <Track.DecreaseRepeatButton>
                                                <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}" />
                                            </Track.DecreaseRepeatButton>
                                            <Track.IncreaseRepeatButton>
                                                <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}" />
                                            </Track.IncreaseRepeatButton>
                                            <Track.Thumb>
                                                <Thumb Name="Thumb" Style="{StaticResource VerticalSliderThumbStyle}" />
                                            </Track.Thumb>
                                        </Track>
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Slider.TickPlacement" Value="TopLeft">
                                        <Setter TargetName="TopTick" Property="UIElement.Visibility" Value="Visible" />
                                        <Setter TargetName="Thumb" Value="{StaticResource VerticalSliderLeftThumbStyle}" Property="FrameworkElement.Style" />
                                        <Setter TargetName="TrackBackground" Property="FrameworkElement.Margin" Value="2,5,0,5" />
                                    </Trigger>
                                    <Trigger Property="Slider.TickPlacement" Value="BottomRight">
                                        <Setter TargetName="BottomTick" Property="UIElement.Visibility" Value="Visible" />
                                        <Setter TargetName="Thumb" Value="{StaticResource VerticalSliderRightThumbStyle}" Property="FrameworkElement.Style" />
                                        <Setter TargetName="TrackBackground" Property="FrameworkElement.Margin" Value="0,5,2,5" />
                                    </Trigger>
                                    <Trigger Property="Slider.TickPlacement" Value="Both">
                                        <Setter TargetName="TopTick" Property="UIElement.Visibility" Value="Visible" />
                                        <Setter TargetName="BottomTick" Property="UIElement.Visibility" Value="Visible" />
                                    </Trigger>
                                    <Trigger Property="Slider.IsSelectionRangeEnabled" Value="True">
                                        <Setter TargetName="PART_SelectionRange" Property="UIElement.Visibility" Value="Visible" />
                                    </Trigger>
                                    <Trigger Property="UIElement.IsKeyboardFocused" Value="True">
                                        <Setter TargetName="Thumb" Property="Control.Foreground" Value="#FF0000FF" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DigiComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="Control.HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="Control.VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="Control.Padding" Value="3,0,3,0" />
            <Setter Property="Control.Background" Value="#00FFFFFF" />
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border Name="Bd" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="True" Margin="0" Height="Auto">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="Center" Height="Auto" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ComboBoxItem.IsHighlighted" Value="True">
                                <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                                <Setter Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Control.Foreground" />
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="TextBoxBorder" EndPoint="0,20" MappingMode="Absolute" StartPoint="0,0">
            <GradientStop Color="#ABADB3" Offset="0.05" />
            <GradientStop Color="#E2E3EA" Offset="0.07" />
            <GradientStop Color="#E3E9EF" Offset="1" />
        </LinearGradientBrush>
        <Style x:Key="SearchIDTB" TargetType="{x:Type TextBox}" BasedOn="{x:Null}">
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource TextBoxBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="UIElement.AllowDrop" Value="True" />
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border Name="Bd" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True">
                            <ScrollViewer Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="GumballText" TargetType="{x:Type TextBox}" BasedOn="{x:Null}">
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource TextBoxBorder}" />
            <Setter Property="Control.BorderThickness" Value="0" />
            <Setter Property="Control.Padding" Value="0" />
            <Setter Property="UIElement.AllowDrop" Value="True" />
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border Name="Bd" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True">
                            <ScrollViewer Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DigiSearchDatePickerStyle" TargetType="{x:Type DatePicker}">
            <Setter Property="Control.Foreground" Value="#FF333333" />
            <Setter Property="DatePicker.IsTodayHighlighted" Value="True" />
            <Setter Property="DatePicker.SelectedDateFormat" Value="Short" />
            <Setter Property="Control.Background" Value="#00FFFFFF" />
            <Setter Property="Control.Padding" Value="2" />
            <Setter Property="Control.BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush EndPoint=".5,0" StartPoint=".5,1">
                        <GradientStop Color="#FFA3AEB9" Offset="0" />
                        <GradientStop Color="#FF8399A9" Offset="0.375" />
                        <GradientStop Color="#FF718597" Offset="0.375" />
                        <GradientStop Color="#FF617584" Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DatePicker}">
                        <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" Padding="{TemplateBinding Control.Padding}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_DisabledVisual" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="Valid" />
                                    <VisualState x:Name="InvalidFocused" />
                                    <VisualState x:Name="InvalidUnfocused" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Name="PART_Root" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">
                                <Grid.Resources>
                                    <SolidColorBrush x:Key="DisabledBrush" Color="#A5FFFFFF" />
                                    <ControlTemplate x:Key="DropDownButtonTemplate" TargetType="{x:Type Button}">
                                        <Grid>
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualStateGroup.Transitions>
                                                        <VisualTransition GeneratedDuration="0" />
                                                        <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver" />
                                                        <VisualTransition GeneratedDuration="0:0:0.1" To="Pressed" />
                                                    </VisualStateGroup.Transitions>
                                                    <VisualState x:Name="Normal" />
                                                    <VisualState x:Name="MouseOver">
                                                        <Storyboard>
                                                            <ColorAnimation Duration="0" To="#FF448DCA" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background" />
                                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                <SplineColorKeyFrame KeyTime="0" Value="#7FFFFFFF" />
                                                            </ColorAnimationUsingKeyFrames>
                                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                <SplineColorKeyFrame KeyTime="0" Value="#CCFFFFFF" />
                                                            </ColorAnimationUsingKeyFrames>
                                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                <SplineColorKeyFrame KeyTime="0" Value="#F2FFFFFF" />
                                                            </ColorAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Pressed">
                                                        <Storyboard>
                                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background">
                                                                <SplineColorKeyFrame KeyTime="0" Value="#FF448DCA" />
                                                            </ColorAnimationUsingKeyFrames>
                                                            <DoubleAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Highlight">
                                                                <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                                            </DoubleAnimationUsingKeyFrames>
                                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                <SplineColorKeyFrame KeyTime="0" Value="#EAFFFFFF" />
                                                            </ColorAnimationUsingKeyFrames>
                                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                <SplineColorKeyFrame KeyTime="0" Value="#C6FFFFFF" />
                                                            </ColorAnimationUsingKeyFrames>
                                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                <SplineColorKeyFrame KeyTime="0" Value="#6BFFFFFF" />
                                                            </ColorAnimationUsingKeyFrames>
                                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                <SplineColorKeyFrame KeyTime="0" Value="#F4FFFFFF" />
                                                            </ColorAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Disabled" />
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <Grid Background="#11FFFFFF" FlowDirection="LeftToRight" HorizontalAlignment="Center" Height="18" Margin="0" VerticalAlignment="Center" Width="19">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="20*" />
                                                    <ColumnDefinition Width="20*" />
                                                    <ColumnDefinition Width="20*" />
                                                    <ColumnDefinition Width="20*" />
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="23*" />
                                                    <RowDefinition Height="19*" />
                                                    <RowDefinition Height="19*" />
                                                    <RowDefinition Height="19*" />
                                                </Grid.RowDefinitions>
                                                <Border Name="Highlight" BorderBrush="#FF45D6FA" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius="0,0,1,1" Margin="-1" Opacity="0" Grid.Row="0" Grid.RowSpan="4" />
                                                <Border Name="Background" BorderBrush="#FFFFFFFF" BorderThickness="1" Background="#FF1F3B53" Grid.ColumnSpan="4" CornerRadius=".5" Margin="0,-1,0,0" Opacity="1" Grid.Row="1" Grid.RowSpan="3" />
                                                <Border Name="BackgroundGradient" BorderBrush="#BF000000" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius=".5" Margin="0,-1,0,0" Opacity="1" Grid.Row="1" Grid.RowSpan="3">
                                                    <Border.Background>
                                                        <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                                            <GradientStop Color="#FFFFFFFF" Offset="0" />
                                                            <GradientStop Color="#F9FFFFFF" Offset="0.375" />
                                                            <GradientStop Color="#E5FFFFFF" Offset="0.625" />
                                                            <GradientStop Color="#C6FFFFFF" Offset="1" />
                                                        </LinearGradientBrush>
                                                    </Border.Background>
                                                </Border>
                                                <Rectangle Grid.ColumnSpan="4" Grid.RowSpan="1" StrokeThickness="1">
                                                    <Rectangle.Fill>
                                                        <LinearGradientBrush EndPoint="0.3,-1.1" StartPoint="0.46,1.6">
                                                            <GradientStop Color="#FF4084BD" />
                                                            <GradientStop Color="#FFAFCFEA" Offset="1" />
                                                        </LinearGradientBrush>
                                                    </Rectangle.Fill>
                                                    <Rectangle.Stroke>
                                                        <LinearGradientBrush EndPoint="0.48,-1" StartPoint="0.48,1.25">
                                                            <GradientStop Color="#FF494949" />
                                                            <GradientStop Color="#FF9F9F9F" Offset="1" />
                                                        </LinearGradientBrush>
                                                    </Rectangle.Stroke>
                                                </Rectangle>
                                                <Path Grid.ColumnSpan="4" Grid.Column="0" Data="M11.426758,8.4305077L11.749023,8.4305077 11.749023,16.331387 10.674805,16.331387 10.674805,10.299648 9.0742188,11.298672 9.0742188,10.294277C9.4788408,10.090176 9.9094238,9.8090878 10.365967,9.4510155 10.82251,9.0929432 11.176106,8.7527733 11.426758,8.4305077z M14.65086,8.4305077L18.566387,8.4305077 18.566387,9.3435936 15.671368,9.3435936 15.671368,11.255703C15.936341,11.058764 16.27293,10.960293 16.681133,10.960293 17.411602,10.960293 17.969301,11.178717 18.354229,11.615566 18.739157,12.052416 18.931622,12.673672 18.931622,13.479336 18.931622,15.452317 18.052553,16.438808 16.294415,16.438808 15.560365,16.438808 14.951641,16.234707 14.468243,15.826504L14.881817,14.929531C15.368796,15.326992 15.837872,15.525723 16.289043,15.525723 17.298809,15.525723 17.803692,14.895514 17.803692,13.635098 17.803692,12.460618 17.305971,11.873379 16.310528,11.873379 15.83071,11.873379 15.399232,12.079271 15.016094,12.491055L14.65086,12.238613z" Fill="#FF2F2F2F" HorizontalAlignment="Center" Margin="4,3,4,3" Grid.Row="1" Grid.RowSpan="3" RenderTransformOrigin="0.5,0.5" Stretch="Fill" VerticalAlignment="Center" />
                                                <Ellipse Grid.ColumnSpan="4" Fill="#FFFFFFFF" HorizontalAlignment="Center" Height="3" StrokeThickness="0" VerticalAlignment="Center" Width="3" />
                                                <Border Name="DisabledVisual" BorderBrush="#B2FFFFFF" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius="0,0,.5,.5" Opacity="0" Grid.Row="0" Grid.RowSpan="4" />
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </Grid.Resources>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Button Name="PART_Button" Grid.Column="1" Foreground="{TemplateBinding Control.Foreground}" Focusable="False" HorizontalAlignment="Left" Margin="3,0,3,0" Grid.Row="0" Template="{StaticResource DropDownButtonTemplate}" VerticalAlignment="Top" Width="20" />
                                <DatePickerTextBox Name="PART_TextBox" Grid.Column="0" Foreground="{TemplateBinding Control.Foreground}" Focusable="{TemplateBinding UIElement.Focusable}" HorizontalContentAlignment="Stretch" Grid.Row="0" VerticalContentAlignment="Stretch" />
                                <Grid Name="PART_DisabledVisual" Grid.ColumnSpan="2" Grid.Column="0" IsHitTestVisible="False" Opacity="0" Grid.Row="0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Rectangle Grid.Column="0" Fill="#A5FFFFFF" RadiusY="1" Grid.Row="0" RadiusX="1" />
                                    <Rectangle Grid.Column="1" Fill="#A5FFFFFF" Height="18" Margin="3,0,3,0" RadiusY="1" Grid.Row="0" RadiusX="1" Width="19" />
                                    <Popup Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" StaysOpen="False" PlacementTarget="{Binding ElementName=PART_TextBox}" />
                                </Grid>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DigiSearchCalendarStyle" TargetType="{x:Type Calendar}">
            <Setter Property="Control.Foreground" Value="#FF333333" />
            <Setter Property="Control.Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFE4EAF0" Offset="0" />
                        <GradientStop Color="#FFECF0F4" Offset="0.16" />
                        <GradientStop Color="#FFFCFCFD" Offset="0.16" />
                        <GradientStop Color="#FFFFFFFF" Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFA3AEB9" Offset="0" />
                        <GradientStop Color="#FF8399A9" Offset="0.375" />
                        <GradientStop Color="#FF718597" Offset="0.375" />
                        <GradientStop Color="#FF617584" Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Calendar}">
                        <Grid Name="PART_Root" HorizontalAlignment="Center" Height="Auto" MinWidth="450" MinHeight="400">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="Valid" />
                                    <VisualState x:Name="InvalidFocused" />
                                    <VisualState x:Name="InvalidUnfocused" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Viewbox Margin="0" Stretch="Uniform">
                                <CalendarItem Name="PART_CalendarItem" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" Style="{DynamicResource DigiSearchCalendarItemStyle}" Height="Auto" Margin="0" Width="Auto" FontSize="64" />
                            </Viewbox>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DigisearchCalendarStyle" TargetType="{x:Type Calendar}">
            <Setter Property="Control.Foreground" Value="#FF333333" />
            <Setter Property="Control.Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFE4EAF0" Offset="0" />
                        <GradientStop Color="#FFECF0F4" Offset="0.16" />
                        <GradientStop Color="#FFFCFCFD" Offset="0.16" />
                        <GradientStop Color="#FFFFFFFF" Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFA3AEB9" Offset="0" />
                        <GradientStop Color="#FF8399A9" Offset="0.375" />
                        <GradientStop Color="#FF718597" Offset="0.375" />
                        <GradientStop Color="#FF617584" Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Calendar}">
                        <Grid Name="PART_Root" HorizontalAlignment="Stretch" Height="Auto" MinWidth="650" MinHeight="450">
                            <Viewbox Stretch="Fill">
                                <CalendarItem Name="PART_CalendarItem" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" Style="{DynamicResource DigisearchCalendarItemStyle}" Height="167.997" Margin="0" Width="310.453" />
                            </Viewbox>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DigisearchCalendarItemStyle" TargetType="{x:Type CalendarItem}">
            <Setter Property="FrameworkElement.Margin" Value="0,3,0,3" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CalendarItem}">
                        <ControlTemplate.Resources>
                            <DataTemplate>
                                <!--<x:StaticExtension.Key>CalendarItem.DayTitleTemplateResourceKey</x:StaticExtension.Key>-->
                                <TextBlock TextBlock.Foreground="#FF333333" TextBlock.FontWeight="Bold" TextBlock.FontSize="15" TextBlock.FontFamily="Verdana" HorizontalAlignment="Center" Margin="10,10,10,10" VerticalAlignment="Center" Text="{Binding}" />
                            </DataTemplate>
                        </ControlTemplate.Resources>
                        <Grid Name="PART_Root">
                            <Grid.Resources>
                                <SolidColorBrush x:Key="DisabledColor" Color="#A5FFFFFF" />
                            </Grid.Resources>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_DisabledVisual" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="1">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFE4EAF0" Offset="0" />
                                        <GradientStop Color="#FFECF0F4" Offset="0.16" />
                                        <GradientStop Color="#FFFCFCFD" Offset="0.16" />
                                        <GradientStop Color="White" Offset="1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border BorderBrush="#FFFFFFFF" BorderThickness="2" CornerRadius="1">
                                    <Grid>
                                        <Grid.Resources>
                                            <ControlTemplate x:Key="PreviousButtonTemplate" TargetType="{x:Type Button}">
                                                <Grid Cursor="Hand">
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualState x:Name="Normal" />
                                                            <VisualState x:Name="MouseOver">
                                                                <Storyboard>
                                                                    <ColorAnimation Duration="0" To="#FF73A9D8" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path" />
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Disabled">
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="0" To=".5" Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)" Storyboard.TargetName="path" />
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                    <Rectangle Fill="#11E5EBF1" Opacity="1" Stretch="Fill" />
                                                    <Grid>
                                                        <Path Name="path" Data="M288.75,232.25L288.75,240.625 283,236.625z" Fill="#FF333333" HorizontalAlignment="Left" Height="10" Margin="14,-6,0,0" Stretch="Fill" VerticalAlignment="Center" Width="6" />
                                                    </Grid>
                                                </Grid>
                                            </ControlTemplate>
                                            <ControlTemplate x:Key="NextButtonTemplate" TargetType="{x:Type Button}">
                                                <Grid Cursor="Hand">
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualState x:Name="Normal" />
                                                            <VisualState x:Name="MouseOver">
                                                                <Storyboard>
                                                                    <ColorAnimation Duration="0" To="#FF73A9D8" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path" />
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Disabled">
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="0" To=".5" Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)" Storyboard.TargetName="path" />
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                    <Rectangle Fill="#11E5EBF1" Opacity="1" Stretch="Fill" />
                                                    <Grid>
                                                        <Path Name="path" Data="M282.875,231.875L282.875,240.375 288.625,236z" Fill="#FF333333" HorizontalAlignment="Right" Height="10" Margin="0,-6,14,0" Stretch="Fill" VerticalAlignment="Center" Width="6" />
                                                    </Grid>
                                                </Grid>
                                            </ControlTemplate>
                                            <ControlTemplate x:Key="HeaderButtonTemplate" TargetType="{x:Type Button}">
                                                <Grid Cursor="Hand">
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualState x:Name="Normal" />
                                                            <VisualState x:Name="MouseOver">
                                                                <Storyboard>
                                                                    <ColorAnimation Duration="0" To="#FF73A9D8" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="buttonContent" />
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Disabled">
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="0" To=".5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="buttonContent" />
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                    <ContentPresenter Name="buttonContent" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Content="{TemplateBinding ContentControl.Content}" TextElement.Foreground="#FF333333" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="1,4,1,9" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                                                </Grid>
                                            </ControlTemplate>
                                        </Grid.Resources>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>
                                        <Button Name="PART_PreviousButton" Grid.Column="0" Focusable="False" HorizontalAlignment="Left" Height="20" Grid.Row="0" Template="{StaticResource PreviousButtonTemplate}" Width="28" />
                                        <Button Name="PART_HeaderButton" Grid.Column="1" FontWeight="Bold" Focusable="False" FontSize="10.5" HorizontalAlignment="Center" Grid.Row="0" Template="{StaticResource HeaderButtonTemplate}" VerticalAlignment="Center" />
                                        <Button Name="PART_NextButton" Grid.Column="2" Focusable="False" HorizontalAlignment="Right" Height="20" Grid.Row="0" Template="{StaticResource NextButtonTemplate}" Width="28" />
                                        <Grid Name="PART_MonthView" Grid.ColumnSpan="3" HorizontalAlignment="Center" Margin="6,-1,6,6" Grid.Row="1" Visibility="Visible" Style="{DynamicResource searchCalendarItemGridStyle}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                        </Grid>
                                        <Grid Name="PART_YearView" Grid.ColumnSpan="3" HorizontalAlignment="Center" Margin="6,-3,7,6" Grid.Row="1" Visibility="Hidden">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                        </Grid>
                                    </Grid>
                                </Border>
                            </Border>
                            <Rectangle Name="PART_DisabledVisual" Fill="{StaticResource DisabledColor}" Opacity="0" RadiusY="2" RadiusX="2" Stretch="Fill" Stroke="{StaticResource DisabledColor}" StrokeThickness="1" Visibility="Collapsed" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter TargetName="PART_DisabledVisual" Property="UIElement.Visibility" Value="Visible" />
                            </Trigger>
                            <DataTrigger Value="Year" Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}">
                                <Setter TargetName="PART_MonthView" Property="UIElement.Visibility" Value="Hidden" />
                                <Setter TargetName="PART_YearView" Property="UIElement.Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Value="Decade" Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}">
                                <Setter TargetName="PART_MonthView" Property="UIElement.Visibility" Value="Hidden" />
                                <Setter TargetName="PART_YearView" Property="UIElement.Visibility" Value="Visible" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="searchCalendarItemGridStyle" TargetType="{x:Type Grid}" />
        <Style x:Key="ButtonStyleRotatePic" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <sc:ButtonChrome Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}" RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" RenderPressed="{TemplateBinding ButtonBase.IsPressed}" RenderDefaulted="{TemplateBinding Button.IsDefaulted}" SnapsToDevicePixels="True">
                            <sc:ButtonChrome.Background>
                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                    <GradientStop Color="#FFF3F3F3" Offset="0" />
                                    <GradientStop Color="#FFEBEBEB" Offset="0.5" />
                                    <GradientStop Color="#FFDDDDDD" Offset="0.5" />
                                    <GradientStop Color="#FFCDCDCD" Offset="1" />
                                </LinearGradientBrush>
                            </sc:ButtonChrome.Background>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                        </sc:ButtonChrome>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsKeyboardFocused" Value="True">
                                <Setter TargetName="Chrome" Property="Microsoft_Windows_Themes:ButtonChrome.RenderDefaulted" Value="True" />
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                                <Setter TargetName="Chrome" Property="Microsoft_Windows_Themes:ButtonChrome.RenderPressed" Value="True" />
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="Control.Foreground" Value="#FFADADAD" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        

        
        
        <Style x:Key="DigiDatePickerStyle" TargetType="{x:Type DatePicker}">
            <Setter Property="Control.Foreground" Value="#FF333333" />
            <Setter Property="DatePicker.IsTodayHighlighted" Value="True" />
            <Setter Property="DatePicker.SelectedDateFormat" Value="Short" />
            <Setter Property="Control.Background" Value="#00FFFFFF" />
            <Setter Property="Control.Padding" Value="2" />
            <Setter Property="Control.BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush EndPoint=".5,0" StartPoint=".5,1">
                        <GradientStop Color="#FFA3AEB9" Offset="0" />
                        <GradientStop Color="#FF8399A9" Offset="0.375" />
                        <GradientStop Color="#FF718597" Offset="0.375" />
                        <GradientStop Color="#FF617584" Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DatePicker}">
                        <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" Padding="{TemplateBinding Control.Padding}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_DisabledVisual" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Name="PART_Root" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">
                                <Grid.Resources>
                                    <SolidColorBrush x:Key="DisabledBrush" Color="#A5FFFFFF" />
                                    <ControlTemplate x:Key="DropDownButtonTemplate" TargetType="{x:Type Button}">
                                        <Grid>
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualStateGroup.Transitions>
                                                        <VisualTransition GeneratedDuration="0" />
                                                        <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver" />
                                                        <VisualTransition GeneratedDuration="0:0:0.1" To="Pressed" />
                                                    </VisualStateGroup.Transitions>
                                                    <VisualState x:Name="Normal" />
                                                    <VisualState x:Name="MouseOver">
                                                        <Storyboard>
                                                            <ColorAnimation Duration="0" To="#FF448DCA" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background" />
                                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                <SplineColorKeyFrame KeyTime="0" Value="#7FFFFFFF" />
                                                            </ColorAnimationUsingKeyFrames>
                                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                <SplineColorKeyFrame KeyTime="0" Value="#CCFFFFFF" />
                                                            </ColorAnimationUsingKeyFrames>
                                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                <SplineColorKeyFrame KeyTime="0" Value="#F2FFFFFF" />
                                                            </ColorAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Pressed">
                                                        <Storyboard>
                                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background">
                                                                <SplineColorKeyFrame KeyTime="0" Value="#FF448DCA" />
                                                            </ColorAnimationUsingKeyFrames>
                                                            <DoubleAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Highlight">
                                                                <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                                            </DoubleAnimationUsingKeyFrames>
                                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                <SplineColorKeyFrame KeyTime="0" Value="#EAFFFFFF" />
                                                            </ColorAnimationUsingKeyFrames>
                                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                <SplineColorKeyFrame KeyTime="0" Value="#C6FFFFFF" />
                                                            </ColorAnimationUsingKeyFrames>
                                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                <SplineColorKeyFrame KeyTime="0" Value="#6BFFFFFF" />
                                                            </ColorAnimationUsingKeyFrames>
                                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                <SplineColorKeyFrame KeyTime="0" Value="#F4FFFFFF" />
                                                            </ColorAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Disabled" />
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <Grid Background="#11FFFFFF" FlowDirection="LeftToRight" HorizontalAlignment="Stretch" Height="44.5" Margin="0,0.032,0,0.031" VerticalAlignment="Stretch" Width="Auto">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="20*" />
                                                    <ColumnDefinition Width="20*" />
                                                    <ColumnDefinition Width="20*" />
                                                    <ColumnDefinition Width="20*" />
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="23*" />
                                                    <RowDefinition Height="19*" />
                                                    <RowDefinition Height="19*" />
                                                    <RowDefinition Height="19*" />
                                                </Grid.RowDefinitions>
                                                <Border Name="Highlight" BorderBrush="#FF45D6FA" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius="0,0,1,1" Margin="-1" Opacity="0" Grid.Row="0" Grid.RowSpan="4" />
                                                <Border Name="Background" BorderBrush="#FFFFFFFF" BorderThickness="1" Background="#FF1F3B53" Grid.ColumnSpan="4" CornerRadius=".5" Margin="0,-1,0,0" Opacity="1" Grid.Row="1" Grid.RowSpan="3" />
                                                <Border Name="BackgroundGradient" BorderBrush="#BF000000" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius=".5" Margin="0,-1,0,0" Opacity="1" Grid.Row="1" Grid.RowSpan="3">
                                                    <Border.Background>
                                                        <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                                            <GradientStop Color="#FFFFFFFF" Offset="0" />
                                                            <GradientStop Color="#F9FFFFFF" Offset="0.375" />
                                                            <GradientStop Color="#E5FFFFFF" Offset="0.625" />
                                                            <GradientStop Color="#C6FFFFFF" Offset="1" />
                                                        </LinearGradientBrush>
                                                    </Border.Background>
                                                </Border>
                                                <Rectangle Grid.ColumnSpan="4" Grid.RowSpan="1" StrokeThickness="1">
                                                    <Rectangle.Fill>
                                                        <LinearGradientBrush EndPoint="0.3,-1.1" StartPoint="0.46,1.6">
                                                            <GradientStop Color="#FF4084BD" />
                                                            <GradientStop Color="#FFAFCFEA" Offset="1" />
                                                        </LinearGradientBrush>
                                                    </Rectangle.Fill>
                                                    <Rectangle.Stroke>
                                                        <LinearGradientBrush EndPoint="0.48,-1" StartPoint="0.48,1.25">
                                                            <GradientStop Color="#FF494949" />
                                                            <GradientStop Color="#FF9F9F9F" Offset="1" />
                                                        </LinearGradientBrush>
                                                    </Rectangle.Stroke>
                                                </Rectangle>
                                                <Path Grid.ColumnSpan="4" Grid.Column="0" Data="M11.426758,8.4305077L11.749023,8.4305077 11.749023,16.331387 10.674805,16.331387 10.674805,10.299648 9.0742188,11.298672 9.0742188,10.294277C9.4788408,10.090176 9.9094238,9.8090878 10.365967,9.4510155 10.82251,9.0929432 11.176106,8.7527733 11.426758,8.4305077z M14.65086,8.4305077L18.566387,8.4305077 18.566387,9.3435936 15.671368,9.3435936 15.671368,11.255703C15.936341,11.058764 16.27293,10.960293 16.681133,10.960293 17.411602,10.960293 17.969301,11.178717 18.354229,11.615566 18.739157,12.052416 18.931622,12.673672 18.931622,13.479336 18.931622,15.452317 18.052553,16.438808 16.294415,16.438808 15.560365,16.438808 14.951641,16.234707 14.468243,15.826504L14.881817,14.929531C15.368796,15.326992 15.837872,15.525723 16.289043,15.525723 17.298809,15.525723 17.803692,14.895514 17.803692,13.635098 17.803692,12.460618 17.305971,11.873379 16.310528,11.873379 15.83071,11.873379 15.399232,12.079271 15.016094,12.491055L14.65086,12.238613z" Fill="#FF2F2F2F" HorizontalAlignment="Center" Margin="4,3,4,3" Grid.Row="1" Grid.RowSpan="3" RenderTransformOrigin="0.5,0.5" Stretch="Fill" VerticalAlignment="Center" Height="11.228" Width="11.084" />
                                                <Ellipse Grid.ColumnSpan="4" Fill="#FFFFFFFF" HorizontalAlignment="Center" Height="3" StrokeThickness="0" VerticalAlignment="Center" Width="3" />
                                                <Border Name="DisabledVisual" BorderBrush="#B2FFFFFF" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius="0,0,.5,.5" Opacity="0" Grid.Row="0" Grid.RowSpan="4" />
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </Grid.Resources>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" MinWidth="37.5" />
                                </Grid.ColumnDefinitions>
                                <Button Name="PART_Button" Grid.Column="1" Foreground="{TemplateBinding Control.Foreground}" Focusable="False" HorizontalAlignment="Stretch" Margin="0,0,0,-0.001" Grid.Row="0" Template="{StaticResource DropDownButtonTemplate}" VerticalAlignment="Stretch" Width="Auto" />
                                <DatePickerTextBox Name="PART_TextBox" Grid.Column="0" Foreground="{TemplateBinding Control.Foreground}" Focusable="{TemplateBinding UIElement.Focusable}" HorizontalContentAlignment="Stretch" Grid.Row="0" VerticalContentAlignment="Stretch">
                                    <DatePickerTextBox.Background>
                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                            <GradientStop Color="#FFF3F3F3" Offset="0" />
                                            <GradientStop Color="#FFEBEBEB" Offset="0.5" />
                                            <GradientStop Color="#FFDDDDDD" Offset="0.5" />
                                            <GradientStop Color="#FFCDCDCD" Offset="1" />
                                        </LinearGradientBrush>
                                    </DatePickerTextBox.Background>
                                </DatePickerTextBox>
                                <Grid Name="PART_DisabledVisual" Grid.ColumnSpan="2" Grid.Column="0" IsHitTestVisible="False" Opacity="0" Grid.Row="0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" MinWidth="38" />
                                    </Grid.ColumnDefinitions>
                                    <Rectangle Grid.Column="0" Fill="#A5FFFFFF" RadiusY="1" Grid.Row="0" RadiusX="1" />
                                    <Rectangle Grid.Column="1" Fill="#A5FFFFFF" Height="Auto" Margin="0" RadiusY="1" Grid.Row="0" RadiusX="1" Width="Auto" />
                                    <Popup Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" StaysOpen="False" PlacementTarget="{Binding ElementName=PART_TextBox}" />
                                </Grid>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStylebrightness" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="True">
                            <Grid Height="Auto" Margin="0" VerticalAlignment="Stretch" Width="Auto">
                                <Ellipse Margin="0" Height="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="#FFFFFFFF" StrokeThickness="5" Stroke="{x:Null}" />
                                <Ellipse Margin="2" Stroke="#FF000000" Height="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" StrokeThickness="5" Fill="{x:Null}" />
                                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Height="45.844" Content="" />
                                <Rectangle Fill="#60FFFFFF" Margin="0,0,-2,0" Stroke="#FFFF0000" Opacity="0" />
                                <Grid HorizontalAlignment="Center" Margin="0" Width="30" VerticalAlignment="Center">
                                    <Rectangle Fill="#FF000000" HorizontalAlignment="Center" Margin="0" Width="4" Height="30" VerticalAlignment="Center" Stroke="{x:Null}" />
                                    <Rectangle Fill="#FF000000" HorizontalAlignment="Center" Margin="0" Width="4" Height="30" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Center" Stroke="{x:Null}">
                                        <Rectangle.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform />
                                                <SkewTransform />
                                                <RotateTransform Angle="90" />
                                                <TranslateTransform />
                                            </TransformGroup>
                                        </Rectangle.RenderTransform>
                                    </Rectangle>
                                </Grid>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStylecontrast" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="True">
                            <Grid Height="Auto" Margin="0" VerticalAlignment="Stretch" Width="Auto">
                                <Ellipse Margin="15" Stroke="#FFFDFF00" Height="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                    <Ellipse.Fill>
                                        <RadialGradientBrush>
                                            <GradientStop Color="#FFD3D413" Offset="0.754" />
                                            <GradientStop Color="#FFFDFF00" Offset="0.319" />
                                        </RadialGradientBrush>
                                    </Ellipse.Fill>
                                </Ellipse>
                                <Path Data="M79,19.5L91.272938,7.2270623" Fill="#FFFDFF00" HorizontalAlignment="Right" Height="19.5" Margin="0" Stretch="Fill" Stroke="#FFFDFF00" VerticalAlignment="Top" Width="21" StrokeThickness="5" />
                                <Path Data="M79,19.5L91.272938,7.2270623" Fill="#FFFDFF00" HorizontalAlignment="Right" Height="19.5" Margin="0" Stretch="Fill" Stroke="#FFFDFF00" VerticalAlignment="Bottom" Width="21" StrokeThickness="5" RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleY="-1" ScaleX="1" />
                                            <SkewTransform AngleY="0" AngleX="0" />
                                            <RotateTransform Angle="0" />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                                <Path Data="M79,19.5L91.272938,7.2270623" Fill="#FFFDFF00" HorizontalAlignment="Left" Height="19.5" Margin="0" Stretch="Fill" Stroke="#FFFDFF00" VerticalAlignment="Bottom" Width="21" StrokeThickness="5" RenderTransformOrigin="-3.571,4.821" />
                                <Path Data="M79,19.5L91.272938,7.2270623" Fill="#FFFDFF00" HorizontalAlignment="Left" Height="19.5" Margin="0" Stretch="Fill" Stroke="#FFFDFF00" VerticalAlignment="Top" Width="21" StrokeThickness="5" RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleY="-1" ScaleX="1" />
                                            <SkewTransform AngleY="0" AngleX="0" />
                                            <RotateTransform Angle="0" />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                                <Path Data="M50,11L50,0" Fill="#FFFDFF00" Height="16" Margin="48,-2,47,0" Stretch="Fill" Stroke="#FFFDFF00" StrokeThickness="5" VerticalAlignment="Top" />
                                <Path Data="M89,50L100,50" Fill="#FFFDFF00" HorizontalAlignment="Right" Margin="0,44,-2,47" Stretch="Fill" Stroke="#FFFDFF00" StrokeThickness="5" Width="18" />
                                <Path Data="M89,50L100,50" Fill="#FFFDFF00" HorizontalAlignment="Left" Margin="-3,44,0,47" Stretch="Fill" Stroke="#FFFDFF00" StrokeThickness="5" Width="18" />
                                <Path Data="M50,11L50,0" Fill="#FFFDFF00" Height="16" Margin="48,0,47,-2.5" Stretch="Fill" Stroke="#FFFDFF00" StrokeThickness="5" VerticalAlignment="Bottom" />
                                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                                <Rectangle Fill="#60FFFFFF" Margin="0,0,-2,-23" Stroke="#FFFF0000" Opacity="0" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DigiedgeDetectBtn" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="True">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="Custom">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Margin="0">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                                <Image Margin="0" Source="/PhotoSW;component/images/Digi-Edge-Detect.png" Stretch="Uniform" />
                                <Image Name="image" Height="21.333" Source="/PhotoSW;component/images/tick.png" Stretch="Fill" VerticalAlignment="Top" Margin="0,-5.333,-5,0" HorizontalAlignment="Right" Width="20" Visibility="Collapsed" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PhotoSWedgeDetectBtn" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="True">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="Custom">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Margin="0">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                                <Image Margin="0" Source="/PhotoSW;component/images/Digi-Edge-Detect_act.png" Stretch="Uniform" />
                                <Image Name="image" Height="21.333" Source="/PhotoSW;component/images/tick.png" Stretch="Fill" VerticalAlignment="Top" Margin="0,-5.333,-5,0" HorizontalAlignment="Right" Width="20" Visibility="Collapsed" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DigiInvertBtn" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="True">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="Custom">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Margin="0">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                                <Image Margin="0" Source="/PhotoSW;component/images/Digi-Invert.png" Stretch="Uniform" />
                                <Image Name="image" Height="21.333" Source="/PhotoSW;component/images/tick.png" Stretch="Fill" VerticalAlignment="Top" Margin="0,-5.333,-5,0" HorizontalAlignment="Right" Width="20" Visibility="Collapsed" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DigiGrayScaleBtn" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="True">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="Custom">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Margin="0">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                                <Image Margin="0" Source="/PhotoSW;component/images/Digi-GrayScale.png" Stretch="Uniform" />
                                <Image Name="image" Height="21.333" Source="/PhotoSW;component/images/tick.png" Stretch="Fill" VerticalAlignment="Top" Margin="0,-5.333,-5,0" HorizontalAlignment="Right" Width="20" Visibility="Collapsed" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PhotoSWGrayScaleBtn" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="True">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="Custom">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Margin="0">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                                <Image Margin="0" Source="/PhotoSW;component/images/Digi-GrayScale_act.png" Stretch="Uniform" />
                                <Image Name="image" Height="21.333" Source="/PhotoSW;component/images/tick.png" Stretch="Fill" VerticalAlignment="Top" Margin="0,-5.333,-5,0" HorizontalAlignment="Right" Width="20" Visibility="Collapsed" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DigiSepiaBtn" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="True">
                            <Grid Margin="0">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                                <Image Margin="0" Source="/PhotoSW;component/images/Digi-Sepia.png" Stretch="Uniform" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DigiSmoothBtn" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="True">
                            <Grid Margin="0">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                                <Image Margin="0" Source="/PhotoSW;component/images/Digi-Smooth.png" Stretch="Uniform" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DigiSharpenBtn" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="True">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="Custom">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Margin="0">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                                <Image Margin="0" Source="/PhotoSW;component/images/Digi-Sharpen.png" Stretch="Uniform" />
                                <Image Name="image" Height="21.333" Source="/PhotoSW;component/images/tick.png" Stretch="Fill" VerticalAlignment="Top" Margin="0,-5.333,-5,0" HorizontalAlignment="Right" Width="20" Visibility="Collapsed" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PhotoSWSharpenBtn" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="True">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="Custom">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Margin="0">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                                <Image Margin="0" Source="/PhotoSW;component/images/Digi-Sharpen_act.png" Stretch="Uniform" />
                                <Image Name="image" Height="21.333" Source="/PhotoSW;component/images/tick.png" Stretch="Fill" VerticalAlignment="Top" Margin="0,-5.333,-5,0" HorizontalAlignment="Right" Width="20" Visibility="Collapsed" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="digiEmbossbtn" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="True">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="Custom">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Margin="0">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                                <Image Margin="0" Source="/PhotoSW;component/images/Digi-Emboss.png" Stretch="Uniform" />                            
                                <Image Name="image" Height="21.333" Source="/PhotoSW;component/images/tick.png" Stretch="Fill" VerticalAlignment="Top" Margin="0,-5.333,-5,0" HorizontalAlignment="Right" Width="20" Visibility="Collapsed" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="PhotoSWMirrorbtn" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="True">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="Custom">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups> 
                            <Grid Margin="0">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                                <!--<Image Margin="0" Source="/PhotoSW;component/images/PSmirror.png" Stretch="Uniform" />-->
                                <Image Margin="0" Source="/PhotoSW;component/images/Digi-Emboss.png" Stretch="Uniform" />
                                <Image Name="image" Height="21.333" Source="/PhotoSW;component/images/tick.png" Stretch="Fill" VerticalAlignment="Top" Margin="0,-5.333,-5,0" HorizontalAlignment="Right" Width="20" Visibility="Collapsed" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PhotoSWMirrorAct" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="True">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="Custom">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Margin="0">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                                <!--<Image Margin="0" Source="/PhotoSW;component/images/PSmirror.png" Stretch="Uniform" />-->
                                <Image Margin="0" Source="/PhotoSW;component/images/Digi-Emboss_act.png" Stretch="Uniform" />
                                <Image Name="image" Height="21.333" Source="/PhotoSW;component/images/tick.png" Stretch="Fill" VerticalAlignment="Top" Margin="0,-5.333,-5,0" HorizontalAlignment="Right" Width="20" Visibility="Collapsed" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="DigiMeanRemovalBtn" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="True">
                            <Grid Margin="0">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                                <Image Margin="0" Source="/PhotoSW;component/images/digi-meanRemoval.png" Stretch="Uniform" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DigiRestoreBtnStyle" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="True">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="rectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Margin="0">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                                <Image Margin="0" Source="/PhotoSW;component/images/Digi-Restore.png" Stretch="Uniform" Width="150" Height="150"/>
                                <Rectangle Name="rectangle" Fill="#FF8F8F8F" Margin="0,0,0,8" RadiusX="5" RadiusY="5" Opacity="0.66" Visibility="Collapsed" Stroke="{x:Null}" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DigiRestoreBtnStyleActivate" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="True">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="rectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Margin="0">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                                <Image Margin="0" Source="/PhotoSW;component/images/Digi-Restore_act.png" Stretch="Uniform" Width="150" Height="150"/>
                                <Rectangle Name="rectangle" Fill="#FF8F8F8F" Margin="0,0,0,8" RadiusX="5" RadiusY="5" Opacity="0.66" Visibility="Collapsed" Stroke="{x:Null}" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DigiBtnStyleRed" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="True">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="Custom">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Margin="0">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                                <Image Margin="0" Source="/PhotoSW;component/images/Digi-Red.png" Stretch="Uniform" />
                                <Image Name="image" Height="21.333" Source="/PhotoSW;component/images/tick.png" Stretch="Fill" VerticalAlignment="Top" Margin="0,-5.333,-5,0" HorizontalAlignment="Right" Width="20" Visibility="Collapsed" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DigiBtnGreen" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="True">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="Custom">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Margin="0">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                                <Image Margin="0" Source="/PhotoSW;component/images/Digi-Green.png" Stretch="Uniform" />
                                <Image Name="image" Height="21.333" Source="/PhotoSW;component/images/tick.png" Stretch="Fill" VerticalAlignment="Top" Margin="0,-5.333,-5,0" HorizontalAlignment="Right" Width="20" Visibility="Collapsed" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyleHue" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="True">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="Custom">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Margin="0">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                                <Image Margin="0" Source="/PhotoSW;component/images/Digi-Hue.png" Stretch="Uniform" />
                                <Image Name="image" Height="21.333" Source="/PhotoSW;component/images/tick.png" Stretch="Fill" VerticalAlignment="Top" Margin="0,-5.333,-5,0" HorizontalAlignment="Right" Width="20" Visibility="Collapsed" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DigiSaturation" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="True">
                            <Grid Margin="0">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                                <Image Margin="0" Source="/PhotoSW;component/images/Digi-Saturation.png" Stretch="Uniform" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DigiLightness" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="True">
                            <Grid Margin="0">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                                <Image Margin="0" Source="/PhotoSW;component/images/Digi-Lightness.png" Stretch="Uniform" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DigiButtonStyleFilters" TargetType="{x:Type Button}">
            <Setter Property="Control.Padding" Value="0" />
            <Setter Property="FrameworkElement.Cursor" Value="Hand" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0.405" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                                <EasingColorKeyFrame KeyTime="0" Value="White" />
                                                <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FFD2D2D2" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.66" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FF8F8F8F" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                            <Rectangle Name="rectangle" Fill="#FFFFFFFF" Opacity="0" Margin="0" RadiusX="10" RadiusY="10" Stroke="{x:Null}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsFocused" Value="True" />
                            <Trigger Property="Button.IsDefaulted" Value="True" />
                            <Trigger Property="UIElement.IsMouseOver" Value="True" />
                            <Trigger Property="ButtonBase.IsPressed" Value="True" />
                            <Trigger Property="UIElement.IsEnabled" Value="False" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DigiButtonStyleMagenta" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="True">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="Custom">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Margin="0">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                                <Image Margin="0" Source="/PhotoSW;component/images/Digi-Magenta.png" Stretch="Uniform" />
                                <Image Name="image" Height="21.333" Source="/PhotoSW;component/images/tick.png" Stretch="Fill" VerticalAlignment="Top" Margin="0,-5.333,-5,0" HorizontalAlignment="Right" Width="20" Visibility="Collapsed" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DigiButtonStyleLime" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="True">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="Custom">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Margin="0">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                                <Image Margin="0" Source="/PhotoSW;component/images/Digi-Lime.png" Stretch="Uniform" />
                                <Image Name="image" Height="21.333" Source="/PhotoSW;component/images/tick.png" Stretch="Fill" VerticalAlignment="Top" Margin="0,-5.333,-5,0" HorizontalAlignment="Right" Width="20" Visibility="Collapsed" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DigiButtonStyleYellow" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="True">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="Custom">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Margin="0">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                                <Image Margin="0" Source="/PhotoSW;component/images/Digi-Yellow.png" Stretch="Uniform" />
                                <Image Name="image" Height="21.333" Source="/PhotoSW;component/images/tick.png" Stretch="Fill" VerticalAlignment="Top" Margin="0,-5.333,-5,0" HorizontalAlignment="Right" Width="20" Visibility="Collapsed" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DigiButtonStyleSkyBlue" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="True">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="Custom">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Margin="0">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                                <Image Margin="0" Source="/PhotoSW;component/images/Digi-Skyblue.png" Stretch="Uniform" />
                                <Image Name="image" Height="21.333" Source="/PhotoSW;component/images/tick.png" Stretch="Fill" VerticalAlignment="Top" Margin="0,-5.333,-5,0" HorizontalAlignment="Right" Width="20" Visibility="Collapsed" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DigiButtonStyleLightRed" TargetType="{x:Type Button}">
            <Setter Property="Control.Padding" Value="0" />
            <Setter Property="FrameworkElement.Cursor" Value="Hand" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0.405" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                                <EasingColorKeyFrame KeyTime="0" Value="White" />
                                                <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FFD2D2D2" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.66" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FF8F8F8F" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                            <Rectangle Name="rectangle" Fill="#FFFFFFFF" Opacity="0" Margin="0" RadiusX="10" RadiusY="10" Stroke="{x:Null}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsFocused" Value="True" />
                            <Trigger Property="Button.IsDefaulted" Value="True" />
                            <Trigger Property="UIElement.IsMouseOver" Value="True" />
                            <Trigger Property="ButtonBase.IsPressed" Value="True" />
                            <Trigger Property="UIElement.IsEnabled" Value="False" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyleCartoonize" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="True">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="Custom">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Margin="0">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                                <Image Margin="0" Source="/PhotoSW;component/images/Cartoonize.png" Stretch="Uniform" />
                                <Image Name="image" Height="21.333" Source="/PhotoSW;component/images/tick.png" Stretch="Fill" VerticalAlignment="Top" Margin="0,-5.333,-5,0" HorizontalAlignment="Right" Width="20" Visibility="Collapsed" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyleCartoonizeAct" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="True">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="Custom">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Margin="0">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                                <Image Margin="0" Source="/PhotoSW;component/images/Cartoonize_act.png" Stretch="Uniform" />
                                <Image Name="image" Height="21.333" Source="/PhotoSW;component/images/tick.png" Stretch="Fill" VerticalAlignment="Top" Margin="0,-5.333,-5,0" HorizontalAlignment="Right" Width="20" Visibility="Collapsed" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="OderGrdComboDataTemplate">
            <StackPanel Margin="5">
                <Image Stretch="Uniform" Height="80" Width="77" Source="{Binding FilePath, Converter={StaticResource Imageconverter}, IsAsync=True}" />
                <TextBlock Height="20" TextWrapping="Wrap" Width="56.667" Margin="0,5,0,0" Text="{Binding Name}" />
            </StackPanel>
        </DataTemplate>
        <ItemsPanelTemplate x:Key="GrdItemsPanelTemplate">
            <WrapPanel IsItemsHost="True" MinWidth="0" MaxWidth="400" />
        </ItemsPanelTemplate>
        <Style x:Key="DigiTextBoxStyle" TargetType="{x:Type TextBox}" BasedOn="{x:Null}">
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource TextBoxBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="UIElement.AllowDrop" Value="True" />
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border BorderThickness="0" MaxHeight="50" BorderBrush="{x:Null}">
                            <Grid Margin="-1">
                                <Rectangle Margin="0" RadiusY="10" RadiusX="10" Visibility="Collapsed">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush StartPoint="0.5,1" EndPoint="0.5,0">
                                            <GradientStop Color="#FFA8A2A0" Offset="0.00561798" />
                                            <GradientStop Color="#FF000000" Offset="0.249975" />
                                            <GradientStop Color="#FFFFFFFF" Offset="0.250025" />
                                            <GradientStop Color="#FFD3D0CF" Offset="0.61442" />
                                            <GradientStop Color="#FFA8A2A0" Offset="1" />
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Margin="3" RadiusY="10" RadiusX="10" Visibility="Collapsed">
                                    <Rectangle.Fill>
                                        <RadialGradientBrush RadiusX="0.360181" RadiusY="1.85149" Center="0.5,0.500006" GradientOrigin="0.5,0.500006">
                                            <RadialGradientBrush.RelativeTransform>
                                                <TransformGroup />
                                            </RadialGradientBrush.RelativeTransform>
                                            <GradientStop Color="#FFECE8E1" Offset="0" />
                                            <GradientStop Color="#FFFFFFFF" Offset="0.509091" />
                                            <GradientStop Color="#FFD7D6D3" Offset="1" />
                                        </RadialGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Margin="3" RadiusY="2" RadiusX="2" Stroke="#FFFFFFFF" StrokeThickness="0.666667" StrokeMiterLimit="2.75" Fill="#FFE9E9E9" Visibility="Collapsed" />
                                <Rectangle HorizontalAlignment="Stretch" Margin="0" RadiusY="2" RadiusX="2" Width="Auto" Fill="#FFBABABA" />
                                <Rectangle RadiusY="2" RadiusX="2" Stroke="#FFFFFFFF" StrokeThickness="0.666667" StrokeMiterLimit="2.75" Margin="1">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush StartPoint="0.499999,-0.0298528" EndPoint="0.499999,1.07553">
                                            <GradientStop Color="#FFFFFFFF" Offset="0" />
                                            <GradientStop Color="#FFEEEEEE" Offset="0.181818" />
                                            <GradientStop Color="#FFDEDEDE" Offset="0.515152" />
                                            <GradientStop Color="#FFEEEEEE" Offset="0.854546" />
                                            <GradientStop Color="#FFFFFFFF" Offset="1" />
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Border Name="Bd" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="True" Margin="8,0" Background="{x:Null}" BorderBrush="{x:Null}">
                                    <ScrollViewer Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Padding="10,5" VerticalContentAlignment="Center" VerticalAlignment="Center" />
                                </Border>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Border.Background" />
                                <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.FontSize" Value="32" />
            <Setter Property="Control.FontFamily" Value="Verdana" />
        </Style>
        
        <Style x:Key="DigiPasswordBoxStyle" TargetType="{x:Type PasswordBox}" BasedOn="{x:Null}">
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource TextBoxBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="UIElement.AllowDrop" Value="True" />
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Border BorderThickness="0" MaxHeight="50" BorderBrush="{x:Null}">
                            <Grid Margin="-1">
                                <Rectangle Margin="0" RadiusY="10" RadiusX="10" Visibility="Collapsed">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush StartPoint="0.5,1" EndPoint="0.5,0">
                                            <GradientStop Color="#FFA8A2A0" Offset="0.00561798" />
                                            <GradientStop Color="#FF000000" Offset="0.249975" />
                                            <GradientStop Color="#FFFFFFFF" Offset="0.250025" />
                                            <GradientStop Color="#FFD3D0CF" Offset="0.61442" />
                                            <GradientStop Color="#FFA8A2A0" Offset="1" />
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Margin="3" RadiusY="10" RadiusX="10" Visibility="Collapsed">
                                    <Rectangle.Fill>
                                        <RadialGradientBrush RadiusX="0.360181" RadiusY="1.85149" Center="0.5,0.500006" GradientOrigin="0.5,0.500006">
                                            <RadialGradientBrush.RelativeTransform>
                                                <TransformGroup />
                                            </RadialGradientBrush.RelativeTransform>
                                            <GradientStop Color="#FFECE8E1" Offset="0" />
                                            <GradientStop Color="#FFFFFFFF" Offset="0.509091" />
                                            <GradientStop Color="#FFD7D6D3" Offset="1" />
                                        </RadialGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Margin="3" RadiusY="2" RadiusX="2" Stroke="#FFFFFFFF" StrokeThickness="0.666667" StrokeMiterLimit="2.75" Fill="#FFE9E9E9" Visibility="Collapsed" />
                                <Rectangle HorizontalAlignment="Stretch" Margin="0" RadiusY="2" RadiusX="2" Width="Auto" Fill="#FFBABABA" />
                                <Rectangle RadiusY="2" RadiusX="2" Stroke="#FFFFFFFF" StrokeThickness="0.666667" StrokeMiterLimit="2.75" Margin="1">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush StartPoint="0.499999,-0.0298528" EndPoint="0.499999,1.07553">
                                            <GradientStop Color="#FFFFFFFF" Offset="0" />
                                            <GradientStop Color="#FFEEEEEE" Offset="0.181818" />
                                            <GradientStop Color="#FFDEDEDE" Offset="0.515152" />
                                            <GradientStop Color="#FFEEEEEE" Offset="0.854546" />
                                            <GradientStop Color="#FFFFFFFF" Offset="1" />
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Border Name="Bd" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="True" Margin="8,0" Background="{x:Null}" BorderBrush="{x:Null}">
                                    <ScrollViewer Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Padding="10,5" VerticalContentAlignment="Center" VerticalAlignment="Center" />
                                </Border>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Border.Background" />
                                <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.FontSize" Value="32" />
            <Setter Property="Control.FontFamily" Value="Verdana" />
        </Style>
        <Style x:Key="DigiPreviousBtn" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource HorizontalScrollBarBackground}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome" SnapsToDevicePixels="True">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="path">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Margin="0" HorizontalAlignment="Stretch">
                                <Border Margin="0" HorizontalAlignment="Center">
                                    <Grid>
                                        <Path Stretch="Fill" Data="F1M523.332,279.187L488.469,313.702 280.757,313.702C270.107,313.702,261.474,305.067,261.474,294.417L261.474,263.955C261.474,253.304 270.107,244.67 280.757,244.67 280.757,244.67 475.122,244.67 488.469,244.67L523.332,279.187z" HorizontalAlignment="Stretch" Height="Auto" Margin="2.446,1.517,3.1,1.515" VerticalAlignment="Stretch" Width="Auto" RenderTransformOrigin="0.5,0.5">
                                            <Path.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform />
                                                    <SkewTransform />
                                                    <RotateTransform Angle="-179.856" />
                                                    <TranslateTransform X="0.654" Y="-0.001" />
                                                </TransformGroup>
                                            </Path.RenderTransform>
                                            <Path.Fill>
                                                <RadialGradientBrush RadiusX="0.89484" RadiusY="3.39436" Center="0.69614,0.67021" GradientOrigin="0.69614,0.67021">
                                                    <RadialGradientBrush.RelativeTransform>
                                                        <TransformGroup />
                                                    </RadialGradientBrush.RelativeTransform>
                                                    <GradientStop Color="#FF8F0000" Offset="0" />
                                                    <GradientStop Color="#FF8B1010" Offset="0.241758" />
                                                    <GradientStop Color="#FFB13838" Offset="0.373626" />
                                                    <GradientStop Color="#FF881212" Offset="0.489011" />
                                                    <GradientStop Color="#FF560A0A" Offset="0.568745" />
                                                    <GradientStop Color="#FF7E1010" Offset="0.703297" />
                                                    <GradientStop Color="#FF8B0303" Offset="0.741868" />
                                                    <GradientStop Color="#FF130101" Offset="1" />
                                                </RadialGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Path Stretch="Fill" Data="F1M392.402,279.187C320.919,256.024 277.406,282.583 261.532,295.602 262.147,305.7 270.506,313.702 280.757,313.702L488.469,313.702 523.332,279.187C523.332,279.187,484.437,309.005,392.402,279.187z" HorizontalAlignment="Stretch" Height="Auto" Margin="2.463,8.001,3.1,1.515" VerticalAlignment="Stretch" Width="Auto" RenderTransformOrigin="0.5,0.5">
                                            <Path.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform />
                                                    <SkewTransform />
                                                    <RotateTransform Angle="-179.856" />
                                                    <TranslateTransform X="0.646" Y="-6.485" />
                                                </TransformGroup>
                                            </Path.RenderTransform>
                                            <Path.Fill>
                                                <RadialGradientBrush RadiusX="0.916464" RadiusY="5.49439" Center="0.808072,-0.198337" GradientOrigin="0.808072,-0.198337">
                                                    <RadialGradientBrush.RelativeTransform>
                                                        <TransformGroup />
                                                    </RadialGradientBrush.RelativeTransform>
                                                    <GradientStop Color="#FFFFFFFF" Offset="0" />
                                                    <GradientStop Color="#FFAB0808" Offset="0.241758" />
                                                    <GradientStop Color="#FFB13838" Offset="0.373626" />
                                                    <GradientStop Color="#FF881212" Offset="0.489011" />
                                                    <GradientStop Color="#FF870000" Offset="0.593279" />
                                                    <GradientStop Color="#FFA32020" Offset="0.769231" />
                                                    <GradientStop Color="#FF8F0303" Offset="0.905983" />
                                                    <GradientStop Color="#FF130101" Offset="1" />
                                                </RadialGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Path Stretch="Fill" Data="F1M278.35,318.782C265.071,318.778,254.316,308.019,254.311,294.744L254.311,263.624C254.316,250.348,265.071,239.589,278.35,239.584L278.35,239.584C278.381,239.584,290.755,239.584,309.581,239.584L309.581,239.584C328.405,239.584,353.645,239.584,379.314,239.584L379.314,239.584C430.648,239.584,483.686,239.584,490.502,239.584L492.285,239.584 529.167,276.1 532.284,279.187 492.285,318.782 278.35,318.782z M262.998,263.624L262.998,294.744C263.012,303.22,269.872,310.08,278.35,310.093L488.715,310.093 519.939,279.187 488.71,248.271C470.925,248.271,363.718,248.271,309.581,248.271L309.581,248.271C290.755,248.271,278.381,248.271,278.35,248.271L278.35,248.271C269.872,248.291,263.012,255.147,262.998,263.624z" HorizontalAlignment="Stretch" Height="Auto" Margin="0.261,0.218,0.369,0.218" VerticalAlignment="Stretch" Width="Auto" RenderTransformOrigin="0.5,0.5">
                                            <Path.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform />
                                                    <SkewTransform />
                                                    <RotateTransform Angle="-179.856" />
                                                    <TranslateTransform X="0.108" />
                                                </TransformGroup>
                                            </Path.RenderTransform>
                                            <Path.Fill>
                                                <LinearGradientBrush StartPoint="-5.48931e-008,0.500001" EndPoint="1,0.500001">
                                                    <GradientStop Color="#FFCCCCCC" Offset="5e-005" />
                                                    <GradientStop Color="#FFE5E5E5" Offset="0.0569518" />
                                                    <GradientStop Color="#FFFFFFFF" Offset="0.106741" />
                                                    <GradientStop Color="#FFC2C2C2" Offset="0.189971" />
                                                    <GradientStop Color="#FF858585" Offset="0.247191" />
                                                    <GradientStop Color="#FFA8A8A8" Offset="0.301124" />
                                                    <GradientStop Color="#FFCCCCCC" Offset="0.314607" />
                                                    <GradientStop Color="#FF7F7F7F" Offset="0.511028" />
                                                    <GradientStop Color="#FF323232" Offset="0.646067" />
                                                    <GradientStop Color="#FF4B4B4B" Offset="0.702663" />
                                                    <GradientStop Color="#FF656565" Offset="0.741573" />
                                                    <GradientStop Color="#FF323232" Offset="0.752422" />
                                                    <GradientStop Color="#FF000000" Offset="0.780899" />
                                                    <GradientStop Color="#FF7F7F7F" Offset="0.808795" />
                                                    <GradientStop Color="#FFFFFFFF" Offset="0.882022" />
                                                    <GradientStop Color="#FFD1D1D1" Offset="0.914568" />
                                                    <GradientStop Color="#FFA3A3A3" Offset="1" />
                                                </LinearGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Path Stretch="Fill" Data="F1M278.35,319.631L278.35,318.782 278.35,317.929 491.935,317.925 531.072,279.185 491.932,240.435 490.5,240.438C483.685,240.435,430.648,240.435,379.316,240.438L379.316,240.438C353.645,240.435,328.405,240.435,309.583,240.438L309.583,240.438C290.755,240.435,278.378,240.435,278.35,240.438L278.35,240.438C265.54,240.438,255.164,250.82,255.161,263.624L255.161,294.742C255.164,307.551,265.54,317.925,278.35,317.925L278.35,318.782 278.35,319.631C264.601,319.629,253.465,308.492,253.457,294.744L253.457,263.624C253.465,249.879,264.601,238.737,278.35,238.735L278.35,238.735C278.378,238.735,290.755,238.735,309.583,238.735L309.583,238.735C328.405,238.735,353.645,238.735,379.316,238.735L379.316,238.735C430.648,238.735,483.685,238.735,490.5,238.735L492.636,238.735 530.367,276.092 533.493,279.185 492.636,319.631 278.35,319.631z" HorizontalAlignment="Stretch" Height="Auto" Margin="0" VerticalAlignment="Stretch" Width="Auto" RenderTransformOrigin="0.5,0.5">
                                            <Path.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform />
                                                    <SkewTransform />
                                                    <RotateTransform Angle="-179.856" />
                                                    <TranslateTransform />
                                                </TransformGroup>
                                            </Path.RenderTransform>
                                            <Path.Fill>
                                                <LinearGradientBrush StartPoint="0.5,0.623668" EndPoint="0.5,-0.410655">
                                                    <GradientStop Color="#FF000000" Offset="0" />
                                                    <GradientStop Color="#FF212121" Offset="0.043956" />
                                                    <GradientStop Color="#FF434343" Offset="0.0824176" />
                                                    <GradientStop Color="#FF898989" Offset="0.129304" />
                                                    <GradientStop Color="#FFCFCFCF" Offset="0.17033" />
                                                    <GradientStop Color="#FFE7E7E7" Offset="0.263736" />
                                                    <GradientStop Color="#FFFFFFFF" Offset="0.516483" />
                                                    <GradientStop Color="#FFE7E7E7" Offset="0.770248" />
                                                    <GradientStop Color="#FFCFCFCF" Offset="0.835165" />
                                                    <GradientStop Color="#FF898989" Offset="0.882051" />
                                                    <GradientStop Color="#FF434343" Offset="0.923077" />
                                                    <GradientStop Color="#FF212121" Offset="0.964103" />
                                                    <GradientStop Color="#FF000000" Offset="1" />
                                                </LinearGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Path Stretch="Fill" Data="F1M489.061,247.421L278.35,247.421C269.403,247.441,262.163,254.679,262.146,263.624L262.146,294.744C262.163,303.69,269.403,310.927,278.35,310.942L489.066,310.942 521.144,279.185 489.061,247.421z M488.364,309.245L278.35,309.245C270.343,309.23,263.858,302.747,263.849,294.742L263.849,263.624C263.858,255.62,270.343,249.136,278.353,249.124L488.358,249.124 518.726,279.185 488.364,309.245z" HorizontalAlignment="Stretch" Height="Auto" Margin="2.651,2.221,3.767,2.222" VerticalAlignment="Stretch" Width="Auto" RenderTransformOrigin="0.5,0.5">
                                            <Path.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform />
                                                    <SkewTransform />
                                                    <RotateTransform Angle="-179.856" />
                                                    <TranslateTransform X="1.116" Y="0.003" />
                                                </TransformGroup>
                                            </Path.RenderTransform>
                                            <Path.Fill>
                                                <LinearGradientBrush StartPoint="-1.1783e-007,0.5" EndPoint="1,0.5">
                                                    <GradientStop Color="#FF000000" Offset="0" />
                                                    <GradientStop Color="#FF212121" Offset="0.043956" />
                                                    <GradientStop Color="#FF434343" Offset="0.0824176" />
                                                    <GradientStop Color="#FF898989" Offset="0.129304" />
                                                    <GradientStop Color="#FFCFCFCF" Offset="0.17033" />
                                                    <GradientStop Color="#FFE7E7E7" Offset="0.263736" />
                                                    <GradientStop Color="#FFFFFFFF" Offset="0.516483" />
                                                    <GradientStop Color="#FFE7E7E7" Offset="0.770248" />
                                                    <GradientStop Color="#FFCFCFCF" Offset="0.835165" />
                                                    <GradientStop Color="#FF898989" Offset="0.882051" />
                                                    <GradientStop Color="#FF434343" Offset="0.923077" />
                                                    <GradientStop Color="#FF212121" Offset="0.964103" />
                                                    <GradientStop Color="#FF000000" Offset="1" />
                                                </LinearGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                    </Grid>
                                </Border>
                                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">
                                    <ContentPresenter.Effect>
                                        <DropShadowEffect ShadowDepth="2" />
                                    </ContentPresenter.Effect>
                                </ContentPresenter>
                                <Path Name="path" Stretch="Fill" Data="F1M523.332,279.187L488.469,313.702 280.757,313.702C270.107,313.702,261.474,305.067,261.474,294.417L261.474,263.955C261.474,253.304 270.107,244.67 280.757,244.67 280.757,244.67 475.122,244.67 488.469,244.67L523.332,279.187z" HorizontalAlignment="Stretch" Height="Auto" Margin="-0.219,1.516,1.428,0.515" VerticalAlignment="Stretch" Width="Auto" RenderTransformOrigin="0.5,0.5" Fill="#FF5C5C5C" Opacity="0.64" Visibility="Collapsed">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform Angle="-179.856" />
                                            <TranslateTransform X="0.654" Y="-0.001" />
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.FontWeight" Value="Bold" />
            <Setter Property="FrameworkElement.Width" Value="Auto" />
            <Setter Property="FrameworkElement.Height" Value="Auto" />
            <Setter Property="Control.FontSize" Value="21.333" />
        </Style>
        <Style x:Key="DigiNextBtnStyle" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource HorizontalScrollBarBackground}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome" SnapsToDevicePixels="True">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="path">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Margin="0">
                                <Border Margin="0" HorizontalAlignment="Center">
                                    <Grid>
                                        <Path Stretch="Fill" Data="F1M523.332,279.187L488.469,313.702 280.757,313.702C270.107,313.702,261.474,305.067,261.474,294.417L261.474,263.955C261.474,253.304 270.107,244.67 280.757,244.67 280.757,244.67 475.122,244.67 488.469,244.67L523.332,279.187z" HorizontalAlignment="Stretch" Height="Auto" Margin="2.446,1.517,3.1,1.515" VerticalAlignment="Stretch" Width="Auto" RenderTransformOrigin="0.5,0.5">
                                            <Path.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform ScaleY="1" ScaleX="-1" />
                                                    <SkewTransform AngleY="0" AngleX="0" />
                                                    <RotateTransform Angle="179.856" />
                                                    <TranslateTransform X="0.654" Y="-0.001" />
                                                </TransformGroup>
                                            </Path.RenderTransform>
                                            <Path.Fill>
                                                <RadialGradientBrush RadiusX="0.89484" RadiusY="3.39436" Center="0.69614,0.67021" GradientOrigin="0.69614,0.67021">
                                                    <RadialGradientBrush.RelativeTransform>
                                                        <TransformGroup />
                                                    </RadialGradientBrush.RelativeTransform>
                                                    <GradientStop Color="#FF8F0000" Offset="0" />
                                                    <GradientStop Color="#FF8B1010" Offset="0.241758" />
                                                    <GradientStop Color="#FFB13838" Offset="0.373626" />
                                                    <GradientStop Color="#FF881212" Offset="0.489011" />
                                                    <GradientStop Color="#FF560A0A" Offset="0.568745" />
                                                    <GradientStop Color="#FF7E1010" Offset="0.703297" />
                                                    <GradientStop Color="#FF8B0303" Offset="0.741868" />
                                                    <GradientStop Color="#FF130101" Offset="1" />
                                                </RadialGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Path Stretch="Fill" Data="F1M392.402,279.187C320.919,256.024 277.406,282.583 261.532,295.602 262.147,305.7 270.506,313.702 280.757,313.702L488.469,313.702 523.332,279.187C523.332,279.187,484.437,309.005,392.402,279.187z" HorizontalAlignment="Stretch" Height="Auto" Margin="2.463,8.001,3.1,1.515" VerticalAlignment="Stretch" Width="Auto" RenderTransformOrigin="0.5,0.5">
                                            <Path.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform ScaleY="1" ScaleX="-1" />
                                                    <SkewTransform AngleY="0" AngleX="0" />
                                                    <RotateTransform Angle="179.856" />
                                                    <TranslateTransform X="0.646" Y="-6.485" />
                                                </TransformGroup>
                                            </Path.RenderTransform>
                                            <Path.Fill>
                                                <RadialGradientBrush RadiusX="0.916464" RadiusY="5.49439" Center="0.808072,-0.198337" GradientOrigin="0.808072,-0.198337">
                                                    <RadialGradientBrush.RelativeTransform>
                                                        <TransformGroup />
                                                    </RadialGradientBrush.RelativeTransform>
                                                    <GradientStop Color="#FFFFFFFF" Offset="0" />
                                                    <GradientStop Color="#FFAB0808" Offset="0.241758" />
                                                    <GradientStop Color="#FFB13838" Offset="0.373626" />
                                                    <GradientStop Color="#FF881212" Offset="0.489011" />
                                                    <GradientStop Color="#FF870000" Offset="0.593279" />
                                                    <GradientStop Color="#FFA32020" Offset="0.769231" />
                                                    <GradientStop Color="#FF8F0303" Offset="0.905983" />
                                                    <GradientStop Color="#FF130101" Offset="1" />
                                                </RadialGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Path Stretch="Fill" Data="F1M278.35,318.782C265.071,318.778,254.316,308.019,254.311,294.744L254.311,263.624C254.316,250.348,265.071,239.589,278.35,239.584L278.35,239.584C278.381,239.584,290.755,239.584,309.581,239.584L309.581,239.584C328.405,239.584,353.645,239.584,379.314,239.584L379.314,239.584C430.648,239.584,483.686,239.584,490.502,239.584L492.285,239.584 529.167,276.1 532.284,279.187 492.285,318.782 278.35,318.782z M262.998,263.624L262.998,294.744C263.012,303.22,269.872,310.08,278.35,310.093L488.715,310.093 519.939,279.187 488.71,248.271C470.925,248.271,363.718,248.271,309.581,248.271L309.581,248.271C290.755,248.271,278.381,248.271,278.35,248.271L278.35,248.271C269.872,248.291,263.012,255.147,262.998,263.624z" HorizontalAlignment="Stretch" Height="Auto" Margin="0.261,0.218,0.369,0.218" VerticalAlignment="Stretch" Width="Auto" RenderTransformOrigin="0.5,0.5">
                                            <Path.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform ScaleY="1" ScaleX="-1" />
                                                    <SkewTransform AngleY="0" AngleX="0" />
                                                    <RotateTransform Angle="179.856" />
                                                    <TranslateTransform X="0.108" />
                                                </TransformGroup>
                                            </Path.RenderTransform>
                                            <Path.Fill>
                                                <LinearGradientBrush StartPoint="-5.48931e-008,0.500001" EndPoint="1,0.500001">
                                                    <GradientStop Color="#FFCCCCCC" Offset="5e-005" />
                                                    <GradientStop Color="#FFE5E5E5" Offset="0.0569518" />
                                                    <GradientStop Color="#FFFFFFFF" Offset="0.106741" />
                                                    <GradientStop Color="#FFC2C2C2" Offset="0.189971" />
                                                    <GradientStop Color="#FF858585" Offset="0.247191" />
                                                    <GradientStop Color="#FFA8A8A8" Offset="0.301124" />
                                                    <GradientStop Color="#FFCCCCCC" Offset="0.314607" />
                                                    <GradientStop Color="#FF7F7F7F" Offset="0.511028" />
                                                    <GradientStop Color="#FF323232" Offset="0.646067" />
                                                    <GradientStop Color="#FF4B4B4B" Offset="0.702663" />
                                                    <GradientStop Color="#FF656565" Offset="0.741573" />
                                                    <GradientStop Color="#FF323232" Offset="0.752422" />
                                                    <GradientStop Color="#FF000000" Offset="0.780899" />
                                                    <GradientStop Color="#FF7F7F7F" Offset="0.808795" />
                                                    <GradientStop Color="#FFFFFFFF" Offset="0.882022" />
                                                    <GradientStop Color="#FFD1D1D1" Offset="0.914568" />
                                                    <GradientStop Color="#FFA3A3A3" Offset="1" />
                                                </LinearGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Path Stretch="Fill" Data="F1M278.35,319.631L278.35,318.782 278.35,317.929 491.935,317.925 531.072,279.185 491.932,240.435 490.5,240.438C483.685,240.435,430.648,240.435,379.316,240.438L379.316,240.438C353.645,240.435,328.405,240.435,309.583,240.438L309.583,240.438C290.755,240.435,278.378,240.435,278.35,240.438L278.35,240.438C265.54,240.438,255.164,250.82,255.161,263.624L255.161,294.742C255.164,307.551,265.54,317.925,278.35,317.925L278.35,318.782 278.35,319.631C264.601,319.629,253.465,308.492,253.457,294.744L253.457,263.624C253.465,249.879,264.601,238.737,278.35,238.735L278.35,238.735C278.378,238.735,290.755,238.735,309.583,238.735L309.583,238.735C328.405,238.735,353.645,238.735,379.316,238.735L379.316,238.735C430.648,238.735,483.685,238.735,490.5,238.735L492.636,238.735 530.367,276.092 533.493,279.185 492.636,319.631 278.35,319.631z" HorizontalAlignment="Stretch" Height="Auto" Margin="0" VerticalAlignment="Stretch" Width="Auto" RenderTransformOrigin="0.5,0.5">
                                            <Path.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform ScaleY="1" ScaleX="-1" />
                                                    <SkewTransform AngleY="0" AngleX="0" />
                                                    <RotateTransform Angle="179.856" />
                                                    <TranslateTransform />
                                                </TransformGroup>
                                            </Path.RenderTransform>
                                            <Path.Fill>
                                                <LinearGradientBrush StartPoint="0.5,0.623668" EndPoint="0.5,-0.410655">
                                                    <GradientStop Color="#FF000000" Offset="0" />
                                                    <GradientStop Color="#FF212121" Offset="0.043956" />
                                                    <GradientStop Color="#FF434343" Offset="0.0824176" />
                                                    <GradientStop Color="#FF898989" Offset="0.129304" />
                                                    <GradientStop Color="#FFCFCFCF" Offset="0.17033" />
                                                    <GradientStop Color="#FFE7E7E7" Offset="0.263736" />
                                                    <GradientStop Color="#FFFFFFFF" Offset="0.516483" />
                                                    <GradientStop Color="#FFE7E7E7" Offset="0.770248" />
                                                    <GradientStop Color="#FFCFCFCF" Offset="0.835165" />
                                                    <GradientStop Color="#FF898989" Offset="0.882051" />
                                                    <GradientStop Color="#FF434343" Offset="0.923077" />
                                                    <GradientStop Color="#FF212121" Offset="0.964103" />
                                                    <GradientStop Color="#FF000000" Offset="1" />
                                                </LinearGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Path Stretch="Fill" Data="F1M489.061,247.421L278.35,247.421C269.403,247.441,262.163,254.679,262.146,263.624L262.146,294.744C262.163,303.69,269.403,310.927,278.35,310.942L489.066,310.942 521.144,279.185 489.061,247.421z M488.364,309.245L278.35,309.245C270.343,309.23,263.858,302.747,263.849,294.742L263.849,263.624C263.858,255.62,270.343,249.136,278.353,249.124L488.358,249.124 518.726,279.185 488.364,309.245z" HorizontalAlignment="Stretch" Height="Auto" Margin="2.651,2.221,3.767,2.222" VerticalAlignment="Stretch" Width="Auto" RenderTransformOrigin="0.5,0.5">
                                            <Path.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform ScaleY="1" ScaleX="-1" />
                                                    <SkewTransform AngleY="0" AngleX="0" />
                                                    <RotateTransform Angle="179.856" />
                                                    <TranslateTransform X="1.116" Y="0.003" />
                                                </TransformGroup>
                                            </Path.RenderTransform>
                                            <Path.Fill>
                                                <LinearGradientBrush StartPoint="-1.1783e-007,0.5" EndPoint="1,0.5">
                                                    <GradientStop Color="#FF000000" Offset="0" />
                                                    <GradientStop Color="#FF212121" Offset="0.043956" />
                                                    <GradientStop Color="#FF434343" Offset="0.0824176" />
                                                    <GradientStop Color="#FF898989" Offset="0.129304" />
                                                    <GradientStop Color="#FFCFCFCF" Offset="0.17033" />
                                                    <GradientStop Color="#FFE7E7E7" Offset="0.263736" />
                                                    <GradientStop Color="#FFFFFFFF" Offset="0.516483" />
                                                    <GradientStop Color="#FFE7E7E7" Offset="0.770248" />
                                                    <GradientStop Color="#FFCFCFCF" Offset="0.835165" />
                                                    <GradientStop Color="#FF898989" Offset="0.882051" />
                                                    <GradientStop Color="#FF434343" Offset="0.923077" />
                                                    <GradientStop Color="#FF212121" Offset="0.964103" />
                                                    <GradientStop Color="#FF000000" Offset="1" />
                                                </LinearGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                    </Grid>
                                </Border>
                                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">
                                    <ContentPresenter.Effect>
                                        <DropShadowEffect ShadowDepth="2" />
                                    </ContentPresenter.Effect>
                                </ContentPresenter>
                                <Path Name="path" Stretch="Fill" Data="F1M523.332,279.187L488.469,313.702 280.757,313.702C270.107,313.702,261.474,305.067,261.474,294.417L261.474,263.955C261.474,253.304 270.107,244.67 280.757,244.67 280.757,244.67 475.122,244.67 488.469,244.67L523.332,279.187z" HorizontalAlignment="Stretch" Height="Auto" Margin="-0.804,1.519,1.102,0.51" VerticalAlignment="Stretch" Width="Auto" RenderTransformOrigin="0.5,0.5" Fill="#FF5C5C5C" Opacity="0.635" Visibility="Collapsed">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleY="1" ScaleX="-1" />
                                            <SkewTransform AngleY="0" AngleX="0" />
                                            <RotateTransform Angle="179.856" />
                                            <TranslateTransform X="0.654" Y="-0.001" />
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.FontSize" Value="21.333" />
            <Setter Property="Control.FontWeight" Value="Bold" />
        </Style>
        <Style x:Key="ComboBoxFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="4,4,21,4" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Geometry x:Key="DownArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>
        <Style x:Key="ComboBoxReadonlyToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
            <Setter Property="Control.IsTabStop" Value="False" />
            <Setter Property="UIElement.Focusable" Value="False" />
            <Setter Property="ButtonBase.ClickMode" Value="Press" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <sc:ButtonChrome Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}" RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" RenderPressed="{TemplateBinding ButtonBase.IsPressed}" SnapsToDevicePixels="True">
                            <Grid HorizontalAlignment="Right" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Path Name="Arrow" Data="{StaticResource DownArrowGeometry}" Fill="#FF000000" HorizontalAlignment="Center" Margin="3,1,0,0" VerticalAlignment="Center" />
                            </Grid>
                        </sc:ButtonChrome>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                                <Setter TargetName="Chrome" Property="Microsoft_Windows_Themes:ButtonChrome.RenderPressed" Value="True" />
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter TargetName="Arrow" Property="Shape.Fill" Value="#FFAFAFAF" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
            <Setter Property="UIElement.AllowDrop" Value="True" />
            <Setter Property="FrameworkElement.MinWidth" Value="0" />
            <Setter Property="FrameworkElement.MinHeight" Value="0" />
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer Name="PART_ContentHost" Background="#00FFFFFF" Focusable="False" ScrollViewer.HorizontalScrollBarVisibility="Hidden" ScrollViewer.VerticalScrollBarVisibility="Hidden" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
            <Setter Property="Control.IsTabStop" Value="False" />
            <Setter Property="UIElement.Focusable" Value="False" />
            <Setter Property="ButtonBase.ClickMode" Value="Press" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <sc:ButtonChrome Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}" RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" RenderPressed="{TemplateBinding ButtonBase.IsPressed}" RoundCorners="False" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                            <Path Name="Arrow" Data="{StaticResource DownArrowGeometry}" Fill="#FF000000" HorizontalAlignment="Center" Margin="0,1,0,0" VerticalAlignment="Center" />
                        </sc:ButtonChrome>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                                <Setter TargetName="Chrome" Property="Microsoft_Windows_Themes:ButtonChrome.RenderPressed" Value="True" />
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter TargetName="Arrow" Property="Shape.Fill" Value="#FFAFAFAF" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
            <Grid Name="Placement" SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Popup Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
                    <sc:SystemDropShadowChrome Name="Shdw" Color="Transparent" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=Placement}">
                        <Border Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer Name="DropDownScrollViewer">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}" />
                                    </Canvas>
                                    <ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </sc:SystemDropShadowChrome>
                </Popup>
                <sc:ListBoxChrome Name="Border" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" Grid.ColumnSpan="2" RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" RenderFocused="{TemplateBinding UIElement.IsKeyboardFocusWithin}" />
                <TextBox Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" />
                <ToggleButton Grid.Column="1" Style="{StaticResource ComboBoxToggleButton}" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsKeyboardFocusWithin" Value="True">
                    <Setter Property="Control.Foreground" Value="#FF000000" />
                </Trigger>
                <Trigger Property="ComboBox.IsDropDownOpen" Value="True">
                    <Setter TargetName="Border" Property="Microsoft_Windows_Themes:ListBoxChrome.RenderFocused" Value="True" />
                </Trigger>
                <Trigger Property="ItemsControl.HasItems" Value="False">
                    <Setter TargetName="DropDownBorder" Property="FrameworkElement.Height" Value="95" />
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                    <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
                    <Setter Property="Control.Background" Value="#FFF4F4F4" />
                </Trigger>
                <Trigger Property="ItemsControl.IsGrouping" Value="True">
                    <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                </Trigger>
                <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
                    <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5" />
                    <Setter TargetName="Shdw" Property="Microsoft_Windows_Themes:SystemDropShadowChrome.Color" Value="#71000000" />
                </Trigger>
                <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
                    <Setter TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" Property="Canvas.Top" />
                    <Setter TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" Property="Canvas.Left" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

     
        
        <Style x:Key="DigiComboBoxStle" TargetType="{x:Type ComboBox}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ComboBoxFocusVisual}" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="Control.Padding" Value="4,3" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
            <Setter Property="ScrollViewer.PanningMode" Value="Both" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid Name="MainGrid" SnapsToDevicePixels="True" MaxHeight="Infinity">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="47.217" />
                            </Grid.ColumnDefinitions>
                            <Popup Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" Margin="1" Placement="Center" PopupAnimation="Slide" 
                                   Width="650" Height="450" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PlacementTarget="{Binding ElementName=MainPanel}">
                                <sc:SystemDropShadowChrome Name="Shdw" Color="Transparent" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                                                           MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
                                    <Border Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="0" Background="#FFEFEFEF" CornerRadius="10">
                                        <ScrollViewer Name="DropDownScrollViewer">
                                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                                <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                    <Rectangle Name="OpaqueRect" RadiusY="10" RadiusX="10" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}" />
                                                </Canvas>
                                                <ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                            </Grid>
                                        </ScrollViewer>
                                    </Border>
                                </sc:SystemDropShadowChrome>
                            </Popup>
                            <ToggleButton BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}" 
                                          Grid.ColumnSpan="2" Style="{DynamicResource DigiToggleButtonStyle}" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, 
                                RelativeSource={RelativeSource TemplatedParent}}" />
                            <ContentPresenter ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}" 
                                              ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}" Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                                              ContentStringFormat="{TemplateBinding ComboBox.SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" IsHitTestVisible="False" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="Center" Margin="10,0,5,0" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
                                <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5" />
                                <Setter TargetName="Shdw" Property="Microsoft_Windows_Themes:SystemDropShadowChrome.Color" Value="#71000000" />
                            </Trigger>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter TargetName="DropDownBorder" Property="FrameworkElement.Height" Value="95" />
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
                                <Setter Property="Control.Background" Value="#606060" />
                            </Trigger>
                            <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                            </Trigger>
                            <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
                                <Setter TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" Property="Canvas.Top" />
                                <Setter TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" Property="Canvas.Left" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.FontSize" Value="32" />
            <Setter Property="Control.FontFamily" Value="Verdana" />
            <Style.Triggers>
                <Trigger Property="ComboBox.IsEditable" Value="True">
                    <Setter Property="Control.BorderBrush" Value="{StaticResource TextBoxBorder}" />
                    <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
                    <Setter Property="Control.IsTabStop" Value="False" />
                    <Setter Property="Control.Padding" Value="3" />
                    <Setter Property="Control.Template" Value="{StaticResource ComboBoxEditableTemplate}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DigiToggleButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
            <Setter Property="Control.IsTabStop" Value="False" />
            <Setter Property="UIElement.Focusable" Value="False" />
            <Setter Property="ButtonBase.ClickMode" Value="Press" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Name="Chrome" SnapsToDevicePixels="True" Margin="0" MaxHeight="50">
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Top" Margin="0">
                                <Rectangle Margin="0" RadiusX="10" RadiusY="10" Visibility="Visible">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush StartPoint="0.5,1" EndPoint="0.5,0">
                                            <GradientStop Color="#FFA8A2A0" Offset="0.00561798" />
                                            <GradientStop Color="#FF000000" Offset="0.249975" />
                                            <GradientStop Color="#FFFFFFFF" Offset="0.250025" />
                                            <GradientStop Color="#FFD3D0CF" Offset="0.61442" />
                                            <GradientStop Color="#FFA8A2A0" Offset="1" />
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Margin="3" RadiusY="10" RadiusX="10" Visibility="Visible">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush StartPoint="0.500002,0.0747932" EndPoint="0.500002,0.943153">
                                            <GradientStop Color="#FFF1E4E4" Offset="1" />
                                            <GradientStop Color="#FFA7A0A2" Offset="0.208" />
                                            <GradientStop Color="#FFD0D0D0" Offset="0" />
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle HorizontalAlignment="Stretch" Margin="0" RadiusY="2" RadiusX="2" Width="Auto" Fill="#FFBABABA" Visibility="Visible" />
                                <Rectangle RadiusY="2" RadiusX="2" Stroke="#FFFFFFFF" StrokeThickness="0.666667" StrokeMiterLimit="2.75" Margin="1" Visibility="Visible">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush StartPoint="0.499999,-0.0298528" EndPoint="0.499999,1.07553">
                                            <GradientStop Color="#FFFFFFFF" Offset="0" />
                                            <GradientStop Color="#FFEEEEEE" Offset="0.181818" />
                                            <GradientStop Color="#FFDEDEDE" Offset="0.515152" />
                                            <GradientStop Color="#FFEEEEEE" Offset="0.854546" />
                                            <GradientStop Color="#FFFFFFFF" Offset="1" />
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Grid HorizontalAlignment="Right" Width="46.001" Margin="0,-1.625,1.665,-2.749">
                                    <Rectangle Margin="0,1.665,0,2.752" RadiusX="10" RadiusY="10" Visibility="Collapsed">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush StartPoint="0.5,1" EndPoint="0.5,0">
                                                <GradientStop Color="#FFA8A2A0" Offset="0.00561798" />
                                                <GradientStop Color="#FF000000" Offset="0.249975" />
                                                <GradientStop Color="#FFFFFFFF" Offset="0.250025" />
                                                <GradientStop Color="#FFD3D0CF" Offset="0.61442" />
                                                <GradientStop Color="#FFA8A2A0" Offset="1" />
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <Rectangle Margin="3,6" RadiusX="10" RadiusY="10" Visibility="Collapsed">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FFC20000" Offset="0.996" />
                                                <GradientStop Color="Red" />
                                                <GradientStop Color="#FF390000" Offset="0.342" />
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <Path Name="Arrow" Data="{StaticResource DownArrowGeometry}" HorizontalAlignment="Stretch" Margin="6.793,16.333,6.457,14.667" VerticalAlignment="Stretch" Height="Auto" Stretch="Fill" Width="Auto" Visibility="Collapsed">
                                        <Path.Fill>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="White" Offset="0" />
                                                <GradientStop Color="#FFCEC9C9" Offset="0.671" />
                                            </LinearGradientBrush>
                                        </Path.Fill>
                                    </Path>
                                    <Viewbox Margin="0.271,3.003,0,3.908" Stretch="Fill">
                                        <Grid Height="100.13" Width="96.474">
                                            <Path Stretch="Fill" Data="F1M636.82,459.395C610.223,459.395 588.583,438.411 588.583,412.619 588.583,386.827 610.223,365.844 636.82,365.844 663.419,365.844 685.057,386.827 685.057,412.619 685.057,438.411 663.419,459.395 636.82,459.395z" Height="Auto" Margin="0,6.579,0,0" VerticalAlignment="Stretch">
                                                <Path.Fill>
                                                    <LinearGradientBrush StartPoint="0.499999,-0.0454579" EndPoint="0.499999,1.09101">
                                                        <GradientStop Color="#FFC7C3C5" Offset="0" />
                                                        <GradientStop Color="#FF828080" Offset="0.509091" />
                                                        <GradientStop Color="#FF595959" Offset="1" />
                                                    </LinearGradientBrush>
                                                </Path.Fill>
                                            </Path>
                                            <Path Stretch="Fill" Data="F1M636.82,455.74C610.223,455.74 588.583,434.101 588.583,407.503 588.583,380.904 610.223,359.265 636.82,359.265 663.419,359.265 685.057,380.904 685.057,407.503 685.057,434.101 663.419,455.74 636.82,455.74z" Height="Auto" Margin="0,0,0,3.655" VerticalAlignment="Stretch">
                                                <Path.Fill>
                                                    <LinearGradientBrush StartPoint="0.499999,-0.0454575" EndPoint="0.499999,1.09101">
                                                        <GradientStop Color="#FFC7C3C5" Offset="0" />
                                                        <GradientStop Color="#FF828080" Offset="0.509091" />
                                                        <GradientStop Color="#FFA3A3A3" Offset="1" />
                                                    </LinearGradientBrush>
                                                </Path.Fill>
                                            </Path>
                                            <Path Stretch="Fill" Data="F1M680.672,407.503C680.672,431.722 661.037,451.354 636.82,451.354 612.604,451.354 592.968,431.722 592.968,407.503 592.968,383.283 612.604,363.651 636.82,363.651 661.037,363.651 680.672,383.283 680.672,407.503z" Height="Auto" Margin="4.385,4.386,4.385,8.041" VerticalAlignment="Stretch">
                                                <Path.Fill>
                                                    <LinearGradientBrush StartPoint="0.500001,1.06667" EndPoint="0.500001,-0.100114">
                                                        <GradientStop Color="#FFD73737" Offset="0" />
                                                        <GradientStop Color="#FFA60707" Offset="0.50303" />
                                                        <GradientStop Color="#FFD28383" Offset="0.854545" />
                                                        <GradientStop Color="#FFFFFFFF" Offset="1" />
                                                    </LinearGradientBrush>
                                                </Path.Fill>
                                            </Path>
                                            <Viewbox HorizontalAlignment="Stretch" Height="Auto" Margin="15.289,30.675,17.828,26.677" VerticalAlignment="Stretch" Width="Auto">
                                                <Canvas Width="63.3573" Height="42.7775">
                                                    <Path Width="61.5746" Height="42.7775" Canvas.Left="0.891724" Canvas.Top="0" Stretch="Fill" Data="F1M31.6073,42.7775C29.0383,42.7775,26.636,41.7175,24.8541,39.7943L3.56689,16.8862C0,13.0555 0,6.81976 3.56689,2.98706 5.35144,1.06183 7.75452,0 10.3157,0 12.8801,0 15.2785,1.06183 17.0728,2.98706L31.6809,18.7039 46.2832,2.98706C48.0779,1.06183 50.4758,0.00335693 53.0409,0.00335693 55.6021,0.00335693 58.0005,1.06183 59.7936,2.98706 63.3573,6.82227 63.3573,13.0555 59.7936,16.8882L38.4934,39.7996C36.7161,41.7202,34.3143,42.7775,31.7446,42.7775L31.6073,40.4623 31.6073,42.7775z">
                                                        <Path.Fill>
                                                            <LinearGradientBrush StartPoint="0.499998,-0.0454566" EndPoint="0.499997,1.09101">
                                                                <GradientStop Color="#FFE0DCDE" Offset="0" />
                                                                <GradientStop Color="#FF908E8F" Offset="0.660606" />
                                                                <GradientStop Color="#FF404040" Offset="1" />
                                                            </LinearGradientBrush>
                                                        </Path.Fill>
                                                    </Path>
                                                    <Path Width="56.8856" Height="38.1499" Canvas.Left="3.23544" Canvas.Top="2.31288" Stretch="Fill" Data="F1M58.0429,4.54425C55.2805,1.56909,50.7922,1.56909,48.0266,4.54425L31.6809,22.1407 15.33,4.54425C12.5637,1.56909 8.07153,1.56909 5.31305,4.54425 2.54291,7.52484 2.54291,12.3484 5.31305,15.327L26.6014,38.2377C27.9973,39.7448 29.8469,40.4837 31.6809,40.4623 33.5175,40.4819 35.3555,39.7448 36.7552,38.2403L58.0429,15.3289C60.8137,12.3516,60.8137,7.52484,58.0429,4.54425z">
                                                        <Path.Fill>
                                                            <LinearGradientBrush StartPoint="0.5,-0.0454529" EndPoint="0.5,1.09101">
                                                                <GradientStop Color="#FFFFFFFF" Offset="0" />
                                                                <GradientStop Color="#FFBBBBBB" Offset="0.660606" />
                                                                <GradientStop Color="#FF777777" Offset="1" />
                                                            </LinearGradientBrush>
                                                        </Path.Fill>
                                                    </Path>
                                                </Canvas>
                                            </Viewbox>
                                        </Grid>
                                    </Viewbox>
                                </Grid>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--10 nov 2017-->
        <!-- Transparent Images-->
        <Style x:Key="TransparentImage" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Height" Value="40" />
            <Setter Property="Width" Value="Auto" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Margin" Value="5,0,0,0" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border Name="MenuBorder" SnapsToDevicePixels="True" BorderBrush="Black" 
                                    Background="{TemplateBinding Background}" BorderThickness="0,0,0,0" >
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsFocused" Value="True">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter TargetName="MenuBorder" Property="BorderBrush" Value="#FFED6A2B" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--end-->
        <!-- Flat ComboBox -->
        <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="#FF930000" />
        <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="#606060" />
        <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#606060" />
        <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#606060" />
        <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#888" />

        <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="2" Name="Border"
              BorderBrush="{StaticResource ComboBoxNormalBorderBrush}" 
              CornerRadius="0" BorderThickness="2, 2, 1, 1" 
              Background="{StaticResource ComboBoxNormalBackgroundBrush}" />
                <Border Grid.Column="1" Margin="2, 2, 1, 1" BorderBrush="#444" Name="ButtonBorder"
              CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" 
              Background="{StaticResource ComboBoxNormalBackgroundBrush}" />

                <Path Name="Arrow" Grid.Column="1" 
            Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
            HorizontalAlignment="Center" Fill="#444"
            VerticalAlignment="Center" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>   
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="#FF8D979E"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                    <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
                    <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="#999"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="ComboBoxFlatWhiteStyle"  TargetType="{x:Type ComboBox}">
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="TextElement.Foreground" Value="White"/>
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" Grid.Column="2"
                ClickMode="Press" Focusable="False"
                IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                            <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                              HorizontalAlignment="Left" VerticalAlignment="Center"                              
                              Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                            <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
                     IsReadOnly="{TemplateBinding IsReadOnly}"
                     Visibility="Hidden" Background="Transparent"
                     HorizontalAlignment="Left" VerticalAlignment="Center"
                     Focusable="True" >
                                <TextBox.Template>
                                    <ControlTemplate TargetType="TextBox" >
                                        <Border Name="PART_ContentHost" Focusable="False" />
                                    </ControlTemplate>
                                </TextBox.Template>
                            </TextBox>
                            <!-- Popup showing items -->
                            <Popup Name="Popup" Placement="Bottom"
                   Focusable="False" AllowsTransparency="True"
                   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                   PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True"
                    MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                    MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                    <Border Name="DropDownBorder" Background="#606060" Margin="0, 1, 0, 0"
                        CornerRadius="0" BorderThickness="1,1,1,1" 
                        BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"/>
                                    <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                            </Trigger>
                            <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </Trigger>
                            <Trigger Property="ComboBox.IsEditable" Value="True">
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ComboBoxFlatStyle"  TargetType="{x:Type ComboBox}">
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="TextElement.Foreground" Value="White"/>
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" Grid.Column="2"
                ClickMode="Press" Focusable="False"
                IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                            <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                              HorizontalAlignment="Left" VerticalAlignment="Center"                              
                              Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                            <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
                     IsReadOnly="{TemplateBinding IsReadOnly}"
                     Visibility="Hidden" Background="Transparent"
                     HorizontalAlignment="Left" VerticalAlignment="Center"
                     Focusable="True" >
                                <TextBox.Template>
                                    <ControlTemplate TargetType="TextBox" >
                                        <Border Name="PART_ContentHost" Focusable="False" />
                                    </ControlTemplate>
                                </TextBox.Template>
                            </TextBox>
                            <!-- Popup showing items -->
                            <Popup Name="Popup" Placement="Bottom"
                   Focusable="False" AllowsTransparency="True"
                   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                   PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True"
                    MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                    MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                    <Border Name="DropDownBorder" Background="#606060" Margin="0, 1, 0, 0"
                        CornerRadius="0" BorderThickness="1,1,1,1" 
                        BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"/>
                                    <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                            </Trigger>
                            <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </Trigger>
                            <Trigger Property="ComboBox.IsEditable" Value="True">
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- End of Flat ComboBox -->
        <!--10Nov2017-->
        
        <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Rectangle Name="Border" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" SnapsToDevicePixels="True" />
                            <Polygon Name="Arrow" Fill="#FF000000" HorizontalAlignment="Right" Margin="8,8,3,3" Opacity="0.15" Points="0,10 10,10 10,0" Stretch="Uniform" VerticalAlignment="Bottom" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                <Setter TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Property="Shape.Stroke" />
                            </Trigger>
                            <Trigger Property="ButtonBase.IsPressed" Value="True">
                                <Setter TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Property="Shape.Fill" />
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter TargetName="Arrow" Property="UIElement.Visibility" Value="Collapsed" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DigiDataGridStyle" TargetType="{x:Type DataGrid}">
            <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.BorderBrush" Value="#FF688CAF" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="DataGrid.RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
            <Setter Property="ScrollViewer.PanningMode" Value="Both" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="Control.FontWeight" Value="Normal" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGrid}">
                        <Border Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="True" CornerRadius="10" BorderThickness="1" Background="#FFEFEFEF" BorderBrush="#FF6E0101">
                            <ScrollViewer Name="DG_ScrollViewer" Focusable="False">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="False" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                            <DataGridColumnHeadersPresenter Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                            <ScrollContentPresenter Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1" />
                                            <ScrollBar Name="PART_VerticalScrollBar" Grid.Column="0" Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}" ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}" Style="{DynamicResource DigiScrollBarStyle}" Margin="0,-45,0,0" Grid.ColumnSpan="3" HorizontalAlignment="Center" Width="200" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                            <Grid Grid.Column="1" Grid.Row="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <ScrollBar Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}" Style="{DynamicResource DigiScrollBarStyle}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.FontWeight" Value="Normal" />
            <Setter Property="Control.FontStyle" Value="Normal" />
            <Style.Triggers>
                <Trigger Property="ItemsControl.IsGrouping" Value="True">
                    <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DigiDataGridStyleTextField" TargetType="{x:Type DataGrid}">
            <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.BorderBrush" Value="#FF688CAF" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="DataGrid.RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
            <Setter Property="ScrollViewer.PanningMode" Value="Both" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="Control.FontWeight" Value="Normal" />
            <Setter Property="Control.FontWeight" Value="Normal" />
            <Setter Property="Control.FontStyle" Value="Normal" />
        </Style>
        <Style x:Key="DigiDataGridRowStyle" TargetType="{x:Type DataGridRow}">
            <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
            <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
            <Setter Property="DataGridRow.ValidationErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <TextBlock TextBlock.Foreground="#FFFF0000" Margin="2,0,0,0" Text="!" VerticalAlignment="Center" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridRow}">
                        <Border Name="DGR_Border" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="Normal_AlternatingRow" />
                                    <VisualState x:Name="Unfocused_Editing" />
                                    <VisualState x:Name="Normal_Editing" />
                                    <VisualState x:Name="Unfocused_Selected" />
                                    <VisualState x:Name="Normal_Selected" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="MouseOver_Unfocused_Editing" />
                                    <VisualState x:Name="MouseOver_Editing" />
                                    <VisualState x:Name="MouseOver_Unfocused_Selected" />
                                    <VisualState x:Name="MouseOver_Selected" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <SelectiveScrollingGrid>
                                <SelectiveScrollingGrid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </SelectiveScrollingGrid.ColumnDefinitions>
                                <SelectiveScrollingGrid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </SelectiveScrollingGrid.RowDefinitions>
                                <DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding DataGridRow.ItemsPanel}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Style="{DynamicResource DigiDataGridCellsPresenterStyle}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                <DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" Visibility="{TemplateBinding DataGridRow.DetailsVisibility}" SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                <DataGridRowHeader Grid.RowSpan="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                            </SelectiveScrollingGrid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.FontWeight" Value="Normal" />
        </Style>
        <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
            <Setter Property="FrameworkElement.Width" Value="8" />
            <Setter Property="Control.Background" Value="#696969" />
            <Setter Property="FrameworkElement.Cursor" Value="SizeWE" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Padding="{TemplateBinding Control.Padding}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DigiDataGridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Background" Value="#696969" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <Grid>
                            <sc:DataGridHeaderBorder IsClickable="{TemplateBinding DataGridColumnHeader.CanUserSort}" IsPressed="{TemplateBinding ButtonBase.IsPressed}" IsHovered="{TemplateBinding UIElement.IsMouseOver}" Padding="{TemplateBinding Control.Padding}" SortDirection="{TemplateBinding DataGridColumnHeader.SortDirection}" SeparatorBrush="{TemplateBinding DataGridColumnHeader.SeparatorBrush}" SeparatorVisibility="{TemplateBinding DataGridColumnHeader.SeparatorVisibility}" CornerRadius="10" BorderThickness="3" Margin="0" Background="{x:Null}" BorderBrush="{x:Null}">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                            </sc:DataGridHeaderBorder>
                            <Thumb Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}" Background="#00FFFFFF" />
                            <Thumb Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}" Background="#00FFFFFF" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.Background" Value="#696969" />
            <Setter Property="Control.FontSize" Value="18" />
            <Setter Property="Control.Foreground" Value="#FFFFFF" />
        </Style>
        <SolidColorBrush x:Key="{x:Static DataGrid.FocusBorderBrushKey}" Color="#FF000000" />
        <Style x:Key="DigiDataGridCellStyle" TargetType="{x:Type DataGridCell}">
            <Setter Property="Control.Background" Value="#00FFFFFF" />
            <Setter Property="Control.BorderBrush" Value="#00FFFFFF" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected" />
                                    <VisualState x:Name="Selected" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Unfocused" />
                                    <VisualState x:Name="Focused" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CurrentStates">
                                    <VisualState x:Name="Regular" />
                                    <VisualState x:Name="Current" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="InteractionStates">
                                    <VisualState x:Name="Display" />
                                    <VisualState x:Name="Editing" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="DataGridCell.IsSelected" Value="True">
                    <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                    <Setter Property="Control.BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                </Trigger>
                <Trigger Property="UIElement.IsKeyboardFocusWithin" Value="True">
                    <Setter Property="Control.BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DigiDataGridColumnHeadersPresenterStyle" TargetType="{x:Type DataGridColumnHeadersPresenter}">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeadersPresenter}">
                        <Grid>
                            <DataGridColumnHeader Name="PART_FillerColumnHeader" IsHitTestVisible="False" Style="{DynamicResource DigiDataGridColumnHeaderStyle}" />
                            <ItemsPresenter />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DigiDataGridCellsPresenterStyle" TargetType="{x:Type DataGridCellsPresenter}">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCellsPresenter}">
                        <ItemsPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.FontWeight" Value="Normal" />
        </Style>
        <Style x:Key="DigiGridEditButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="True">
                            <Grid Margin="0">
                                <Viewbox Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Visible">
                                    <Canvas Width="162.527" Height="153.436">
                                        <Path Width="162.527" Height="56.2363" Canvas.Left="0" Canvas.Top="97.1992" Stretch="Fill" Data="F1M162.527,125.318C162.527,140.847 126.143,153.436 81.2629,153.436 36.3841,153.436 0,140.847 0,125.318 0,109.788 36.3841,97.1992 81.2629,97.1992 126.143,97.1992 162.527,109.788 162.527,125.318z">
                                            <Path.Fill>
                                                <RadialGradientBrush RadiusX="0.499998" RadiusY="0.500001" Center="0.5,0.507754" GradientOrigin="0.5,0.507754">
                                                    <RadialGradientBrush.RelativeTransform>
                                                        <TransformGroup />
                                                    </RadialGradientBrush.RelativeTransform>
                                                    <GradientStop Color="#FF9AD54D" Offset="0" />
                                                    <GradientStop Color="#84CCEAA6" Offset="0.412088" />
                                                    <GradientStop Offset="1" />
                                                </RadialGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Path Width="120.189" Height="120.188" Canvas.Left="18.2695" Canvas.Top="2.76697" Stretch="Fill" Data="F1M138.458,99.47C138.458,112.44,127.944,122.955,114.973,122.955L41.7545,122.955C28.7852,122.955,18.2695,112.44,18.2695,99.47L18.2695,26.2519C18.2695,13.2819,28.7852,2.76697,41.7545,2.76697L114.973,2.76697C127.944,2.76697,138.458,13.2819,138.458,26.2519L138.458,99.47z">
                                            <Path.Fill>
                                                <RadialGradientBrush RadiusX="0.687384" RadiusY="0.687388" Center="0.496231,1.12041" GradientOrigin="0.496231,1.12041">
                                                    <RadialGradientBrush.RelativeTransform>
                                                        <TransformGroup />
                                                    </RadialGradientBrush.RelativeTransform>
                                                    <GradientStop Color="#FFFFFFFF" Offset="0" />
                                                    <GradientStop Color="#FFD4F0C8" Offset="0.164835" />
                                                    <GradientStop Color="#FFABE593" Offset="0.266091" />
                                                    <GradientStop Color="#FF83DB5F" Offset="0.401099" />
                                                    <GradientStop Color="#FF4AB140" Offset="0.562937" />
                                                    <GradientStop Color="#FF128821" Offset="0.697802" />
                                                    <GradientStop Color="#FF010D02" Offset="1" />
                                                </RadialGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Path Width="124.33" Height="124.334" Canvas.Left="16.1979" Canvas.Top="0.692749" Stretch="Fill" Data="F1M41.7545,125.027C27.64,125.023,16.1979,113.583,16.1979,99.47L16.1979,26.2526C16.1979,12.1367,27.64,0.695435,41.7545,0.692749L114.973,0.692749C129.085,0.695435,140.527,12.1367,140.528,26.2526L140.528,99.47C140.527,113.583,129.085,125.023,114.973,125.027L41.7545,125.027z M20.3411,26.2526L20.3411,99.47C20.36,111.296,29.9284,120.861,41.7545,120.884L114.973,120.884C126.798,120.861,136.366,111.296,136.387,99.47L136.387,26.2526C136.366,14.4271,126.798,4.85876,114.973,4.83588L41.7545,4.83588C29.9284,4.85876,20.36,14.4271,20.3411,26.2526z">
                                            <Path.Fill>
                                                <LinearGradientBrush StartPoint="-2.22045e-016,0.500001" EndPoint="1,0.500001">
                                                    <GradientStop Color="#FFCCCCCC" Offset="5e-005" />
                                                    <GradientStop Color="#FFE5E5E5" Offset="0.0569518" />
                                                    <GradientStop Color="#FFFFFFFF" Offset="0.106741" />
                                                    <GradientStop Color="#FFC2C2C2" Offset="0.189971" />
                                                    <GradientStop Color="#FF858585" Offset="0.247191" />
                                                    <GradientStop Color="#FFA8A8A8" Offset="0.301124" />
                                                    <GradientStop Color="#FFCCCCCC" Offset="0.314607" />
                                                    <GradientStop Color="#FF7F7F7F" Offset="0.511028" />
                                                    <GradientStop Color="#FF323232" Offset="0.646067" />
                                                    <GradientStop Color="#FF4B4B4B" Offset="0.702663" />
                                                    <GradientStop Color="#FF656565" Offset="0.741573" />
                                                    <GradientStop Color="#FF323232" Offset="0.752422" />
                                                    <GradientStop Color="#FF000000" Offset="0.780899" />
                                                    <GradientStop Color="#FF7F7F7F" Offset="0.808795" />
                                                    <GradientStop Color="#FFFFFFFF" Offset="0.882022" />
                                                    <GradientStop Color="#FFD1D1D1" Offset="0.914568" />
                                                    <GradientStop Color="#FFA3A3A3" Offset="1" />
                                                </LinearGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Path Width="125.713" Height="125.716" Canvas.Left="15.5065" Canvas.Top="0" Stretch="Fill" Data="F1M41.7545,125.716L41.7545,125.029 41.7545,124.336 114.971,124.336C128.702,124.333,139.836,113.201,139.84,99.47L139.84,26.2533C139.836,12.5163,128.702,1.38538,114.971,1.38281L41.7545,1.38281C28.0188,1.38538,16.8887,12.5163,16.8887,26.2533L16.8887,99.47C16.8887,113.201,28.0188,124.333,41.7545,124.336L41.7545,125.029 41.7513,125.716C27.2552,125.714,15.5065,113.963,15.5065,99.47L15.5065,26.2533C15.5065,11.7526,27.2552,0.00585938,41.7545,0L114.971,0.00256348C129.465,0.00585938,141.216,11.7526,141.22,26.2533L141.22,99.47C141.216,113.963,129.465,125.714,114.971,125.716L41.7545,125.716z">
                                            <Path.Fill>
                                                <LinearGradientBrush StartPoint="0.086563,0.0865976" EndPoint="0.937588,0.937604">
                                                    <GradientStop Color="#FF000000" Offset="0" />
                                                    <GradientStop Color="#FF212121" Offset="0.043956" />
                                                    <GradientStop Color="#FF434343" Offset="0.0824176" />
                                                    <GradientStop Color="#FF898989" Offset="0.129304" />
                                                    <GradientStop Color="#FFCFCFCF" Offset="0.17033" />
                                                    <GradientStop Color="#FFA0A0A0" Offset="0.263736" />
                                                    <GradientStop Color="#FF727272" Offset="0.516483" />
                                                    <GradientStop Color="#FFA0A0A0" Offset="0.770248" />
                                                    <GradientStop Color="#FFCFCFCF" Offset="0.835165" />
                                                    <GradientStop Color="#FF898989" Offset="0.882051" />
                                                    <GradientStop Color="#FF434343" Offset="0.923077" />
                                                    <GradientStop Color="#FF212121" Offset="0.964103" />
                                                    <GradientStop Color="#FF000000" Offset="1" />
                                                </LinearGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Path Width="117.423" Height="117.43" Canvas.Left="19.6511" Canvas.Top="4.14325" Stretch="Fill" Data="F1M114.971,4.14325L41.7545,4.14325C29.5468,4.16919,19.6705,14.0443,19.6511,26.2507L20.3411,26.2533 19.6511,26.2533 19.6511,99.47C19.6705,111.676,29.5468,121.549,41.7513,121.574L114.971,121.574C127.178,121.549,137.055,111.676,137.074,99.47L137.074,26.2533C137.055,14.0443,127.178,4.16919,114.971,4.14325z M135.695,99.47C135.676,110.913,126.415,120.169,114.971,120.193L41.7545,120.193C30.3073,120.169,21.0481,110.913,21.0273,99.47L21.0273,26.2533C21.0481,14.8068,30.3073,5.54681,41.7545,5.52466L114.971,5.52734C126.415,5.54681,135.676,14.8068,135.695,26.2533L135.695,99.47z">
                                            <Path.Fill>
                                                <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                                    <GradientStop Color="#FF000000" Offset="0" />
                                                    <GradientStop Color="#FF212121" Offset="0.043956" />
                                                    <GradientStop Color="#FF434343" Offset="0.0824176" />
                                                    <GradientStop Color="#FF898989" Offset="0.129304" />
                                                    <GradientStop Color="#FFCFCFCF" Offset="0.17033" />
                                                    <GradientStop Color="#FFE7E7E7" Offset="0.263736" />
                                                    <GradientStop Color="#FFFFFFFF" Offset="0.516483" />
                                                    <GradientStop Color="#FFE7E7E7" Offset="0.770248" />
                                                    <GradientStop Color="#FFCFCFCF" Offset="0.835165" />
                                                    <GradientStop Color="#FF898989" Offset="0.882051" />
                                                    <GradientStop Color="#FF434343" Offset="0.923077" />
                                                    <GradientStop Color="#FF212121" Offset="0.964103" />
                                                    <GradientStop Color="#FF000000" Offset="1" />
                                                </LinearGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Path Width="105.729" Height="43.7494" Canvas.Left="24.9596" Canvas.Top="8.88013" Stretch="Fill" Data="F1M130.688,36.3594C130.688,45.3458,123.404,52.6295,114.416,52.6295L41.2297,52.6295C32.2441,52.6295,24.9596,45.3458,24.9596,36.3594L24.9596,25.1504C24.9596,16.1654,32.2441,8.88013,41.2297,8.88013L114.416,8.88013C123.404,8.88013,130.688,16.1654,130.688,25.1504L130.688,36.3594z">
                                            <Path.Fill>
                                                <LinearGradientBrush StartPoint="0.499997,-0.476374" EndPoint="0.499997,1.26974">
                                                    <GradientStop Color="#FF95E487" Offset="0" />
                                                    <GradientStop Color="#FF9ADB5F" Offset="0.269767" />
                                                    <GradientStop Color="#FF4E7D10" Offset="0.554945" />
                                                    <GradientStop Color="#FF28510C" Offset="0.646782" />
                                                    <GradientStop Color="#FF032509" Offset="0.769231" />
                                                    <GradientStop Color="#FF011204" Offset="0.863832" />
                                                    <GradientStop Color="#FF000000" Offset="0.950549" />
                                                </LinearGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Viewbox Width="64.2948" Height="90.6619" Canvas.Left="46.2639" Canvas.Top="18.2478">
                                            <Canvas Width="64.2948" Height="90.6619">
                                                <Path Width="45.4096" Height="63.5824" Canvas.Left="11.545" Canvas.Top="2.81165" Stretch="Fill" Fill="#FFFFFFFF" Data="M28.2267,66.394L56.9546,22.4979 40.2726,11.5791 46.0108,2.81165 11.545,55.4752 17.3447,55.7138 19.886,60.9345 25.6867,61.1734 28.2267,66.394z" />
                                                <Path Width="22.9462" Height="21.0316" Canvas.Left="41.088" Canvas.Top="0.343795" Stretch="Fill" Fill="#FFFFFFFF" Data="M41.088,10.4578L57.771,21.3754 63.5092,12.6081C64.2949,11.4078,64.186,9.93457,63.2682,9.33435L49.9226,0.600037C49.0046,0,47.6117,0.490173,46.8272,1.69049L41.088,10.4578z" />
                                                <Path Width="9.31416" Height="11.7139" Canvas.Left="42.411" Canvas.Top="1.79326" Stretch="Fill" Fill="#FFCDD1CA" Data="M45.7464,13.5072L51.3438,4.95477C51.9146,4.08301,51.8355,3.01135,51.1679,2.57404L50.2594,1.97998C49.5918,1.54297,48.5783,1.8996,48.0075,2.77283L42.411,11.3237 45.7464,13.5072z" />
                                                <Path Width="26.5928" Height="33.3483" Canvas.Left="-3.05176e-005" Canvas.Top="57.3136" Stretch="Fill" Fill="#FFFFFFFF" Data="M9.91104,57.3136L15.7108,57.5522 18.252,62.7729 24.0527,63.0114 26.5928,68.2324 6.41281,83.7917 -3.05176E-05,90.6619 3.73581,82.0066 9.91104,57.3136z" />
                                                <Path Width="6.62674" Height="8.89026" Canvas.Left="-3.05176e-005" Canvas.Top="81.7716" Stretch="Fill" Fill="#FFCDD1CA" Data="M6.62671,83.6265L3.79486,81.7716 3.73581,82.0066 -3.05176E-05,90.6619 6.41281,83.7917 6.62671,83.6265z" />
                                                <Path Width="29.4802" Height="42.5269" Canvas.Left="15.4508" Canvas.Top="12.4451" Stretch="Fill" Fill="#FFCDD1CA" Data="M16.0084,54.1909L16.9169,54.7852C17.5833,55.2224,18.5971,54.8654,19.1676,53.9937L44.931,14.6285 41.5946,12.4451 15.8325,51.8106C15.2617,52.6823,15.3398,53.7552,16.0084,54.1909z" />
                                                <Path Width="6.87899" Height="17.8798" Canvas.Left="6.43087" Canvas.Top="60.1907" Stretch="Fill" Fill="#FFCDD1CA" Data="M7.61679,78.0227L7.61679,78.0227C8.45541,78.2345,9.31558,77.7227,9.52829,76.8838L13.2617,62.1491C13.4744,61.3102,12.9626,60.4504,12.124,60.2389L12.124,60.2389C11.2851,60.0262,10.4262,60.5377,10.2135,61.3754L6.47888,76.1113C6.26645,76.9501,6.77914,77.8103,7.61679,78.0227z" />
                                            </Canvas>
                                        </Viewbox>
                                    </Canvas>
                                </Viewbox>
                                <Viewbox HorizontalAlignment="Center" Height="Auto" Margin="10,0" Stretch="Fill" VerticalAlignment="Stretch" Width="43.812">
                                    <Grid Height="287.191" Width="287.18">
                                        <Path Stretch="Fill" Data="F1M733.467,568.95C733.467,586.105,719.569,600,702.424,600L477.337,600C460.188,600,446.286,586.105,446.286,568.95L446.286,343.851C446.286,326.714,460.188,312.809,477.337,312.809L702.424,312.809C719.569,312.809,733.467,326.714,733.467,343.851L733.467,568.95z" HorizontalAlignment="Stretch" Height="Auto" Margin="0" VerticalAlignment="Stretch" Width="Auto">
                                            <Path.Fill>
                                                <LinearGradientBrush StartPoint="0.499999,1" EndPoint="0.499999,-1.06262e-007">
                                                    <GradientStop Color="#FFE2E2E2" Offset="0" />
                                                    <GradientStop Color="#FFDDDDDD" Offset="0.494506" />
                                                    <GradientStop Color="#FFF3F3F3" Offset="1" />
                                                </LinearGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Path Stretch="Fill" Data="F1M702.416,325.2L477.337,325.2C467.046,325.2,458.673,333.572,458.673,343.851L458.673,454.785C499.352,461.573 543.593,465.306 589.879,465.306 636.16,465.306 680.405,461.573 721.08,454.785L721.08,343.851C721.08,333.572,712.711,325.2,702.416,325.2z" HorizontalAlignment="Stretch" Height="Auto" Margin="12.387,12.391,12.386,134.694" VerticalAlignment="Stretch" Width="Auto">
                                            <Path.Fill>
                                                <LinearGradientBrush StartPoint="0.499999,0" EndPoint="0.499999,1">
                                                    <GradientStop Color="#FFFFFFFF" Offset="0" />
                                                    <GradientStop Color="#FFD5D5D5" Offset="1" />
                                                </LinearGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Path Stretch="Fill" Data="F1M589.879,465.306C543.593,465.306,499.352,461.573,458.673,454.785L458.673,568.95C458.673,579.239,467.046,587.61,477.337,587.61L702.416,587.61C712.711,587.61,721.08,579.239,721.08,568.95L721.08,454.785C680.405,461.573,636.16,465.306,589.879,465.306z" HorizontalAlignment="Stretch" Height="Auto" Margin="12.387,141.976,12.386,12.39" VerticalAlignment="Stretch" Width="Auto">
                                            <Path.Fill>
                                                <LinearGradientBrush StartPoint="0.499999,1" EndPoint="0.499999,-4.59517e-007">
                                                    <GradientStop Color="#FFFFFFFF" Offset="0" />
                                                    <GradientStop Color="#FFCBCBCB" Offset="1" />
                                                </LinearGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Viewbox Height="Auto" Margin="77.399,39.658,73.383,55.199" VerticalAlignment="Stretch">
                                            <Canvas Width="64.2948" Height="90.6619">
                                                <Path Width="45.4096" Height="63.5824" Canvas.Left="11.545" Canvas.Top="2.81165" Stretch="Fill" Fill="#FFC20000" Data="M28.2267,66.394L56.9546,22.4979 40.2726,11.5791 46.0108,2.81165 11.545,55.4752 17.3447,55.7138 19.886,60.9345 25.6867,61.1734 28.2267,66.394z" />
                                                <Path Width="22.9462" Height="21.0316" Canvas.Left="41.088" Canvas.Top="0.343795" Stretch="Fill" Fill="#FFB40000" Data="M41.088,10.4578L57.771,21.3754 63.5092,12.6081C64.2949,11.4078,64.186,9.93457,63.2682,9.33435L49.9226,0.600037C49.0046,0,47.6117,0.490173,46.8272,1.69049L41.088,10.4578z" />
                                                <Path Width="9.31416" Height="11.7139" Canvas.Left="42.411" Canvas.Top="1.79326" Stretch="Fill" Fill="#FFCDD1CA" Data="M45.7464,13.5072L51.3438,4.95477C51.9146,4.08301,51.8355,3.01135,51.1679,2.57404L50.2594,1.97998C49.5918,1.54297,48.5783,1.8996,48.0075,2.77283L42.411,11.3237 45.7464,13.5072z" />
                                                <Path Width="26.5928" Height="33.3483" Canvas.Left="-3.05176e-005" Canvas.Top="57.3136" Stretch="Fill" Fill="#FF4E1111" Data="M9.91104,57.3136L15.7108,57.5522 18.252,62.7729 24.0527,63.0114 26.5928,68.2324 6.41281,83.7917 -3.05176E-05,90.6619 3.73581,82.0066 9.91104,57.3136z" />
                                                <Path Width="6.62674" Height="8.89026" Canvas.Left="-3.05176e-005" Canvas.Top="81.7716" Stretch="Fill" Fill="#FFCDD1CA" Data="M6.62671,83.6265L3.79486,81.7716 3.73581,82.0066 -3.05176E-05,90.6619 6.41281,83.7917 6.62671,83.6265z" />
                                                <Path Width="29.4802" Height="42.5269" Canvas.Left="15.4508" Canvas.Top="12.4451" Stretch="Fill" Fill="#FFCDD1CA" Data="M16.0084,54.1909L16.9169,54.7852C17.5833,55.2224,18.5971,54.8654,19.1676,53.9937L44.931,14.6285 41.5946,12.4451 15.8325,51.8106C15.2617,52.6823,15.3398,53.7552,16.0084,54.1909z" />
                                                <Path Width="6.87899" Height="17.8798" Canvas.Left="6.43087" Canvas.Top="60.1907" Stretch="Fill" Fill="#FFCDD1CA" Data="M7.61679,78.0227L7.61679,78.0227C8.45541,78.2345,9.31558,77.7227,9.52829,76.8838L13.2617,62.1491C13.4744,61.3102,12.9626,60.4504,12.124,60.2389L12.124,60.2389C11.2851,60.0262,10.4262,60.5377,10.2135,61.3754L6.47888,76.1113C6.26645,76.9501,6.77914,77.8103,7.61679,78.0227z" />
                                            </Canvas>
                                        </Viewbox>
                                    </Grid>
                                </Viewbox>
                                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PhotoSWGridEditButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="True">
                            <Grid Margin="0">
                                <Viewbox HorizontalAlignment="Center" Height="Auto" Margin="0" VerticalAlignment="Center" Width="Auto" Visibility="Collapsed">
                                    <Canvas Width="162.527" Height="153.436">
                                        <Path Width="162.527" Height="56.2363" Canvas.Left="0" Canvas.Top="97.1992" Stretch="Fill" Data="F1M162.527,125.318C162.527,140.847 126.143,153.436 81.2629,153.436 36.3841,153.436 0,140.847 0,125.318 0,109.788 36.3841,97.1992 81.2629,97.1992 126.143,97.1992 162.527,109.788 162.527,125.318z">
                                            <Path.Fill>
                                                <RadialGradientBrush RadiusX="0.499998" RadiusY="0.5" Center="0.5,0.507754" GradientOrigin="0.5,0.507754">
                                                    <RadialGradientBrush.RelativeTransform>
                                                        <TransformGroup />
                                                    </RadialGradientBrush.RelativeTransform>
                                                    <GradientStop Color="#FFD54D4D" Offset="0" />
                                                    <GradientStop Color="#A8EAA6A6" Offset="0.412088" />
                                                    <GradientStop Offset="0.895604" />
                                                </RadialGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Path Width="120.189" Height="120.188" Canvas.Left="18.2695" Canvas.Top="2.76691" Stretch="Fill" Data="F1M138.458,99.47C138.458,112.439,127.944,122.955,114.973,122.955L41.7545,122.955C28.7852,122.955,18.2695,112.439,18.2695,99.47L18.2695,26.2519C18.2695,13.2819,28.7852,2.76691,41.7545,2.76691L114.973,2.76691C127.944,2.76691,138.458,13.2819,138.458,26.2519L138.458,99.47z">
                                            <Path.Fill>
                                                <RadialGradientBrush RadiusX="0.687384" RadiusY="0.687388" Center="0.49623,1.12041" GradientOrigin="0.49623,1.12041">
                                                    <RadialGradientBrush.RelativeTransform>
                                                        <TransformGroup />
                                                    </RadialGradientBrush.RelativeTransform>
                                                    <GradientStop Color="#FFFFFFFF" Offset="0" />
                                                    <GradientStop Color="#FFF0C8C8" Offset="0.164835" />
                                                    <GradientStop Color="#FFE59393" Offset="0.263627" />
                                                    <GradientStop Color="#FFDB5F5F" Offset="0.395349" />
                                                    <GradientStop Color="#FFA03434" Offset="0.547569" />
                                                    <GradientStop Color="#FF660A0A" Offset="0.674419" />
                                                    <GradientStop Color="#FF0D0101" Offset="1" />
                                                </RadialGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Path Width="124.33" Height="124.334" Canvas.Left="16.1979" Canvas.Top="0.692688" Stretch="Fill" Data="F1M41.7545,125.027C27.64,125.023,16.1979,113.583,16.1979,99.47L16.1979,26.2525C16.1979,12.1367,27.64,0.695374,41.7545,0.692688L114.973,0.692688C129.085,0.695374,140.527,12.1367,140.528,26.2525L140.528,99.47C140.527,113.583,129.085,125.023,114.973,125.027L41.7545,125.027z M20.3411,26.2525L20.3411,99.47C20.36,111.296,29.9284,120.861,41.7545,120.884L114.973,120.884C126.798,120.861,136.366,111.296,136.387,99.47L136.387,26.2525C136.366,14.4271,126.798,4.8587,114.973,4.83585L41.7545,4.83585C29.9284,4.8587,20.36,14.4271,20.3411,26.2525z">
                                            <Path.Fill>
                                                <LinearGradientBrush StartPoint="0,0.500001" EndPoint="1,0.500001">
                                                    <GradientStop Color="#FFCCCCCC" Offset="5e-005" />
                                                    <GradientStop Color="#FFE5E5E5" Offset="0.0569518" />
                                                    <GradientStop Color="#FFFFFFFF" Offset="0.106741" />
                                                    <GradientStop Color="#FFC2C2C2" Offset="0.189971" />
                                                    <GradientStop Color="#FF858585" Offset="0.247191" />
                                                    <GradientStop Color="#FFA8A8A8" Offset="0.301124" />
                                                    <GradientStop Color="#FFCCCCCC" Offset="0.314607" />
                                                    <GradientStop Color="#FF7F7F7F" Offset="0.511028" />
                                                    <GradientStop Color="#FF323232" Offset="0.646067" />
                                                    <GradientStop Color="#FF4B4B4B" Offset="0.702663" />
                                                    <GradientStop Color="#FF656565" Offset="0.741573" />
                                                    <GradientStop Color="#FF323232" Offset="0.752422" />
                                                    <GradientStop Color="#FF000000" Offset="0.780899" />
                                                    <GradientStop Color="#FF7F7F7F" Offset="0.808795" />
                                                    <GradientStop Color="#FFFFFFFF" Offset="0.882022" />
                                                    <GradientStop Color="#FFD1D1D1" Offset="0.914568" />
                                                    <GradientStop Color="#FFA3A3A3" Offset="1" />
                                                </LinearGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Path Width="125.713" Height="125.716" Canvas.Left="15.5065" Canvas.Top="0" Stretch="Fill" Data="F1M41.7545,125.716L41.7545,125.029 41.7545,124.336 114.971,124.336C128.702,124.333,139.836,113.201,139.84,99.47L139.84,26.2532C139.836,12.5163,128.702,1.38531,114.971,1.38281L41.7545,1.38281C28.0188,1.38531,16.8887,12.5163,16.8887,26.2532L16.8887,99.47C16.8887,113.201,28.0188,124.333,41.7545,124.336L41.7545,125.029 41.7513,125.716C27.2552,125.713,15.5065,113.963,15.5065,99.47L15.5065,26.2532C15.5065,11.7525,27.2552,0.00585938,41.7545,0L114.971,0.00250244C129.465,0.00585938,141.216,11.7525,141.22,26.2532L141.22,99.47C141.216,113.963,129.465,125.713,114.971,125.716L41.7545,125.716z">
                                            <Path.Fill>
                                                <LinearGradientBrush StartPoint="0.086563,0.0865976" EndPoint="0.937587,0.937604">
                                                    <GradientStop Color="#FF000000" Offset="0" />
                                                    <GradientStop Color="#FF212121" Offset="0.043956" />
                                                    <GradientStop Color="#FF434343" Offset="0.0824176" />
                                                    <GradientStop Color="#FF898989" Offset="0.129304" />
                                                    <GradientStop Color="#FFCFCFCF" Offset="0.17033" />
                                                    <GradientStop Color="#FFA0A0A0" Offset="0.263736" />
                                                    <GradientStop Color="#FF727272" Offset="0.516483" />
                                                    <GradientStop Color="#FFA0A0A0" Offset="0.770248" />
                                                    <GradientStop Color="#FFCFCFCF" Offset="0.835165" />
                                                    <GradientStop Color="#FF898989" Offset="0.882051" />
                                                    <GradientStop Color="#FF434343" Offset="0.923077" />
                                                    <GradientStop Color="#FF212121" Offset="0.964103" />
                                                    <GradientStop Color="#FF000000" Offset="1" />
                                                </LinearGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Path Width="117.423" Height="117.43" Canvas.Left="19.6511" Canvas.Top="4.14322" Stretch="Fill" Data="F1M114.971,4.14322L41.7545,4.14322C29.5468,4.16919,19.6705,14.0443,19.6511,26.2507L20.3411,26.2532 19.6511,26.2532 19.6511,99.47C19.6705,111.676,29.5468,121.549,41.7513,121.574L114.971,121.574C127.178,121.549,137.055,111.676,137.074,99.47L137.074,26.2532C137.055,14.0443,127.178,4.16919,114.971,4.14322z M135.695,99.47C135.676,110.913,126.415,120.169,114.971,120.193L41.7545,120.193C30.3073,120.169,21.0481,110.913,21.0273,99.47L21.0273,26.2532C21.0481,14.8067,30.3073,5.54678,41.7545,5.52466L114.971,5.52734C126.415,5.54678,135.676,14.8067,135.695,26.2532L135.695,99.47z">
                                            <Path.Fill>
                                                <LinearGradientBrush StartPoint="0,0.500001" EndPoint="1,0.500001">
                                                    <GradientStop Color="#FF000000" Offset="0" />
                                                    <GradientStop Color="#FF212121" Offset="0.043956" />
                                                    <GradientStop Color="#FF434343" Offset="0.0824176" />
                                                    <GradientStop Color="#FF898989" Offset="0.129304" />
                                                    <GradientStop Color="#FFCFCFCF" Offset="0.17033" />
                                                    <GradientStop Color="#FFE7E7E7" Offset="0.263736" />
                                                    <GradientStop Color="#FFFFFFFF" Offset="0.516483" />
                                                    <GradientStop Color="#FFE7E7E7" Offset="0.770248" />
                                                    <GradientStop Color="#FFCFCFCF" Offset="0.835165" />
                                                    <GradientStop Color="#FF898989" Offset="0.882051" />
                                                    <GradientStop Color="#FF434343" Offset="0.923077" />
                                                    <GradientStop Color="#FF212121" Offset="0.964103" />
                                                    <GradientStop Color="#FF000000" Offset="1" />
                                                </LinearGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Path Width="105.729" Height="43.7493" Canvas.Left="24.9596" Canvas.Top="8.88013" Stretch="Fill" Data="F1M130.688,36.3594C130.688,45.3457,123.404,52.6295,114.416,52.6295L41.2297,52.6295C32.2441,52.6295,24.9596,45.3457,24.9596,36.3594L24.9596,25.1504C24.9596,16.1653,32.2441,8.88013,41.2297,8.88013L114.416,8.88013C123.404,8.88013,130.688,16.1653,130.688,25.1504L130.688,36.3594z">
                                            <Path.Fill>
                                                <LinearGradientBrush StartPoint="0.499997,-0.476375" EndPoint="0.499997,1.26974">
                                                    <GradientStop Color="#FFE48787" Offset="0" />
                                                    <GradientStop Color="#FFDB5F5F" Offset="0.263736" />
                                                    <GradientStop Color="#FF7D5610" Offset="0.554945" />
                                                    <GradientStop Color="#FF512C09" Offset="0.646782" />
                                                    <GradientStop Color="#FF250303" Offset="0.769231" />
                                                    <GradientStop Color="#FF120101" Offset="0.863832" />
                                                    <GradientStop Color="#FF000000" Offset="0.950549" />
                                                </LinearGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Viewbox Width="78.8761" Height="78.009" Canvas.Left="41.0101" Canvas.Top="21.6975">
                                            <Canvas Width="78.8761" Height="78.009">
                                                <Path Width="75.804" Height="75.804" Canvas.Left="0.589859" Canvas.Top="0.590686" Stretch="Fill" Fill="#FF4C0B05" Data="M20.0869,2.34778L38.4909,20.7521 56.8949,2.34778C58.918,0.325073,61.9029,0,63.5309,1.62668L75.3577,13.4539C76.9837,15.0805,76.6604,18.0656,74.6375,20.0885L56.2332,38.4926 74.6375,56.8968C76.6604,58.9196,76.9837,61.9048,75.3577,63.5316L63.5309,75.3586C61.9029,76.9853,58.918,76.6604,56.8969,74.6373L38.4909,56.2332 20.0869,74.6373C18.0638,76.6604,15.0786,76.9853,13.4529,75.3586L1.62589,63.5316C1.52588E-05,61.9048,0.323303,58.9196,2.34616,56.8979L20.7502,38.4926 2.34616,20.0885C0.323303,18.0656,1.52588E-05,15.0805,1.62589,13.4539L13.4529,1.62668C15.0786,0.000732422,18.0638,0.325073,20.0869,2.34778z" />
                                                <Path Width="75.8041" Height="75.8037" Canvas.Left="2.48106" Canvas.Top="1.61495" Stretch="Fill" Fill="#FFFFFFFF" Data="M21.9792,3.37173L40.3832,21.7758 58.7875,3.37173C60.8103,1.34866,63.7954,1.02466,65.4213,2.65134L77.2483,14.4785C78.8761,16.1042,78.551,19.0894,76.5279,21.1122L58.1239,39.5165 76.5279,57.9215C78.551,59.9443,78.8761,62.9285,77.2483,64.5551L65.4213,76.3824C63.7954,78.009,60.8103,77.685,58.7875,75.6612L40.3832,57.2569 21.9792,75.6612C19.9563,77.684,16.9712,78.009,15.3436,76.3824L3.51639,64.5551C1.89041,62.9285,2.21573,59.9443,4.23843,57.9215L22.6427,39.5165 4.23843,21.1122C2.21573,19.0903,1.89041,16.1052,3.51639,14.4785L15.3452,2.65134C16.9712,1.02466,19.9563,1.34866,21.9792,3.37173z" />
                                            </Canvas>
                                        </Viewbox>
                                    </Canvas>
                                </Viewbox>
                                <Viewbox HorizontalAlignment="Center" Height="Auto" Margin="10,0" Stretch="Fill" VerticalAlignment="Stretch" Width="43.812" Visibility="Collapsed">
                                    <Grid Height="287.191" Width="287.18">
                                        <Path Stretch="Fill" Data="F1M733.467,568.95C733.467,586.105,719.569,600,702.424,600L477.337,600C460.188,600,446.286,586.105,446.286,568.95L446.286,343.851C446.286,326.714,460.188,312.809,477.337,312.809L702.424,312.809C719.569,312.809,733.467,326.714,733.467,343.851L733.467,568.95z" HorizontalAlignment="Stretch" Height="Auto" Margin="0" VerticalAlignment="Stretch" Width="Auto">
                                            <Path.Fill>
                                                <LinearGradientBrush StartPoint="0.499999,1" EndPoint="0.499999,-1.06262e-007">
                                                    <GradientStop Color="#FFE2E2E2" Offset="0" />
                                                    <GradientStop Color="#FFDDDDDD" Offset="0.494506" />
                                                    <GradientStop Color="#FFF3F3F3" Offset="1" />
                                                </LinearGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Path Stretch="Fill" Data="F1M702.416,325.2L477.337,325.2C467.046,325.2,458.673,333.572,458.673,343.851L458.673,454.785C499.352,461.573 543.593,465.306 589.879,465.306 636.16,465.306 680.405,461.573 721.08,454.785L721.08,343.851C721.08,333.572,712.711,325.2,702.416,325.2z" HorizontalAlignment="Stretch" Height="Auto" Margin="12.387,12.391,12.386,134.694" VerticalAlignment="Stretch" Width="Auto">
                                            <Path.Fill>
                                                <LinearGradientBrush StartPoint="0.499999,0" EndPoint="0.499999,1">
                                                    <GradientStop Color="#FFFFFFFF" Offset="0" />
                                                    <GradientStop Color="#FFD5D5D5" Offset="1" />
                                                </LinearGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Path Stretch="Fill" Data="F1M589.879,465.306C543.593,465.306,499.352,461.573,458.673,454.785L458.673,568.95C458.673,579.239,467.046,587.61,477.337,587.61L702.416,587.61C712.711,587.61,721.08,579.239,721.08,568.95L721.08,454.785C680.405,461.573,636.16,465.306,589.879,465.306z" HorizontalAlignment="Stretch" Height="Auto" Margin="12.387,141.976,12.386,12.39" VerticalAlignment="Stretch" Width="Auto">
                                            <Path.Fill>
                                                <LinearGradientBrush StartPoint="0.499999,1" EndPoint="0.499999,-4.59517e-007">
                                                    <GradientStop Color="#FFFFFFFF" Offset="0" />
                                                    <GradientStop Color="#FFCBCBCB" Offset="1" />
                                                </LinearGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Viewbox Width="Auto" Height="Auto" HorizontalAlignment="Stretch" Margin="54.706,60.826,62.302,58.064">
                                            <Canvas Width="78.8761" Height="78.009">
                                                <Path Width="75.804" Height="75.804" Canvas.Left="0.589859" Canvas.Top="0.590686" Stretch="Fill" Fill="#FF4C0B05" Data="M20.0869,2.34778L38.4909,20.7521 56.8949,2.34778C58.918,0.325073,61.9029,0,63.5309,1.62668L75.3577,13.4539C76.9837,15.0805,76.6604,18.0656,74.6375,20.0885L56.2332,38.4926 74.6375,56.8968C76.6604,58.9196,76.9837,61.9048,75.3577,63.5316L63.5309,75.3586C61.9029,76.9853,58.918,76.6604,56.8969,74.6373L38.4909,56.2332 20.0869,74.6373C18.0638,76.6604,15.0786,76.9853,13.4529,75.3586L1.62589,63.5316C1.52588E-05,61.9048,0.323303,58.9196,2.34616,56.8979L20.7502,38.4926 2.34616,20.0885C0.323303,18.0656,1.52588E-05,15.0805,1.62589,13.4539L13.4529,1.62668C15.0786,0.000732422,18.0638,0.325073,20.0869,2.34778z" />
                                                <Path Width="75.8041" Height="75.8037" Canvas.Left="2.48106" Canvas.Top="1.61495" Stretch="Fill" Fill="#FF93170B" Data="M21.9792,3.37173L40.3832,21.7758 58.7875,3.37173C60.8103,1.34866,63.7954,1.02466,65.4213,2.65134L77.2483,14.4785C78.8761,16.1042,78.551,19.0894,76.5279,21.1122L58.1239,39.5165 76.5279,57.9215C78.551,59.9443,78.8761,62.9285,77.2483,64.5551L65.4213,76.3824C63.7954,78.009,60.8103,77.685,58.7875,75.6612L40.3832,57.2569 21.9792,75.6612C19.9563,77.684,16.9712,78.009,15.3436,76.3824L3.51639,64.5551C1.89041,62.9285,2.21573,59.9443,4.23843,57.9215L22.6427,39.5165 4.23843,21.1122C2.21573,19.0903,1.89041,16.1052,3.51639,14.4785L15.3452,2.65134C16.9712,1.02466,19.9563,1.34866,21.9792,3.37173z" />
                                            </Canvas>
                                        </Viewbox>
                                    </Grid>
                                </Viewbox>
                                <!--<Image Margin="0" Source="/PhotoSW;component/images/delGrd.png" Stretch="Uniform" />-->
                                <Image Margin="0" Source="/PhotoSW;component/images/Editgrd.png" Stretch="Uniform"  />
                                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DigiGridDelButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="True">
                            <Grid Margin="0">
                                <Viewbox HorizontalAlignment="Center" Height="Auto" Margin="0" VerticalAlignment="Center" Width="Auto" Visibility="Collapsed">
                                    <Canvas Width="162.527" Height="153.436">
                                        <Path Width="162.527" Height="56.2363" Canvas.Left="0" Canvas.Top="97.1992" Stretch="Fill" Data="F1M162.527,125.318C162.527,140.847 126.143,153.436 81.2629,153.436 36.3841,153.436 0,140.847 0,125.318 0,109.788 36.3841,97.1992 81.2629,97.1992 126.143,97.1992 162.527,109.788 162.527,125.318z">
                                            <Path.Fill>
                                                <RadialGradientBrush RadiusX="0.499998" RadiusY="0.5" Center="0.5,0.507754" GradientOrigin="0.5,0.507754">
                                                    <RadialGradientBrush.RelativeTransform>
                                                        <TransformGroup />
                                                    </RadialGradientBrush.RelativeTransform>
                                                    <GradientStop Color="#FFD54D4D" Offset="0" />
                                                    <GradientStop Color="#A8EAA6A6" Offset="0.412088" />
                                                    <GradientStop Offset="0.895604" />
                                                </RadialGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Path Width="120.189" Height="120.188" Canvas.Left="18.2695" Canvas.Top="2.76691" Stretch="Fill" Data="F1M138.458,99.47C138.458,112.439,127.944,122.955,114.973,122.955L41.7545,122.955C28.7852,122.955,18.2695,112.439,18.2695,99.47L18.2695,26.2519C18.2695,13.2819,28.7852,2.76691,41.7545,2.76691L114.973,2.76691C127.944,2.76691,138.458,13.2819,138.458,26.2519L138.458,99.47z">
                                            <Path.Fill>
                                                <RadialGradientBrush RadiusX="0.687384" RadiusY="0.687388" Center="0.49623,1.12041" GradientOrigin="0.49623,1.12041">
                                                    <RadialGradientBrush.RelativeTransform>
                                                        <TransformGroup />
                                                    </RadialGradientBrush.RelativeTransform>
                                                    <GradientStop Color="#FFFFFFFF" Offset="0" />
                                                    <GradientStop Color="#FFF0C8C8" Offset="0.164835" />
                                                    <GradientStop Color="#FFE59393" Offset="0.263627" />
                                                    <GradientStop Color="#FFDB5F5F" Offset="0.395349" />
                                                    <GradientStop Color="#FFA03434" Offset="0.547569" />
                                                    <GradientStop Color="#FF660A0A" Offset="0.674419" />
                                                    <GradientStop Color="#FF0D0101" Offset="1" />
                                                </RadialGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Path Width="124.33" Height="124.334" Canvas.Left="16.1979" Canvas.Top="0.692688" Stretch="Fill" Data="F1M41.7545,125.027C27.64,125.023,16.1979,113.583,16.1979,99.47L16.1979,26.2525C16.1979,12.1367,27.64,0.695374,41.7545,0.692688L114.973,0.692688C129.085,0.695374,140.527,12.1367,140.528,26.2525L140.528,99.47C140.527,113.583,129.085,125.023,114.973,125.027L41.7545,125.027z M20.3411,26.2525L20.3411,99.47C20.36,111.296,29.9284,120.861,41.7545,120.884L114.973,120.884C126.798,120.861,136.366,111.296,136.387,99.47L136.387,26.2525C136.366,14.4271,126.798,4.8587,114.973,4.83585L41.7545,4.83585C29.9284,4.8587,20.36,14.4271,20.3411,26.2525z">
                                            <Path.Fill>
                                                <LinearGradientBrush StartPoint="0,0.500001" EndPoint="1,0.500001">
                                                    <GradientStop Color="#FFCCCCCC" Offset="5e-005" />
                                                    <GradientStop Color="#FFE5E5E5" Offset="0.0569518" />
                                                    <GradientStop Color="#FFFFFFFF" Offset="0.106741" />
                                                    <GradientStop Color="#FFC2C2C2" Offset="0.189971" />
                                                    <GradientStop Color="#FF858585" Offset="0.247191" />
                                                    <GradientStop Color="#FFA8A8A8" Offset="0.301124" />
                                                    <GradientStop Color="#FFCCCCCC" Offset="0.314607" />
                                                    <GradientStop Color="#FF7F7F7F" Offset="0.511028" />
                                                    <GradientStop Color="#FF323232" Offset="0.646067" />
                                                    <GradientStop Color="#FF4B4B4B" Offset="0.702663" />
                                                    <GradientStop Color="#FF656565" Offset="0.741573" />
                                                    <GradientStop Color="#FF323232" Offset="0.752422" />
                                                    <GradientStop Color="#FF000000" Offset="0.780899" />
                                                    <GradientStop Color="#FF7F7F7F" Offset="0.808795" />
                                                    <GradientStop Color="#FFFFFFFF" Offset="0.882022" />
                                                    <GradientStop Color="#FFD1D1D1" Offset="0.914568" />
                                                    <GradientStop Color="#FFA3A3A3" Offset="1" />
                                                </LinearGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Path Width="125.713" Height="125.716" Canvas.Left="15.5065" Canvas.Top="0" Stretch="Fill" Data="F1M41.7545,125.716L41.7545,125.029 41.7545,124.336 114.971,124.336C128.702,124.333,139.836,113.201,139.84,99.47L139.84,26.2532C139.836,12.5163,128.702,1.38531,114.971,1.38281L41.7545,1.38281C28.0188,1.38531,16.8887,12.5163,16.8887,26.2532L16.8887,99.47C16.8887,113.201,28.0188,124.333,41.7545,124.336L41.7545,125.029 41.7513,125.716C27.2552,125.713,15.5065,113.963,15.5065,99.47L15.5065,26.2532C15.5065,11.7525,27.2552,0.00585938,41.7545,0L114.971,0.00250244C129.465,0.00585938,141.216,11.7525,141.22,26.2532L141.22,99.47C141.216,113.963,129.465,125.713,114.971,125.716L41.7545,125.716z">
                                            <Path.Fill>
                                                <LinearGradientBrush StartPoint="0.086563,0.0865976" EndPoint="0.937587,0.937604">
                                                    <GradientStop Color="#FF000000" Offset="0" />
                                                    <GradientStop Color="#FF212121" Offset="0.043956" />
                                                    <GradientStop Color="#FF434343" Offset="0.0824176" />
                                                    <GradientStop Color="#FF898989" Offset="0.129304" />
                                                    <GradientStop Color="#FFCFCFCF" Offset="0.17033" />
                                                    <GradientStop Color="#FFA0A0A0" Offset="0.263736" />
                                                    <GradientStop Color="#FF727272" Offset="0.516483" />
                                                    <GradientStop Color="#FFA0A0A0" Offset="0.770248" />
                                                    <GradientStop Color="#FFCFCFCF" Offset="0.835165" />
                                                    <GradientStop Color="#FF898989" Offset="0.882051" />
                                                    <GradientStop Color="#FF434343" Offset="0.923077" />
                                                    <GradientStop Color="#FF212121" Offset="0.964103" />
                                                    <GradientStop Color="#FF000000" Offset="1" />
                                                </LinearGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Path Width="117.423" Height="117.43" Canvas.Left="19.6511" Canvas.Top="4.14322" Stretch="Fill" Data="F1M114.971,4.14322L41.7545,4.14322C29.5468,4.16919,19.6705,14.0443,19.6511,26.2507L20.3411,26.2532 19.6511,26.2532 19.6511,99.47C19.6705,111.676,29.5468,121.549,41.7513,121.574L114.971,121.574C127.178,121.549,137.055,111.676,137.074,99.47L137.074,26.2532C137.055,14.0443,127.178,4.16919,114.971,4.14322z M135.695,99.47C135.676,110.913,126.415,120.169,114.971,120.193L41.7545,120.193C30.3073,120.169,21.0481,110.913,21.0273,99.47L21.0273,26.2532C21.0481,14.8067,30.3073,5.54678,41.7545,5.52466L114.971,5.52734C126.415,5.54678,135.676,14.8067,135.695,26.2532L135.695,99.47z">
                                            <Path.Fill>
                                                <LinearGradientBrush StartPoint="0,0.500001" EndPoint="1,0.500001">
                                                    <GradientStop Color="#FF000000" Offset="0" />
                                                    <GradientStop Color="#FF212121" Offset="0.043956" />
                                                    <GradientStop Color="#FF434343" Offset="0.0824176" />
                                                    <GradientStop Color="#FF898989" Offset="0.129304" />
                                                    <GradientStop Color="#FFCFCFCF" Offset="0.17033" />
                                                    <GradientStop Color="#FFE7E7E7" Offset="0.263736" />
                                                    <GradientStop Color="#FFFFFFFF" Offset="0.516483" />
                                                    <GradientStop Color="#FFE7E7E7" Offset="0.770248" />
                                                    <GradientStop Color="#FFCFCFCF" Offset="0.835165" />
                                                    <GradientStop Color="#FF898989" Offset="0.882051" />
                                                    <GradientStop Color="#FF434343" Offset="0.923077" />
                                                    <GradientStop Color="#FF212121" Offset="0.964103" />
                                                    <GradientStop Color="#FF000000" Offset="1" />
                                                </LinearGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Path Width="105.729" Height="43.7493" Canvas.Left="24.9596" Canvas.Top="8.88013" Stretch="Fill" Data="F1M130.688,36.3594C130.688,45.3457,123.404,52.6295,114.416,52.6295L41.2297,52.6295C32.2441,52.6295,24.9596,45.3457,24.9596,36.3594L24.9596,25.1504C24.9596,16.1653,32.2441,8.88013,41.2297,8.88013L114.416,8.88013C123.404,8.88013,130.688,16.1653,130.688,25.1504L130.688,36.3594z">
                                            <Path.Fill>
                                                <LinearGradientBrush StartPoint="0.499997,-0.476375" EndPoint="0.499997,1.26974">
                                                    <GradientStop Color="#FFE48787" Offset="0" />
                                                    <GradientStop Color="#FFDB5F5F" Offset="0.263736" />
                                                    <GradientStop Color="#FF7D5610" Offset="0.554945" />
                                                    <GradientStop Color="#FF512C09" Offset="0.646782" />
                                                    <GradientStop Color="#FF250303" Offset="0.769231" />
                                                    <GradientStop Color="#FF120101" Offset="0.863832" />
                                                    <GradientStop Color="#FF000000" Offset="0.950549" />
                                                </LinearGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Viewbox Width="78.8761" Height="78.009" Canvas.Left="41.0101" Canvas.Top="21.6975">
                                            <Canvas Width="78.8761" Height="78.009">
                                                <Path Width="75.804" Height="75.804" Canvas.Left="0.589859" Canvas.Top="0.590686" Stretch="Fill" Fill="#FF4C0B05" Data="M20.0869,2.34778L38.4909,20.7521 56.8949,2.34778C58.918,0.325073,61.9029,0,63.5309,1.62668L75.3577,13.4539C76.9837,15.0805,76.6604,18.0656,74.6375,20.0885L56.2332,38.4926 74.6375,56.8968C76.6604,58.9196,76.9837,61.9048,75.3577,63.5316L63.5309,75.3586C61.9029,76.9853,58.918,76.6604,56.8969,74.6373L38.4909,56.2332 20.0869,74.6373C18.0638,76.6604,15.0786,76.9853,13.4529,75.3586L1.62589,63.5316C1.52588E-05,61.9048,0.323303,58.9196,2.34616,56.8979L20.7502,38.4926 2.34616,20.0885C0.323303,18.0656,1.52588E-05,15.0805,1.62589,13.4539L13.4529,1.62668C15.0786,0.000732422,18.0638,0.325073,20.0869,2.34778z" />
                                                <Path Width="75.8041" Height="75.8037" Canvas.Left="2.48106" Canvas.Top="1.61495" Stretch="Fill" Fill="#FFFFFFFF" Data="M21.9792,3.37173L40.3832,21.7758 58.7875,3.37173C60.8103,1.34866,63.7954,1.02466,65.4213,2.65134L77.2483,14.4785C78.8761,16.1042,78.551,19.0894,76.5279,21.1122L58.1239,39.5165 76.5279,57.9215C78.551,59.9443,78.8761,62.9285,77.2483,64.5551L65.4213,76.3824C63.7954,78.009,60.8103,77.685,58.7875,75.6612L40.3832,57.2569 21.9792,75.6612C19.9563,77.684,16.9712,78.009,15.3436,76.3824L3.51639,64.5551C1.89041,62.9285,2.21573,59.9443,4.23843,57.9215L22.6427,39.5165 4.23843,21.1122C2.21573,19.0903,1.89041,16.1052,3.51639,14.4785L15.3452,2.65134C16.9712,1.02466,19.9563,1.34866,21.9792,3.37173z" />
                                            </Canvas>
                                        </Viewbox>
                                    </Canvas>
                                </Viewbox>
                                <Viewbox HorizontalAlignment="Center" Height="Auto" Margin="10,0" Stretch="Fill" VerticalAlignment="Stretch" Width="43.812" Visibility="Collapsed">
                                    <Grid Height="287.191" Width="287.18">
                                        <Path Stretch="Fill" Data="F1M733.467,568.95C733.467,586.105,719.569,600,702.424,600L477.337,600C460.188,600,446.286,586.105,446.286,568.95L446.286,343.851C446.286,326.714,460.188,312.809,477.337,312.809L702.424,312.809C719.569,312.809,733.467,326.714,733.467,343.851L733.467,568.95z" HorizontalAlignment="Stretch" Height="Auto" Margin="0" VerticalAlignment="Stretch" Width="Auto">
                                            <Path.Fill>
                                                <LinearGradientBrush StartPoint="0.499999,1" EndPoint="0.499999,-1.06262e-007">
                                                    <GradientStop Color="#FFE2E2E2" Offset="0" />
                                                    <GradientStop Color="#FFDDDDDD" Offset="0.494506" />
                                                    <GradientStop Color="#FFF3F3F3" Offset="1" />
                                                </LinearGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Path Stretch="Fill" Data="F1M702.416,325.2L477.337,325.2C467.046,325.2,458.673,333.572,458.673,343.851L458.673,454.785C499.352,461.573 543.593,465.306 589.879,465.306 636.16,465.306 680.405,461.573 721.08,454.785L721.08,343.851C721.08,333.572,712.711,325.2,702.416,325.2z" HorizontalAlignment="Stretch" Height="Auto" Margin="12.387,12.391,12.386,134.694" VerticalAlignment="Stretch" Width="Auto">
                                            <Path.Fill>
                                                <LinearGradientBrush StartPoint="0.499999,0" EndPoint="0.499999,1">
                                                    <GradientStop Color="#FFFFFFFF" Offset="0" />
                                                    <GradientStop Color="#FFD5D5D5" Offset="1" />
                                                </LinearGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Path Stretch="Fill" Data="F1M589.879,465.306C543.593,465.306,499.352,461.573,458.673,454.785L458.673,568.95C458.673,579.239,467.046,587.61,477.337,587.61L702.416,587.61C712.711,587.61,721.08,579.239,721.08,568.95L721.08,454.785C680.405,461.573,636.16,465.306,589.879,465.306z" HorizontalAlignment="Stretch" Height="Auto" Margin="12.387,141.976,12.386,12.39" VerticalAlignment="Stretch" Width="Auto">
                                            <Path.Fill>
                                                <LinearGradientBrush StartPoint="0.499999,1" EndPoint="0.499999,-4.59517e-007">
                                                    <GradientStop Color="#FFFFFFFF" Offset="0" />
                                                    <GradientStop Color="#FFCBCBCB" Offset="1" />
                                                </LinearGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Viewbox Width="Auto" Height="Auto" HorizontalAlignment="Stretch" Margin="54.706,60.826,62.302,58.064">
                                            <Canvas Width="78.8761" Height="78.009">
                                                <Path Width="75.804" Height="75.804" Canvas.Left="0.589859" Canvas.Top="0.590686" Stretch="Fill" Fill="#FF4C0B05" Data="M20.0869,2.34778L38.4909,20.7521 56.8949,2.34778C58.918,0.325073,61.9029,0,63.5309,1.62668L75.3577,13.4539C76.9837,15.0805,76.6604,18.0656,74.6375,20.0885L56.2332,38.4926 74.6375,56.8968C76.6604,58.9196,76.9837,61.9048,75.3577,63.5316L63.5309,75.3586C61.9029,76.9853,58.918,76.6604,56.8969,74.6373L38.4909,56.2332 20.0869,74.6373C18.0638,76.6604,15.0786,76.9853,13.4529,75.3586L1.62589,63.5316C1.52588E-05,61.9048,0.323303,58.9196,2.34616,56.8979L20.7502,38.4926 2.34616,20.0885C0.323303,18.0656,1.52588E-05,15.0805,1.62589,13.4539L13.4529,1.62668C15.0786,0.000732422,18.0638,0.325073,20.0869,2.34778z" />
                                                <Path Width="75.8041" Height="75.8037" Canvas.Left="2.48106" Canvas.Top="1.61495" Stretch="Fill" Fill="#FF93170B" Data="M21.9792,3.37173L40.3832,21.7758 58.7875,3.37173C60.8103,1.34866,63.7954,1.02466,65.4213,2.65134L77.2483,14.4785C78.8761,16.1042,78.551,19.0894,76.5279,21.1122L58.1239,39.5165 76.5279,57.9215C78.551,59.9443,78.8761,62.9285,77.2483,64.5551L65.4213,76.3824C63.7954,78.009,60.8103,77.685,58.7875,75.6612L40.3832,57.2569 21.9792,75.6612C19.9563,77.684,16.9712,78.009,15.3436,76.3824L3.51639,64.5551C1.89041,62.9285,2.21573,59.9443,4.23843,57.9215L22.6427,39.5165 4.23843,21.1122C2.21573,19.0903,1.89041,16.1052,3.51639,14.4785L15.3452,2.65134C16.9712,1.02466,19.9563,1.34866,21.9792,3.37173z" />
                                            </Canvas>
                                        </Viewbox>
                                    </Grid>
                                </Viewbox>
                                <!--<Image Margin="0" Source="/PhotoSW;component/images/delGrd.png" Stretch="Uniform" />-->
                                <Image Margin="0" Source="/PhotoSW;component/images/delGrd.png" Stretch="Uniform"  />
                                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyleDisableCross" TargetType="{x:Type Button}">
            <Setter Property="Control.Padding" Value="0" />
            <Setter Property="FrameworkElement.Cursor" Value="Hand" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0.405" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                                <EasingColorKeyFrame KeyTime="0" Value="White" />
                                                <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FFD2D2D2" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.66" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FF8F8F8F" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="Valid" />
                                    <VisualState x:Name="InvalidFocused" />
                                    <VisualState x:Name="InvalidUnfocused" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="Custom">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Unfocused" />
                                    <VisualState x:Name="Focused" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                            <Rectangle Name="rectangle" Fill="#FFFFFFFF" Opacity="0" Margin="0" RadiusX="10" RadiusY="10" Stroke="{x:Null}" />
                            <Image Name="image" Height="21.333" Margin="0,-13.1,-12.25,0" Source="/PhotoSW;component/images/tick.png" Stretch="Fill" VerticalAlignment="Top" HorizontalAlignment="Right" Width="20" Visibility="Collapsed" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsFocused" Value="True" />
                            <Trigger Property="Button.IsDefaulted" Value="True" />
                            <Trigger Property="UIElement.IsMouseOver" Value="True" />
                            <Trigger Property="ButtonBase.IsPressed" Value="True" />
                            <Trigger Property="UIElement.IsEnabled" Value="False" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DigiNewKeyboardButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome" SnapsToDevicePixels="True" Background="#FFFFFFFF" BorderBrush="#FF000000" BorderThickness="1" CornerRadius="5">
                            <Border Margin="0,1,0,0" Height="Auto" CornerRadius="5">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFEDEDEF" Offset="0" />
                                        <GradientStop Color="#FFD1D1D7" Offset="1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <ContentPresenter RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Height="Auto" Width="Auto" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <ContentPresenter.Effect>
                                        <DropShadowEffect Color="White" BlurRadius="0" Direction="309" ShadowDepth="1" />
                                    </ContentPresenter.Effect>
                                </ContentPresenter>
                            </Border>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.FontSize" Value="32" />
        </Style>
        <Style x:Key="DigiNewKeyboardBackspaceButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome" SnapsToDevicePixels="True" Background="#FFFFFFFF" BorderBrush="#FF000000" BorderThickness="1" CornerRadius="5">
                            <Border Margin="0,1,0,0" Height="Auto" CornerRadius="5">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFEDEDEF" Offset="0" />
                                        <GradientStop Color="#FFD1D1D7" Offset="1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Path Stretch="Fill" Fill="#FF3B3C3D" Data="F1M1583.26,564.809L1561.39,564.809C1557.74,565.069 1540.81,578.875 1540.81,582 1540.81,585.125 1557.74,596.844 1561.39,597.104L1583.26,597.104C1590.56,597.104,1591.6,593.373,1591.6,588.771L1591.6,573.146C1591.6,568.542,1590.3,564.809,1583.26,564.809z M1582.56,586.667L1577.87,591.351 1572.03,585.516 1566.23,591.322 1561.88,586.981 1567.69,581.172 1561.66,575.146 1566.35,570.458 1572.38,576.485 1578.09,570.772 1582.43,575.115 1576.72,580.828 1582.56,586.667z" Height="Auto" VerticalAlignment="Center" Margin="29,38,27.938,36.204" HorizontalAlignment="Center" />
                            </Border>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.FontSize" Value="32" />
        </Style>
        <SolidColorBrush x:Key="ListBorder" Color="#828790" />
        <Style x:Key="DigiStyleForCombos" TargetType="{x:Type ListBox}">
            <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ListBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
            <Setter Property="ScrollViewer.PanningMode" Value="Both" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border Name="Bd" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" Padding="1" SnapsToDevicePixels="True" CornerRadius="10" BorderBrush="#FFBABABA">
                            <ScrollViewer Focusable="False" Padding="{TemplateBinding Control.Padding}">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Border.Background" />
                            </Trigger>
                            <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DigiTextBoxStyleComboType" TargetType="{x:Type TextBox}" BasedOn="{x:Null}">
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource TextBoxBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="UIElement.AllowDrop" Value="True" />
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border BorderThickness="0" MaxHeight="50" BorderBrush="{x:Null}">
                            <Grid Margin="-1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="50.158" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Margin="0" RadiusY="10" RadiusX="10" Visibility="Collapsed" Grid.ColumnSpan="2">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush StartPoint="0.5,1" EndPoint="0.5,0">
                                            <GradientStop Color="#FFA8A2A0" Offset="0.00561798" />
                                            <GradientStop Color="#FF000000" Offset="0.249975" />
                                            <GradientStop Color="#FFFFFFFF" Offset="0.250025" />
                                            <GradientStop Color="#FFD3D0CF" Offset="0.61442" />
                                            <GradientStop Color="#FFA8A2A0" Offset="1" />
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Margin="3" RadiusY="10" RadiusX="10" Visibility="Collapsed" Grid.ColumnSpan="2">
                                    <Rectangle.Fill>
                                        <RadialGradientBrush RadiusX="0.360181" RadiusY="1.85149" Center="0.5,0.500006" GradientOrigin="0.5,0.500006">
                                            <RadialGradientBrush.RelativeTransform>
                                                <TransformGroup />
                                            </RadialGradientBrush.RelativeTransform>
                                            <GradientStop Color="#FFECE8E1" Offset="0" />
                                            <GradientStop Color="#FFFFFFFF" Offset="0.509091" />
                                            <GradientStop Color="#FFD7D6D3" Offset="1" />
                                        </RadialGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Margin="3" RadiusY="2" RadiusX="2" Stroke="#FFFFFFFF" StrokeThickness="0.666667" StrokeMiterLimit="2.75" Fill="#FFE9E9E9" Visibility="Collapsed" Grid.ColumnSpan="2" />
                                <Rectangle HorizontalAlignment="Stretch" Margin="0" RadiusY="2" RadiusX="2" Width="Auto" Fill="#FFBABABA" Grid.ColumnSpan="2" />
                                <Rectangle RadiusY="2" RadiusX="2" Stroke="#FFFFFFFF" StrokeThickness="0.666667" StrokeMiterLimit="2.75" Margin="1" Grid.ColumnSpan="2">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush StartPoint="0.499999,-0.0298528" EndPoint="0.499999,1.07553">
                                            <GradientStop Color="#FFFFFFFF" Offset="0" />
                                            <GradientStop Color="#FFEEEEEE" Offset="0.181818" />
                                            <GradientStop Color="#FFDEDEDE" Offset="0.515152" />
                                            <GradientStop Color="#FFEEEEEE" Offset="0.854546" />
                                            <GradientStop Color="#FFFFFFFF" Offset="1" />
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Border Name="Bd" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="True" Margin="8,0,0,0" Grid.ColumnSpan="1" Background="{x:Null}" BorderBrush="{x:Null}">
                                    <ScrollViewer Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Padding="10,5" VerticalContentAlignment="Center" VerticalAlignment="Center" />
                                </Border>
                                <Viewbox Margin="4.32,3.003,0,1.534" Stretch="Fill" HorizontalAlignment="Stretch" Width="Auto" Grid.Column="1">
                                    <Grid Height="100.13" Width="96.474">
                                        <Path Stretch="Fill" Data="F1M636.82,459.395C610.223,459.395 588.583,438.411 588.583,412.619 588.583,386.827 610.223,365.844 636.82,365.844 663.419,365.844 685.057,386.827 685.057,412.619 685.057,438.411 663.419,459.395 636.82,459.395z" Height="Auto" Margin="0,6.579,0,0" VerticalAlignment="Stretch">
                                            <Path.Fill>
                                                <LinearGradientBrush StartPoint="0.499999,-0.0454579" EndPoint="0.499999,1.09101">
                                                    <GradientStop Color="#FFC7C3C5" Offset="0" />
                                                    <GradientStop Color="#FF828080" Offset="0.509091" />
                                                    <GradientStop Color="#FF595959" Offset="1" />
                                                </LinearGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Path Stretch="Fill" Data="F1M636.82,455.74C610.223,455.74 588.583,434.101 588.583,407.503 588.583,380.904 610.223,359.265 636.82,359.265 663.419,359.265 685.057,380.904 685.057,407.503 685.057,434.101 663.419,455.74 636.82,455.74z" Height="Auto" Margin="0,0,0,3.655" VerticalAlignment="Stretch">
                                            <Path.Fill>
                                                <LinearGradientBrush StartPoint="0.499999,-0.0454575" EndPoint="0.499999,1.09101">
                                                    <GradientStop Color="#FFC7C3C5" Offset="0" />
                                                    <GradientStop Color="#FF828080" Offset="0.509091" />
                                                    <GradientStop Color="#FFA3A3A3" Offset="1" />
                                                </LinearGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Path Stretch="Fill" Data="F1M680.672,407.503C680.672,431.722 661.037,451.354 636.82,451.354 612.604,451.354 592.968,431.722 592.968,407.503 592.968,383.283 612.604,363.651 636.82,363.651 661.037,363.651 680.672,383.283 680.672,407.503z" Height="Auto" Margin="4.385,4.386,4.385,8.041" VerticalAlignment="Stretch">
                                            <Path.Fill>
                                                <LinearGradientBrush StartPoint="0.500001,1.06667" EndPoint="0.500001,-0.100114">
                                                    <GradientStop Color="#FFD73737" Offset="0" />
                                                    <GradientStop Color="#FFA60707" Offset="0.50303" />
                                                    <GradientStop Color="#FFD28383" Offset="0.854545" />
                                                    <GradientStop Color="#FFFFFFFF" Offset="1" />
                                                </LinearGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Viewbox HorizontalAlignment="Stretch" Height="Auto" Margin="18.963,30.675,14.154,26.677" VerticalAlignment="Stretch" Width="Auto">
                                            <Canvas Width="63.3573" Height="42.7775">
                                                <Path Width="61.5746" Height="42.7775" Canvas.Left="0.891724" Canvas.Top="0" Stretch="Fill" Data="F1M31.6073,42.7775C29.0383,42.7775,26.636,41.7175,24.8541,39.7943L3.56689,16.8862C0,13.0555 0,6.81976 3.56689,2.98706 5.35144,1.06183 7.75452,0 10.3157,0 12.8801,0 15.2785,1.06183 17.0728,2.98706L31.6809,18.7039 46.2832,2.98706C48.0779,1.06183 50.4758,0.00335693 53.0409,0.00335693 55.6021,0.00335693 58.0005,1.06183 59.7936,2.98706 63.3573,6.82227 63.3573,13.0555 59.7936,16.8882L38.4934,39.7996C36.7161,41.7202,34.3143,42.7775,31.7446,42.7775L31.6073,40.4623 31.6073,42.7775z" RenderTransformOrigin="0.5,0.5">
                                                    <Path.RenderTransform>
                                                        <TransformGroup>
                                                            <ScaleTransform />
                                                            <SkewTransform />
                                                            <RotateTransform Angle="-90" />
                                                            <TranslateTransform />
                                                        </TransformGroup>
                                                    </Path.RenderTransform>
                                                    <Path.Fill>
                                                        <LinearGradientBrush StartPoint="0.499998,-0.0454566" EndPoint="0.499997,1.09101">
                                                            <GradientStop Color="#FFE0DCDE" Offset="0" />
                                                            <GradientStop Color="#FF908E8F" Offset="0.660606" />
                                                            <GradientStop Color="#FF404040" Offset="1" />
                                                        </LinearGradientBrush>
                                                    </Path.Fill>
                                                </Path>
                                                <Path Width="56.8856" Height="38.1499" Canvas.Left="3.23544" Canvas.Top="2.31288" Stretch="Fill" Data="F1M58.0429,4.54425C55.2805,1.56909,50.7922,1.56909,48.0266,4.54425L31.6809,22.1407 15.33,4.54425C12.5637,1.56909 8.07153,1.56909 5.31305,4.54425 2.54291,7.52484 2.54291,12.3484 5.31305,15.327L26.6014,38.2377C27.9973,39.7448 29.8469,40.4837 31.6809,40.4623 33.5175,40.4819 35.3555,39.7448 36.7552,38.2403L58.0429,15.3289C60.8137,12.3516,60.8137,7.52484,58.0429,4.54425z" RenderTransformOrigin="0.5,0.5">
                                                    <Path.RenderTransform>
                                                        <TransformGroup>
                                                            <ScaleTransform />
                                                            <SkewTransform />
                                                            <RotateTransform Angle="-90" />
                                                            <TranslateTransform Y="0.002" />
                                                        </TransformGroup>
                                                    </Path.RenderTransform>
                                                    <Path.Fill>
                                                        <LinearGradientBrush StartPoint="0.5,-0.0454529" EndPoint="0.5,1.09101">
                                                            <GradientStop Color="#FFFFFFFF" Offset="0" />
                                                            <GradientStop Color="#FFBBBBBB" Offset="0.660606" />
                                                            <GradientStop Color="#FF777777" Offset="1" />
                                                        </LinearGradientBrush>
                                                    </Path.Fill>
                                                </Path>
                                            </Canvas>
                                        </Viewbox>
                                    </Grid>
                                </Viewbox>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Border.Background" />
                                <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.FontSize" Value="32" />
            <Setter Property="Control.FontFamily" Value="Verdana" />
        </Style>
        
        <LinearGradientBrush x:Key="TextBoxNewBorder" EndPoint="0,20" MappingMode="Absolute" StartPoint="0,0">
            <GradientStop Color="Maroon" Offset="0.05" />
            <GradientStop Color="Maroon" Offset="0.07" />
            <GradientStop Color="Maroon" Offset="1" />
        </LinearGradientBrush>
        <Style x:Key="PhotoSWTextBoxStyle" TargetType="{x:Type TextBox}" BasedOn="{x:Null}">
            <Setter Property="Foreground" Value="#FFFFFFFF" />
            <Setter Property="Background" Value="#696969" />
            <Setter Property="BorderBrush" Value="{StaticResource TextBoxNewBorder}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="UIElement.AllowDrop" Value="True" />
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border BorderThickness="2" MaxHeight="50" BorderBrush="Maroon">
                            <Grid Margin="-1">
                                <Rectangle Margin="0" RadiusY="10" RadiusX="10" Visibility="Collapsed">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush StartPoint="0.5,1" EndPoint="0.5,0">
                                            <!--<GradientStop Color="#696969" Offset="0" />-->
                                            <GradientStop Color="#FF000000" Offset="0.249975" />
                                            <GradientStop Color="#FFFFFFFF" Offset="0.250025" />
                                            <GradientStop Color="#FFD3D0CF" Offset="0.61442" />
                                            <GradientStop Color="#FFA8A2A0" Offset="1" />
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Margin="3" RadiusY="10" RadiusX="10" Visibility="Collapsed">
                                    <Rectangle.Fill>
                                        <RadialGradientBrush RadiusX="0.360181" RadiusY="1.85149" Center="0.5,0.500006" GradientOrigin="0.5,0.500006">
                                            <RadialGradientBrush.RelativeTransform>
                                                <TransformGroup />
                                            </RadialGradientBrush.RelativeTransform>
                                            <!--<GradientStop Color="#696969" Offset="0" />-->
                                            <GradientStop Color="#FFECE8E1" Offset="0" />
                                            <GradientStop Color="#FFFFFFFF" Offset="0.509091" />
                                            <GradientStop Color="#FFD7D6D3" Offset="1" />
                                        </RadialGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Margin="3" RadiusY="2" RadiusX="2" Stroke="#696969" StrokeThickness="0.666667" StrokeMiterLimit="2.75" Fill="#FFE9E9E9" Visibility="Collapsed" />
                                <Rectangle HorizontalAlignment="Stretch" Margin="0" RadiusY="2" RadiusX="2" Width="Auto" Fill="#696969" />
                                <!--<Rectangle RadiusY="2" RadiusX="2" Stroke="#FFFFFFFF" StrokeThickness="0.666667" StrokeMiterLimit="2.75" Margin="1">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush StartPoint="0.499999,-0.0298528" EndPoint="0.499999,1.07553">
                                            <GradientStop Color="#FFFFFFFF" Offset="0" />
                                            <GradientStop Color="#FFEEEEEE" Offset="0.181818" />
                                            <GradientStop Color="#FFDEDEDE" Offset="0.515152" />
                                            <GradientStop Color="#FFEEEEEE" Offset="0.854546" />
                                            <GradientStop Color="#FFFFFFFF" Offset="1" />
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>-->
                                <Border Name="Bd" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="True" Margin="8,0" Background="{x:Null}" BorderBrush="{x:Null}">
                                    <ScrollViewer Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Padding="10,5" VerticalContentAlignment="Center" VerticalAlignment="Center" />
                                </Border>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Border.Background" />
                                <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.FontSize" Value="32" />
            <Setter Property="Control.FontFamily" Value="Verdana" />
        </Style>


        <DataTemplate x:Key="LstComboStyleDataTemplate">
            <Grid Width="Auto">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" MinWidth="29" />
                    <ColumnDefinition Width="16.667" />
                </Grid.ColumnDefinitions>
                <Image Margin="2" Source="/PhotoSW;component/images/tick.png" Stretch="Fill" Grid.Column="1" Visibility="Collapsed" />
                <TextBlock Margin="0" TextWrapping="Wrap" Text="TextBlock" />
            </Grid>
        </DataTemplate>
        <Style x:Key="DigiBorderStyleKeyboard" TargetType="{x:Type Border}">
            <Setter Property="UIElement.RenderTransform">
                <Setter.Value>
                    <TranslateTransform />
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="UIElement.Visibility" Value="Visible">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin">
                                    <DiscreteThicknessKeyFrame KeyTime="0">
                                        <DiscreteThicknessKeyFrame.Value>
                                            <Thickness>0,0,0,-500</Thickness>
                                        </DiscreteThicknessKeyFrame.Value>
                                    </DiscreteThicknessKeyFrame>
                                    <EasingThicknessKeyFrame KeyTime="0:0:1">
                                        <EasingThicknessKeyFrame.EasingFunction>
                                            <CubicEase EasingMode="EaseOut" />
                                        </EasingThicknessKeyFrame.EasingFunction>
                                        <EasingThicknessKeyFrame.Value>
                                            <Thickness>0,0,0,0</Thickness>
                                        </EasingThicknessKeyFrame.Value>
                                    </EasingThicknessKeyFrame>
                                </ThicknessAnimationUsingKeyFrames>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" AutoReverse="False" Duration="0:0:1" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DigiGrdImgCheckBoxStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="Control.Background" Value="#FF448DCA" />
            <Setter Property="Control.Foreground" Value="#FF000000" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Left" />
            <Setter Property="Control.VerticalContentAlignment" Value="Top" />
            <Setter Property="Control.Padding" Value="4,1,0,0" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFA3AEB9" Offset="0" />
                        <GradientStop Color="#FF8399A9" Offset="0.375" />
                        <GradientStop Color="#FF718597" Offset="0.375" />
                        <GradientStop Color="#FF617584" Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="0" />
                            </Grid.ColumnDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckIcon">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                    <VisualState x:Name="Indeterminate" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused" />
                                    <VisualState x:Name="Unfocused" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="Valid" />
                                    <VisualState x:Name="InvalidUnfocused" />
                                    <VisualState x:Name="InvalidFocused" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Background="#00000000">
                                <Path Name="CheckIcon" Stretch="Fill" Fill="#FF9C3131" Data="F1M966.002,669.046C968.721,666.325 1010.77,625.944 1010.77,625.944 1013.43,623.291 1012.63,620.605 1011.14,619.114L1001.18,609.161C999.691,607.664 997.003,606.875 994.354,609.518 994.354,609.518 968.921,634.957 966.191,637.679 963.472,634.957 953.863,625.336 953.863,625.336 951.209,622.681 948.524,623.482 947.036,624.968L937.075,634.929C935.583,636.424 934.787,639.102 937.442,641.76 937.442,641.76 947.054,651.372 949.775,654.096" HorizontalAlignment="Center" Height="61.263" Margin="0" VerticalAlignment="Center" Width="76.818" Opacity="0" />
                            </Grid>
                            <ContentPresenter Name="contentPresenter" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Content="{TemplateBinding ContentControl.Content}" Grid.Column="1" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DigiGrdComboBoxStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ComboBoxFocusVisual}" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="Control.Padding" Value="4,3" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
            <Setter Property="ScrollViewer.PanningMode" Value="Both" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid Name="MainGrid" SnapsToDevicePixels="True" MaxHeight="Infinity">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="47.217" />
                            </Grid.ColumnDefinitions>
                            <Popup Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
                                <sc:SystemDropShadowChrome Name="Shdw" Color="Transparent" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
                                    <Border Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                        <ScrollViewer Name="DropDownScrollViewer">
                                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                                <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                    <Rectangle Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}" />
                                                </Canvas>
                                                <ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                            </Grid>
                                        </ScrollViewer>
                                    </Border>
                                </sc:SystemDropShadowChrome>
                            </Popup>
                            <ToggleButton BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}" Grid.ColumnSpan="2" Style="{DynamicResource digiGrdComboToggleButtonStyle}" VerticalAlignment="Stretch" Margin="0,-82.5,0,-81" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                            <ContentPresenter ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}" Content="{TemplateBinding ComboBox.SelectionBoxItem}" ContentStringFormat="{TemplateBinding ComboBox.SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" IsHitTestVisible="False" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="Center" Margin="10,0,5,0" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
                                <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5" />
                                <Setter TargetName="Shdw" Property="Microsoft_Windows_Themes:SystemDropShadowChrome.Color" Value="#71000000" />
                            </Trigger>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter TargetName="DropDownBorder" Property="FrameworkElement.Height" Value="95" />
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
                                <Setter Property="Control.Background" Value="#FFF4F4F4" />
                            </Trigger>
                            <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                            </Trigger>
                            <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
                                <Setter TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" Property="Canvas.Top" />
                                <Setter TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" Property="Canvas.Left" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.FontSize" Value="32" />
            <Setter Property="Control.FontFamily" Value="Verdana" />
            <Style.Triggers>
                <Trigger Property="ComboBox.IsEditable" Value="True">
                    <Setter Property="Control.BorderBrush" Value="{StaticResource TextBoxBorder}" />
                    <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
                    <Setter Property="Control.IsTabStop" Value="False" />
                    <Setter Property="Control.Padding" Value="3" />
                    <Setter Property="Control.Template" Value="{StaticResource ComboBoxEditableTemplate}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="digiGrdComboToggleButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
            <Setter Property="Control.IsTabStop" Value="False" />
            <Setter Property="UIElement.Focusable" Value="False" />
            <Setter Property="ButtonBase.ClickMode" Value="Press" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Name="Chrome" SnapsToDevicePixels="True" Margin="0" MaxHeight="100">
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Background="#00000000">
                                <Rectangle Margin="0" RadiusX="10" RadiusY="10" Visibility="Collapsed">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush StartPoint="0.5,1" EndPoint="0.5,0">
                                            <GradientStop Color="#FFA8A2A0" Offset="0.00561798" />
                                            <GradientStop Color="#FF000000" Offset="0.249975" />
                                            <GradientStop Color="#FFFFFFFF" Offset="0.250025" />
                                            <GradientStop Color="#FFD3D0CF" Offset="0.61442" />
                                            <GradientStop Color="#FFA8A2A0" Offset="1" />
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Margin="3" RadiusY="10" RadiusX="10" Visibility="Collapsed">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush StartPoint="0.500002,0.0747932" EndPoint="0.500002,0.943153">
                                            <GradientStop Color="#FFF1E4E4" Offset="1" />
                                            <GradientStop Color="#FFA7A0A2" Offset="0.208" />
                                            <GradientStop Color="#FFD0D0D0" Offset="0" />
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle HorizontalAlignment="Stretch" Margin="0" RadiusY="2" RadiusX="2" Width="Auto" Fill="#FFBABABA" Visibility="Collapsed" />
                                <Rectangle RadiusY="2" RadiusX="2" Stroke="#FFFFFFFF" StrokeThickness="0.666667" StrokeMiterLimit="2.75" Margin="1" Visibility="Collapsed">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush StartPoint="0.499999,-0.0298528" EndPoint="0.499999,1.07553">
                                            <GradientStop Color="#FFFFFFFF" Offset="0" />
                                            <GradientStop Color="#FFEEEEEE" Offset="0.181818" />
                                            <GradientStop Color="#FFDEDEDE" Offset="0.515152" />
                                            <GradientStop Color="#FFEEEEEE" Offset="0.854546" />
                                            <GradientStop Color="#FFFFFFFF" Offset="1" />
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Grid HorizontalAlignment="Right" Width="46.001" Margin="0" VerticalAlignment="Center" Height="64">
                                    <Rectangle Margin="0,1.665,0,2.752" RadiusX="10" RadiusY="10" Visibility="Collapsed">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush StartPoint="0.5,1" EndPoint="0.5,0">
                                                <GradientStop Color="#FFA8A2A0" Offset="0.00561798" />
                                                <GradientStop Color="#FF000000" Offset="0.249975" />
                                                <GradientStop Color="#FFFFFFFF" Offset="0.250025" />
                                                <GradientStop Color="#FFD3D0CF" Offset="0.61442" />
                                                <GradientStop Color="#FFA8A2A0" Offset="1" />
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <Rectangle Margin="3,6" RadiusX="10" RadiusY="10" Visibility="Collapsed">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FFC20000" Offset="0.996" />
                                                <GradientStop Color="Red" />
                                                <GradientStop Color="#FF390000" Offset="0.342" />
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <Path Name="Arrow" Data="{StaticResource DownArrowGeometry}" HorizontalAlignment="Stretch" Margin="6.793,16.333,6.457,14.667" VerticalAlignment="Stretch" Height="Auto" Stretch="Fill" Width="Auto" Visibility="Collapsed">
                                        <Path.Fill>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="White" Offset="0" />
                                                <GradientStop Color="#FFCEC9C9" Offset="0.671" />
                                            </LinearGradientBrush>
                                        </Path.Fill>
                                    </Path>
                                    <Viewbox Margin="0.271,3.003,0,3.908" Stretch="Fill">
                                        <Grid Height="100.13" Width="96.474">
                                            <Path Stretch="Fill" Data="F1M636.82,459.395C610.223,459.395 588.583,438.411 588.583,412.619 588.583,386.827 610.223,365.844 636.82,365.844 663.419,365.844 685.057,386.827 685.057,412.619 685.057,438.411 663.419,459.395 636.82,459.395z" Height="Auto" Margin="0,6.579,0,0" VerticalAlignment="Stretch">
                                                <Path.Fill>
                                                    <LinearGradientBrush StartPoint="0.499999,-0.0454579" EndPoint="0.499999,1.09101">
                                                        <GradientStop Color="#FFC7C3C5" Offset="0" />
                                                        <GradientStop Color="#FF828080" Offset="0.509091" />
                                                        <GradientStop Color="#FF595959" Offset="1" />
                                                    </LinearGradientBrush>
                                                </Path.Fill>
                                            </Path>
                                            <Path Stretch="Fill" Data="F1M636.82,455.74C610.223,455.74 588.583,434.101 588.583,407.503 588.583,380.904 610.223,359.265 636.82,359.265 663.419,359.265 685.057,380.904 685.057,407.503 685.057,434.101 663.419,455.74 636.82,455.74z" Height="Auto" Margin="0,0,0,3.655" VerticalAlignment="Stretch">
                                                <Path.Fill>
                                                    <LinearGradientBrush StartPoint="0.499999,-0.0454575" EndPoint="0.499999,1.09101">
                                                        <GradientStop Color="#FFC7C3C5" Offset="0" />
                                                        <GradientStop Color="#FF828080" Offset="0.509091" />
                                                        <GradientStop Color="#FFA3A3A3" Offset="1" />
                                                    </LinearGradientBrush>
                                                </Path.Fill>
                                            </Path>
                                            <Path Stretch="Fill" Data="F1M680.672,407.503C680.672,431.722 661.037,451.354 636.82,451.354 612.604,451.354 592.968,431.722 592.968,407.503 592.968,383.283 612.604,363.651 636.82,363.651 661.037,363.651 680.672,383.283 680.672,407.503z" Height="Auto" Margin="4.385,4.386,4.385,8.041" VerticalAlignment="Stretch">
                                                <Path.Fill>
                                                    <LinearGradientBrush StartPoint="0.500001,1.06667" EndPoint="0.500001,-0.100114">
                                                        <GradientStop Color="#FFD73737" Offset="0" />
                                                        <GradientStop Color="#FFA60707" Offset="0.50303" />
                                                        <GradientStop Color="#FFD28383" Offset="0.854545" />
                                                        <GradientStop Color="#FFFFFFFF" Offset="1" />
                                                    </LinearGradientBrush>
                                                </Path.Fill>
                                            </Path>
                                            <Viewbox HorizontalAlignment="Stretch" Height="Auto" Margin="15.289,30.675,17.828,26.677" VerticalAlignment="Stretch" Width="Auto">
                                                <Canvas Width="63.3573" Height="42.7775">
                                                    <Path Width="61.5746" Height="42.7775" Canvas.Left="0.891724" Canvas.Top="0" Stretch="Fill" Data="F1M31.6073,42.7775C29.0383,42.7775,26.636,41.7175,24.8541,39.7943L3.56689,16.8862C0,13.0555 0,6.81976 3.56689,2.98706 5.35144,1.06183 7.75452,0 10.3157,0 12.8801,0 15.2785,1.06183 17.0728,2.98706L31.6809,18.7039 46.2832,2.98706C48.0779,1.06183 50.4758,0.00335693 53.0409,0.00335693 55.6021,0.00335693 58.0005,1.06183 59.7936,2.98706 63.3573,6.82227 63.3573,13.0555 59.7936,16.8882L38.4934,39.7996C36.7161,41.7202,34.3143,42.7775,31.7446,42.7775L31.6073,40.4623 31.6073,42.7775z">
                                                        <Path.Fill>
                                                            <LinearGradientBrush StartPoint="0.499998,-0.0454566" EndPoint="0.499997,1.09101">
                                                                <GradientStop Color="#FFE0DCDE" Offset="0" />
                                                                <GradientStop Color="#FF908E8F" Offset="0.660606" />
                                                                <GradientStop Color="#FF404040" Offset="1" />
                                                            </LinearGradientBrush>
                                                        </Path.Fill>
                                                    </Path>
                                                    <Path Width="56.8856" Height="38.1499" Canvas.Left="3.23544" Canvas.Top="2.31288" Stretch="Fill" Data="F1M58.0429,4.54425C55.2805,1.56909,50.7922,1.56909,48.0266,4.54425L31.6809,22.1407 15.33,4.54425C12.5637,1.56909 8.07153,1.56909 5.31305,4.54425 2.54291,7.52484 2.54291,12.3484 5.31305,15.327L26.6014,38.2377C27.9973,39.7448 29.8469,40.4837 31.6809,40.4623 33.5175,40.4819 35.3555,39.7448 36.7552,38.2403L58.0429,15.3289C60.8137,12.3516,60.8137,7.52484,58.0429,4.54425z">
                                                        <Path.Fill>
                                                            <LinearGradientBrush StartPoint="0.5,-0.0454529" EndPoint="0.5,1.09101">
                                                                <GradientStop Color="#FFFFFFFF" Offset="0" />
                                                                <GradientStop Color="#FFBBBBBB" Offset="0.660606" />
                                                                <GradientStop Color="#FF777777" Offset="1" />
                                                            </LinearGradientBrush>
                                                        </Path.Fill>
                                                    </Path>
                                                </Canvas>
                                            </Viewbox>
                                        </Grid>
                                    </Viewbox>
                                </Grid>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DigiGrdComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="Control.HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="Control.VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="Control.Padding" Value="0,0,0,0" />
            <Setter Property="Control.Background" Value="#00FFFFFF" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border Name="Bd" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="True">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ComboBoxItem.IsHighlighted" Value="True">
                                <Setter TargetName="Bd" Property="Border.Background" Value="#FFFF0000" />
                                <Setter Property="Control.Foreground" Value="#FFFF0000" />
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DigiBtnAddMore" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome" SnapsToDevicePixels="True">
                            <Grid HorizontalAlignment="Center" Margin="2" VerticalAlignment="Center">
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition Height="20.732" />
                                </Grid.RowDefinitions>
                                <!--<Image Height="Auto" Source="/PhotoSW;component/images/AddMore.png" Stretch="Uniform" Width="Auto" Margin="0" />-->
                                <ContentPresenter RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Height="Auto" Margin="0" VerticalAlignment="Center" Grid.Row="1" HorizontalAlignment="Center" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.FontWeight" Value="Bold" />
            <Setter Property="Control.FontSize" Value="13.333" />
        </Style>
        <Style x:Key="DigiBtnStyleSelectPrinter" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome" SnapsToDevicePixels="True">
                            <Grid HorizontalAlignment="Stretch" Margin="2" VerticalAlignment="Stretch">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" MinHeight="12.928" />
                                </Grid.RowDefinitions>
                                <Image Height="Auto" Source="/PhotoSW;component/images/SelectPrinter.png" Stretch="Fill" Width="Auto" Margin="0" Grid.RowSpan="1" />
                                <ContentPresenter Margin="1,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="Center" Grid.Row="1" HorizontalAlignment="Center" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.FontWeight" Value="Bold" />
            <Setter Property="Control.FontSize" Value="13.333" />
        </Style>
        <DataTemplate x:Key="DigiFormComboDataTemplate">
            <Border Width="640" BorderThickness="0" BorderBrush="#FF858585" Height="50">
                <Grid Height="Auto" Width="640" Margin="0" HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" MinWidth="24.4" />
                    </Grid.ColumnDefinitions>
                    <TextBlock TextWrapping="Wrap" Margin="0,0,41,0">
            <Run Text="{Binding DG_Store_Name}" />
                    </TextBlock>
                    <CheckBox Content="CheckBox" Style="{DynamicResource DigiComboCheckBoxStyle}" Grid.ColumnSpan="2" Visibility="Collapsed" Tag="{Binding DG_Store_pkey}" />
                </Grid>
            </Border>
        </DataTemplate>
        <Style x:Key="DigiComboCheckBoxStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="Control.Background" Value="#FF448DCA" />
            <Setter Property="Control.Foreground" Value="#FF000000" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Left" />
            <Setter Property="Control.VerticalContentAlignment" Value="Top" />
            <Setter Property="Control.Padding" Value="4,1,0,0" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFA3AEB9" Offset="0" />
                        <GradientStop Color="#FF8399A9" Offset="0.375" />
                        <GradientStop Color="#FF718597" Offset="0.375" />
                        <GradientStop Color="#FF617584" Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="0" />
                            </Grid.ColumnDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckIcon">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                    <VisualState x:Name="Indeterminate" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused" />
                                    <VisualState x:Name="Unfocused" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="Valid" />
                                    <VisualState x:Name="InvalidUnfocused" />
                                    <VisualState x:Name="InvalidFocused" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Background="#00000000">
                                <Path Name="CheckIcon" Stretch="Fill" Fill="#FF9C3131" Data="F1M966.002,669.046C968.721,666.325 1010.77,625.944 1010.77,625.944 1013.43,623.291 1012.63,620.605 1011.14,619.114L1001.18,609.161C999.691,607.664 997.003,606.875 994.354,609.518 994.354,609.518 968.921,634.957 966.191,637.679 963.472,634.957 953.863,625.336 953.863,625.336 951.209,622.681 948.524,623.482 947.036,624.968L937.075,634.929C935.583,636.424 934.787,639.102 937.442,641.76 937.442,641.76 947.054,651.372 949.775,654.096" HorizontalAlignment="Right" Height="30" Margin="0" VerticalAlignment="Center" Width="30" Opacity="0" />
                            </Grid>
                            <ContentPresenter Name="contentPresenter" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Content="{TemplateBinding ContentControl.Content}" Grid.Column="1" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="PhotoSWComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="Control.HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="Control.VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="Control.Padding" Value="3,0,3,0" />
            <Setter Property="Control.Background" Value="#00FFFFFF" /> <!--Value="#00FFFFFF"-->
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border Name="Bd" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True" CornerRadius="0" BorderThickness="0,0,0,1" BorderBrush="#FFA1A1A1">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected" />
                                    <VisualState x:Name="Selected" />
                                    <VisualState x:Name="SelectedUnfocused" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ComboBoxItem.IsHighlighted" Value="True">
                                <Setter TargetName="Bd" Property="Border.Background" Value="#FFCC0000" />
                                <Setter Property="Control.Foreground" Value="#FFFFFFFF" /> <!--Value="#FF8B0000"-->
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DigiFormComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="Control.HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="Control.VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="Control.Padding" Value="3,0,3,0" />
            <Setter Property="Control.Background" Value="#00FFFFFF" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border Name="Bd" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True" CornerRadius="0" BorderThickness="0,0,0,1" BorderBrush="#FFA1A1A1">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected" />
                                    <VisualState x:Name="Selected" />
                                    <VisualState x:Name="SelectedUnfocused" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ComboBoxItem.IsHighlighted" Value="True">
                                <Setter TargetName="Bd" Property="Border.Background" Value="#FFDCDCDC" />
                                <Setter Property="Control.Foreground" Value="#FF8B0000" />
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ItemsPanelTemplate x:Key="DigiFormItemsPanelTemplate">
            <StackPanel IsItemsHost="True" />
        </ItemsPanelTemplate>
        <ItemsPanelTemplate x:Key="ItemsPanelTemplateGrdOrder">
            <VirtualizingStackPanel IsItemsHost="True" Orientation="Horizontal" />
        </ItemsPanelTemplate>
        <Style x:Key="ButtonStyleDiscount" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <sc:ButtonChrome Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}" RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" RenderPressed="{TemplateBinding ButtonBase.IsPressed}" RenderDefaulted="{TemplateBinding Button.IsDefaulted}" SnapsToDevicePixels="True">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                        </sc:ButtonChrome>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsKeyboardFocused" Value="True">
                                <Setter TargetName="Chrome" Property="Microsoft_Windows_Themes:ButtonChrome.RenderDefaulted" Value="True" />
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                                <Setter TargetName="Chrome" Property="Microsoft_Windows_Themes:ButtonChrome.RenderPressed" Value="True" />
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="Control.Foreground" Value="#FFADADAD" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DigiButtonStyleDiscount" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="True">
                            <Grid Margin="0">
                                <Image HorizontalAlignment="Center" Height="Auto" Source="/PhotoSW;component/images/Discount.png" Stretch="Uniform" VerticalAlignment="Center" Margin="1.3,0,0,0" />
                                <Viewbox HorizontalAlignment="Center" Height="Auto" Margin="0" VerticalAlignment="Center" Width="Auto" Visibility="Collapsed">
                                    <Canvas Width="162.527" Height="153.436">
                                        <Path Width="162.527" Height="56.2363" Canvas.Left="0" Canvas.Top="97.1992" Stretch="Fill" Data="F1M162.527,125.318C162.527,140.847 126.143,153.436 81.2629,153.436 36.3841,153.436 0,140.847 0,125.318 0,109.788 36.3841,97.1992 81.2629,97.1992 126.143,97.1992 162.527,109.788 162.527,125.318z">
                                            <Path.Fill>
                                                <RadialGradientBrush RadiusX="0.499998" RadiusY="0.5" Center="0.5,0.507754" GradientOrigin="0.5,0.507754">
                                                    <RadialGradientBrush.RelativeTransform>
                                                        <TransformGroup />
                                                    </RadialGradientBrush.RelativeTransform>
                                                    <GradientStop Color="#FFD54D4D" Offset="0" />
                                                    <GradientStop Color="#A8EAA6A6" Offset="0.412088" />
                                                    <GradientStop Offset="0.895604" />
                                                </RadialGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Path Width="120.189" Height="120.188" Canvas.Left="18.2695" Canvas.Top="2.76691" Stretch="Fill" Data="F1M138.458,99.47C138.458,112.439,127.944,122.955,114.973,122.955L41.7545,122.955C28.7852,122.955,18.2695,112.439,18.2695,99.47L18.2695,26.2519C18.2695,13.2819,28.7852,2.76691,41.7545,2.76691L114.973,2.76691C127.944,2.76691,138.458,13.2819,138.458,26.2519L138.458,99.47z">
                                            <Path.Fill>
                                                <RadialGradientBrush RadiusX="0.687384" RadiusY="0.687388" Center="0.49623,1.12041" GradientOrigin="0.49623,1.12041">
                                                    <RadialGradientBrush.RelativeTransform>
                                                        <TransformGroup />
                                                    </RadialGradientBrush.RelativeTransform>
                                                    <GradientStop Color="#FFFFFFFF" Offset="0" />
                                                    <GradientStop Color="#FFF0C8C8" Offset="0.164835" />
                                                    <GradientStop Color="#FFE59393" Offset="0.263627" />
                                                    <GradientStop Color="#FFDB5F5F" Offset="0.395349" />
                                                    <GradientStop Color="#FFA03434" Offset="0.547569" />
                                                    <GradientStop Color="#FF660A0A" Offset="0.674419" />
                                                    <GradientStop Color="#FF0D0101" Offset="1" />
                                                </RadialGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Path Width="124.33" Height="124.334" Canvas.Left="16.1979" Canvas.Top="0.692688" Stretch="Fill" Data="F1M41.7545,125.027C27.64,125.023,16.1979,113.583,16.1979,99.47L16.1979,26.2525C16.1979,12.1367,27.64,0.695374,41.7545,0.692688L114.973,0.692688C129.085,0.695374,140.527,12.1367,140.528,26.2525L140.528,99.47C140.527,113.583,129.085,125.023,114.973,125.027L41.7545,125.027z M20.3411,26.2525L20.3411,99.47C20.36,111.296,29.9284,120.861,41.7545,120.884L114.973,120.884C126.798,120.861,136.366,111.296,136.387,99.47L136.387,26.2525C136.366,14.4271,126.798,4.8587,114.973,4.83585L41.7545,4.83585C29.9284,4.8587,20.36,14.4271,20.3411,26.2525z">
                                            <Path.Fill>
                                                <LinearGradientBrush StartPoint="0,0.500001" EndPoint="1,0.500001">
                                                    <GradientStop Color="#FFCCCCCC" Offset="5e-005" />
                                                    <GradientStop Color="#FFE5E5E5" Offset="0.0569518" />
                                                    <GradientStop Color="#FFFFFFFF" Offset="0.106741" />
                                                    <GradientStop Color="#FFC2C2C2" Offset="0.189971" />
                                                    <GradientStop Color="#FF858585" Offset="0.247191" />
                                                    <GradientStop Color="#FFA8A8A8" Offset="0.301124" />
                                                    <GradientStop Color="#FFCCCCCC" Offset="0.314607" />
                                                    <GradientStop Color="#FF7F7F7F" Offset="0.511028" />
                                                    <GradientStop Color="#FF323232" Offset="0.646067" />
                                                    <GradientStop Color="#FF4B4B4B" Offset="0.702663" />
                                                    <GradientStop Color="#FF656565" Offset="0.741573" />
                                                    <GradientStop Color="#FF323232" Offset="0.752422" />
                                                    <GradientStop Color="#FF000000" Offset="0.780899" />
                                                    <GradientStop Color="#FF7F7F7F" Offset="0.808795" />
                                                    <GradientStop Color="#FFFFFFFF" Offset="0.882022" />
                                                    <GradientStop Color="#FFD1D1D1" Offset="0.914568" />
                                                    <GradientStop Color="#FFA3A3A3" Offset="1" />
                                                </LinearGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Path Width="125.713" Height="125.716" Canvas.Left="15.5065" Canvas.Top="0" Stretch="Fill" Data="F1M41.7545,125.716L41.7545,125.029 41.7545,124.336 114.971,124.336C128.702,124.333,139.836,113.201,139.84,99.47L139.84,26.2532C139.836,12.5163,128.702,1.38531,114.971,1.38281L41.7545,1.38281C28.0188,1.38531,16.8887,12.5163,16.8887,26.2532L16.8887,99.47C16.8887,113.201,28.0188,124.333,41.7545,124.336L41.7545,125.029 41.7513,125.716C27.2552,125.713,15.5065,113.963,15.5065,99.47L15.5065,26.2532C15.5065,11.7525,27.2552,0.00585938,41.7545,0L114.971,0.00250244C129.465,0.00585938,141.216,11.7525,141.22,26.2532L141.22,99.47C141.216,113.963,129.465,125.713,114.971,125.716L41.7545,125.716z">
                                            <Path.Fill>
                                                <LinearGradientBrush StartPoint="0.086563,0.0865976" EndPoint="0.937587,0.937604">
                                                    <GradientStop Color="#FF000000" Offset="0" />
                                                    <GradientStop Color="#FF212121" Offset="0.043956" />
                                                    <GradientStop Color="#FF434343" Offset="0.0824176" />
                                                    <GradientStop Color="#FF898989" Offset="0.129304" />
                                                    <GradientStop Color="#FFCFCFCF" Offset="0.17033" />
                                                    <GradientStop Color="#FFA0A0A0" Offset="0.263736" />
                                                    <GradientStop Color="#FF727272" Offset="0.516483" />
                                                    <GradientStop Color="#FFA0A0A0" Offset="0.770248" />
                                                    <GradientStop Color="#FFCFCFCF" Offset="0.835165" />
                                                    <GradientStop Color="#FF898989" Offset="0.882051" />
                                                    <GradientStop Color="#FF434343" Offset="0.923077" />
                                                    <GradientStop Color="#FF212121" Offset="0.964103" />
                                                    <GradientStop Color="#FF000000" Offset="1" />
                                                </LinearGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Path Width="117.423" Height="117.43" Canvas.Left="19.6511" Canvas.Top="4.14322" Stretch="Fill" Data="F1M114.971,4.14322L41.7545,4.14322C29.5468,4.16919,19.6705,14.0443,19.6511,26.2507L20.3411,26.2532 19.6511,26.2532 19.6511,99.47C19.6705,111.676,29.5468,121.549,41.7513,121.574L114.971,121.574C127.178,121.549,137.055,111.676,137.074,99.47L137.074,26.2532C137.055,14.0443,127.178,4.16919,114.971,4.14322z M135.695,99.47C135.676,110.913,126.415,120.169,114.971,120.193L41.7545,120.193C30.3073,120.169,21.0481,110.913,21.0273,99.47L21.0273,26.2532C21.0481,14.8067,30.3073,5.54678,41.7545,5.52466L114.971,5.52734C126.415,5.54678,135.676,14.8067,135.695,26.2532L135.695,99.47z">
                                            <Path.Fill>
                                                <LinearGradientBrush StartPoint="0,0.500001" EndPoint="1,0.500001">
                                                    <GradientStop Color="#FF000000" Offset="0" />
                                                    <GradientStop Color="#FF212121" Offset="0.043956" />
                                                    <GradientStop Color="#FF434343" Offset="0.0824176" />
                                                    <GradientStop Color="#FF898989" Offset="0.129304" />
                                                    <GradientStop Color="#FFCFCFCF" Offset="0.17033" />
                                                    <GradientStop Color="#FFE7E7E7" Offset="0.263736" />
                                                    <GradientStop Color="#FFFFFFFF" Offset="0.516483" />
                                                    <GradientStop Color="#FFE7E7E7" Offset="0.770248" />
                                                    <GradientStop Color="#FFCFCFCF" Offset="0.835165" />
                                                    <GradientStop Color="#FF898989" Offset="0.882051" />
                                                    <GradientStop Color="#FF434343" Offset="0.923077" />
                                                    <GradientStop Color="#FF212121" Offset="0.964103" />
                                                    <GradientStop Color="#FF000000" Offset="1" />
                                                </LinearGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Path Width="105.729" Height="43.7493" Canvas.Left="24.9596" Canvas.Top="8.88013" Stretch="Fill" Data="F1M130.688,36.3594C130.688,45.3457,123.404,52.6295,114.416,52.6295L41.2297,52.6295C32.2441,52.6295,24.9596,45.3457,24.9596,36.3594L24.9596,25.1504C24.9596,16.1653,32.2441,8.88013,41.2297,8.88013L114.416,8.88013C123.404,8.88013,130.688,16.1653,130.688,25.1504L130.688,36.3594z">
                                            <Path.Fill>
                                                <LinearGradientBrush StartPoint="0.499997,-0.476375" EndPoint="0.499997,1.26974">
                                                    <GradientStop Color="#FFE48787" Offset="0" />
                                                    <GradientStop Color="#FFDB5F5F" Offset="0.263736" />
                                                    <GradientStop Color="#FF7D5610" Offset="0.554945" />
                                                    <GradientStop Color="#FF512C09" Offset="0.646782" />
                                                    <GradientStop Color="#FF250303" Offset="0.769231" />
                                                    <GradientStop Color="#FF120101" Offset="0.863832" />
                                                    <GradientStop Color="#FF000000" Offset="0.950549" />
                                                </LinearGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Viewbox Width="78.8761" Height="78.009" Canvas.Left="41.0101" Canvas.Top="21.6975">
                                            <Canvas Width="78.8761" Height="78.009">
                                                <Path Width="75.804" Height="75.804" Canvas.Left="0.589859" Canvas.Top="0.590686" Stretch="Fill" Fill="#FF4C0B05" Data="M20.0869,2.34778L38.4909,20.7521 56.8949,2.34778C58.918,0.325073,61.9029,0,63.5309,1.62668L75.3577,13.4539C76.9837,15.0805,76.6604,18.0656,74.6375,20.0885L56.2332,38.4926 74.6375,56.8968C76.6604,58.9196,76.9837,61.9048,75.3577,63.5316L63.5309,75.3586C61.9029,76.9853,58.918,76.6604,56.8969,74.6373L38.4909,56.2332 20.0869,74.6373C18.0638,76.6604,15.0786,76.9853,13.4529,75.3586L1.62589,63.5316C1.52588E-05,61.9048,0.323303,58.9196,2.34616,56.8979L20.7502,38.4926 2.34616,20.0885C0.323303,18.0656,1.52588E-05,15.0805,1.62589,13.4539L13.4529,1.62668C15.0786,0.000732422,18.0638,0.325073,20.0869,2.34778z" />
                                                <Path Width="75.8041" Height="75.8037" Canvas.Left="2.48106" Canvas.Top="1.61495" Stretch="Fill" Fill="#FFFFFFFF" Data="M21.9792,3.37173L40.3832,21.7758 58.7875,3.37173C60.8103,1.34866,63.7954,1.02466,65.4213,2.65134L77.2483,14.4785C78.8761,16.1042,78.551,19.0894,76.5279,21.1122L58.1239,39.5165 76.5279,57.9215C78.551,59.9443,78.8761,62.9285,77.2483,64.5551L65.4213,76.3824C63.7954,78.009,60.8103,77.685,58.7875,75.6612L40.3832,57.2569 21.9792,75.6612C19.9563,77.684,16.9712,78.009,15.3436,76.3824L3.51639,64.5551C1.89041,62.9285,2.21573,59.9443,4.23843,57.9215L22.6427,39.5165 4.23843,21.1122C2.21573,19.0903,1.89041,16.1052,3.51639,14.4785L15.3452,2.65134C16.9712,1.02466,19.9563,1.34866,21.9792,3.37173z" />
                                            </Canvas>
                                        </Viewbox>
                                    </Canvas>
                                </Viewbox>
                                <Viewbox HorizontalAlignment="Center" Height="Auto" Margin="10,0" Stretch="Fill" VerticalAlignment="Stretch" Width="43.812" Visibility="Collapsed">
                                    <Grid Height="287.191" Width="287.18">
                                        <Path Stretch="Fill" Data="F1M733.467,568.95C733.467,586.105,719.569,600,702.424,600L477.337,600C460.188,600,446.286,586.105,446.286,568.95L446.286,343.851C446.286,326.714,460.188,312.809,477.337,312.809L702.424,312.809C719.569,312.809,733.467,326.714,733.467,343.851L733.467,568.95z" HorizontalAlignment="Stretch" Height="Auto" Margin="0" VerticalAlignment="Stretch" Width="Auto">
                                            <Path.Fill>
                                                <LinearGradientBrush StartPoint="0.499999,1" EndPoint="0.499999,-1.06262e-007">
                                                    <GradientStop Color="#FFE2E2E2" Offset="0" />
                                                    <GradientStop Color="#FFDDDDDD" Offset="0.494506" />
                                                    <GradientStop Color="#FFF3F3F3" Offset="1" />
                                                </LinearGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Path Stretch="Fill" Data="F1M702.416,325.2L477.337,325.2C467.046,325.2,458.673,333.572,458.673,343.851L458.673,454.785C499.352,461.573 543.593,465.306 589.879,465.306 636.16,465.306 680.405,461.573 721.08,454.785L721.08,343.851C721.08,333.572,712.711,325.2,702.416,325.2z" HorizontalAlignment="Stretch" Height="Auto" Margin="12.387,12.391,12.386,134.694" VerticalAlignment="Stretch" Width="Auto">
                                            <Path.Fill>
                                                <LinearGradientBrush StartPoint="0.499999,0" EndPoint="0.499999,1">
                                                    <GradientStop Color="#FFFFFFFF" Offset="0" />
                                                    <GradientStop Color="#FFD5D5D5" Offset="1" />
                                                </LinearGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Path Stretch="Fill" Data="F1M589.879,465.306C543.593,465.306,499.352,461.573,458.673,454.785L458.673,568.95C458.673,579.239,467.046,587.61,477.337,587.61L702.416,587.61C712.711,587.61,721.08,579.239,721.08,568.95L721.08,454.785C680.405,461.573,636.16,465.306,589.879,465.306z" HorizontalAlignment="Stretch" Height="Auto" Margin="12.387,141.976,12.386,12.39" VerticalAlignment="Stretch" Width="Auto">
                                            <Path.Fill>
                                                <LinearGradientBrush StartPoint="0.499999,1" EndPoint="0.499999,-4.59517e-007">
                                                    <GradientStop Color="#FFFFFFFF" Offset="0" />
                                                    <GradientStop Color="#FFCBCBCB" Offset="1" />
                                                </LinearGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Viewbox Width="Auto" Height="Auto" HorizontalAlignment="Stretch" Margin="54.706,60.826,62.302,58.064" Visibility="Collapsed">
                                            <Canvas Width="78.8761" Height="78.009">
                                                <TextBlock Height="75" TextWrapping="Wrap" Text="%" Canvas.Top="0" Width="75" TextBlock.FontSize="64" TextBlock.FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center" TextBlock.TextAlignment="Center" TextBlock.Foreground="#FF6A0303" />
                                            </Canvas>
                                        </Viewbox>
                                    </Grid>
                                </Viewbox>
                                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                                <Rectangle Fill="#FFF4F4F5" Margin="-40,0,-39.667,0" Stroke="#FF000000" Opacity="0" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DigiButtonStyleExit" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome" SnapsToDevicePixels="True">
                            <Grid HorizontalAlignment="Stretch" Margin="2" VerticalAlignment="Stretch">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" MinHeight="12.928" />
                                </Grid.RowDefinitions>
                                <Image Height="Auto" Source="/PhotoSW;component/images/ExitPhoto_icon.png" Stretch="Uniform" Width="Auto" Margin="0" Grid.RowSpan="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                                <ContentPresenter Margin="1,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="Center" Grid.Row="1" HorizontalAlignment="Center" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.FontWeight" Value="Bold" />
            <Setter Property="Control.FontSize" Value="13.333" />
        </Style>
        
        <Style x:Key="DigiButtonStyleExitActivate" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome" SnapsToDevicePixels="True">
                            <Grid HorizontalAlignment="Stretch" Margin="2" VerticalAlignment="Stretch">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" MinHeight="12.928" />
                                </Grid.RowDefinitions>
                                <Image Height="Auto" Source="/PhotoSW;component/images/ExitPhoto_icon_act.png" Stretch="Uniform" Width="Auto" Margin="0" Grid.RowSpan="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                                <ContentPresenter Margin="1,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="Center" Grid.Row="1" HorizontalAlignment="Center" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.FontWeight" Value="Bold" />
            <Setter Property="Control.FontSize" Value="13.333" />
        </Style>
        <Style x:Key="DigiButtonStyleThumbnail" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome" SnapsToDevicePixels="True">
                            <Grid HorizontalAlignment="Stretch" Margin="2" VerticalAlignment="Stretch">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" MinHeight="12.928" />
                                </Grid.RowDefinitions>
                                <Image Height="Auto" Source="/PhotoSW;component/images/imagesStrips.png" Stretch="Uniform" Width="Auto" Margin="0" Grid.RowSpan="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                                <ContentPresenter Margin="1,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="Center" Grid.Row="1" HorizontalAlignment="Center" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.FontWeight" Value="Bold" />
            <Setter Property="Control.FontSize" Value="13.333" />
        </Style>
        <Style x:Key="BaseButtonStyle" TargetType="{x:Type ButtonBase}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DigiRepeatButtonStyleAlpha" BasedOn="{StaticResource BaseButtonStyle}" TargetType="{x:Type RepeatButton}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
        </Style>
        <SolidColorBrush x:Key="CheckBoxStroke" Color="#8E8F8F" />
        <Style x:Key="CheckRadioFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DigiRadioButtonStyle" TargetType="{x:Type RadioButton}">
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.Background" Value="#FFF4F4F4" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource CheckBoxStroke}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <BulletDecorator Background="#00FFFFFF">
                            <BulletDecorator.Bullet>
                                <sc:BulletChrome BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}" IsChecked="{TemplateBinding ToggleButton.IsChecked}" IsRound="True" RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" RenderPressed="{TemplateBinding ButtonBase.IsPressed}" Margin="0,0,-79,-79" />
                            </BulletDecorator.Bullet>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ContentControl.HasContent" Value="True">
                                <Setter Value="{StaticResource CheckRadioFocusVisual}" Property="FrameworkElement.FocusVisualStyle" />
                                <Setter Property="Control.Padding" Value="4,0,0,0" />
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ValidationToolTipTemplate">
            <Grid Name="Root" Margin="5,0" Opacity="0" RenderTransformOrigin="0,0">
                <Grid.RenderTransform>
                    <TranslateTransform x:Name="xform" X="-25" />
                </Grid.RenderTransform>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="OpenStates">
                        <VisualStateGroup.Transitions>
                            <VisualTransition GeneratedDuration="0" />
                            <VisualTransition GeneratedDuration="0:0:0.2" To="Open">
                                <Storyboard>
                                    <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="xform">
                                        <DoubleAnimation.EasingFunction>
                                            <BackEase Amplitude=".3" EasingMode="EaseOut" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root" />
                                </Storyboard>
                            </VisualTransition>
                        </VisualStateGroup.Transitions>
                        <VisualState x:Name="Closed">
                            <Storyboard>
                                <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root" />
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Open">
                            <Storyboard>
                                <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="xform" />
                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root" />
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Border Background="#052A2E31" CornerRadius="5" Margin="4,4,-4,-4" />
                <Border Background="#152A2E31" CornerRadius="4" Margin="3,3,-3,-3" />
                <Border Background="#252A2E31" CornerRadius="3" Margin="2,2,-2,-2" />
                <Border Background="#352A2E31" CornerRadius="2" Margin="1,1,-1,-1" />
                <Border Background="#FFDC000C" CornerRadius="2" />
                <Border CornerRadius="2">
                    <TextBlock TextBlock.Foreground="#FFFFFFFF" MaxWidth="250" Margin="8,4,8,4" TextWrapping="Wrap" UseLayoutRounding="False" Text="{Binding (Validation.Errors)[0].ErrorContent}" />
                </Border>
            </Grid>
        </ControlTemplate>
        <Style x:Key="DigiRadioButtonStyleAlpha" TargetType="{x:Type RadioButton}">
            <Setter Property="Control.Background" Value="#FF448DCA" />
            <Setter Property="Control.Foreground" Value="#FF000000" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Left" />
            <Setter Property="Control.VerticalContentAlignment" Value="Top" />
            <Setter Property="Control.Padding" Value="4,1,0,0" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFA3AEB9" Offset="0" />
                        <GradientStop Color="#FF8399A9" Offset="0.375" />
                        <GradientStop Color="#FF718597" Offset="0.375" />
                        <GradientStop Color="#FF617584" Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid Width="Auto" Height="Auto">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="0" />
                            </Grid.ColumnDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckIcon">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused" />
                                    <VisualState x:Name="Unfocused" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="Valid" />
                                    <VisualState x:Name="InvalidUnfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="InvalidFocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                                <DiscreteObjectKeyFrame KeyTime="0" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <Path Name="CheckIcon" Stretch="Fill" Fill="#FF9C3131" Data="F1M966.002,669.046C968.721,666.325 1010.77,625.944 1010.77,625.944 1013.43,623.291 1012.63,620.605 1011.14,619.114L1001.18,609.161C999.691,607.664 997.003,606.875 994.354,609.518 994.354,609.518 968.921,634.957 966.191,637.679 963.472,634.957 953.863,625.336 953.863,625.336 951.209,622.681 948.524,623.482 947.036,624.968L937.075,634.929C935.583,636.424 934.787,639.102 937.442,641.76 937.442,641.76 947.054,651.372 949.775,654.096" HorizontalAlignment="Center" Height="61.263" Margin="0" VerticalAlignment="Center" Width="76.818" Opacity="0" />
                                <Rectangle Grid.ColumnSpan="2" Fill="#FF9C3131" Margin="0" Opacity="0" />
                                <Grid Name="ValidationErrorElement" Visibility="Collapsed" ToolTipService.PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToolTipService.ToolTip>
                                        <ToolTip Name="validationTooltip" Placement="Right" Template="{StaticResource ValidationToolTipTemplate}" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                            <ToolTip.Triggers>
                                                <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                                                <DiscreteObjectKeyFrame KeyTime="0" />
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </ToolTip.Triggers>
                                        </ToolTip>
                                    </ToolTipService.ToolTip>
                                    <Ellipse Height="14" Stroke="#FFDB000C" StrokeThickness="1" Width="14" />
                                    <Ellipse Fill="#FFDB000C" HorizontalAlignment="Right" Height="4" Margin="0,-2,-1,0" VerticalAlignment="Top" Width="4" />
                                    <Ellipse Fill="#00FFFFFF" HorizontalAlignment="Right" Height="10" Margin="0,-5,-4,0" VerticalAlignment="Top" Width="10" />
                                </Grid>
                            </Grid>
                            <ContentPresenter Name="contentPresenter" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Content="{TemplateBinding ContentControl.Content}" Grid.Column="0" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="0" VerticalAlignment="Stretch" Visibility="Visible" Height="Auto" Width="76.818" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DigiRadioButtonStyleAlphaSmallSize" TargetType="{x:Type RadioButton}">
            <Setter Property="Control.Background" Value="#FF448DCA" />
            <Setter Property="Control.Foreground" Value="#FF000000" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Left" />
            <Setter Property="Control.VerticalContentAlignment" Value="Top" />
            <Setter Property="Control.Padding" Value="4,1,0,0" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFA3AEB9" Offset="0" />
                        <GradientStop Color="#FF8399A9" Offset="0.375" />
                        <GradientStop Color="#FF718597" Offset="0.375" />
                        <GradientStop Color="#FF617584" Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid Width="Auto" Height="Auto">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="0" />
                            </Grid.ColumnDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckIcon">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused" />
                                    <VisualState x:Name="Unfocused" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="Valid" />
                                    <VisualState x:Name="InvalidUnfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="InvalidFocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                                <DiscreteObjectKeyFrame KeyTime="0" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <Path Name="CheckIcon" Stretch="Fill" Fill="#FF9C3131" Data="F1M966.002,669.046C968.721,666.325 1010.77,625.944 1010.77,625.944 1013.43,623.291 1012.63,620.605 1011.14,619.114L1001.18,609.161C999.691,607.664 997.003,606.875 994.354,609.518 994.354,609.518 968.921,634.957 966.191,637.679 963.472,634.957 953.863,625.336 953.863,625.336 951.209,622.681 948.524,623.482 947.036,624.968L937.075,634.929C935.583,636.424 934.787,639.102 937.442,641.76 937.442,641.76 947.054,651.372 949.775,654.096" HorizontalAlignment="Center" Height="35" Margin="0" VerticalAlignment="Center" Width="40" Opacity="0" />
                                <Rectangle Grid.ColumnSpan="2" Fill="#FF9C3131" Margin="0" Opacity="0" />
                                <Grid Name="ValidationErrorElement" Visibility="Collapsed" ToolTipService.PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToolTipService.ToolTip>
                                        <ToolTip Name="validationTooltip" Placement="Right" Template="{StaticResource ValidationToolTipTemplate}" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                            <ToolTip.Triggers>
                                                <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                                                <DiscreteObjectKeyFrame KeyTime="0" />
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </ToolTip.Triggers>
                                        </ToolTip>
                                    </ToolTipService.ToolTip>
                                    <Ellipse Height="14" Stroke="#FFDB000C" StrokeThickness="1" Width="14" />
                                    <Ellipse Fill="#FFDB000C" HorizontalAlignment="Right" Height="4" Margin="0,-2,-1,0" VerticalAlignment="Top" Width="4" />
                                    <Ellipse Fill="#00FFFFFF" HorizontalAlignment="Right" Height="10" Margin="0,-5,-4,0" VerticalAlignment="Top" Width="10" />
                                </Grid>
                            </Grid>
                            <ContentPresenter Name="contentPresenter" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Content="{TemplateBinding ContentControl.Content}" Grid.Column="0" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="0" VerticalAlignment="Stretch" Visibility="Visible" Height="Auto" Width="76.818" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ItemsPanelTemplate x:Key="DigiItemsPanelTemplateProduct">
            <WrapPanel IsItemsHost="True" />
        </ItemsPanelTemplate>
        <Style x:Key="DigiButtonStyleBrowseProduct" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome" SnapsToDevicePixels="True">
                            <Grid HorizontalAlignment="Stretch" Height="Auto" Margin="0" VerticalAlignment="Stretch" Width="Auto">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="76" />
                                    <RowDefinition Height="Auto" MinHeight="15.96" />
                                </Grid.RowDefinitions>
                                <Image Margin="0" Grid.RowSpan="1" Source="/PhotoSW;component/images/BrowseProduct.png" Stretch="Fill" />
                                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="Center" Grid.Row="1" />
                                <Rectangle Fill="#FFF4F4F5" Margin="0" Grid.RowSpan="2" Stroke="#FF000000" Opacity="0" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.FontWeight" Value="Bold" />
        </Style>
        <Style x:Key="DataGridCellStyleimg" TargetType="{x:Type DataGridCell}">
            <Setter Property="Control.Background" Value="#00FFFFFF" />
            <Setter Property="Control.BorderBrush" Value="#00FFFFFF" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Grid Background="{TemplateBinding Control.Background}" Height="Auto" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="0" />
                            </Grid.ColumnDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected" />
                                    <VisualState x:Name="Selected" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Unfocused" />
                                    <VisualState x:Name="Focused" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CurrentStates">
                                    <VisualState x:Name="Regular" />
                                    <VisualState x:Name="Current" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="InteractionStates">
                                    <VisualState x:Name="Display" />
                                    <VisualState x:Name="Editing" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="DataGridCell.IsSelected" Value="True">
                    <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                    <Setter Property="Control.BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                </Trigger>
                <Trigger Property="UIElement.IsKeyboardFocusWithin" Value="True">
                    <Setter Property="Control.BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DigiListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Control.Background" Value="#00FFFFFF" />
            <Setter Property="Control.HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="Control.VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="Control.Padding" Value="2,0,0,0" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border Name="Bd" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="True">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ListBoxItem.IsSelected" Value="True">
                                <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                                <Setter Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Control.Foreground" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="ListBoxItem.IsSelected" Value="True" />
                                    <Condition Property="Selector.IsSelectionActive" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Border.Background" />
                                <Setter Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Control.Foreground" />
                            </MultiTrigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ItemsPanelTemplate x:Key="DigiSelectedImageItemsPanelTemplate">
            <VirtualizingStackPanel IsItemsHost="True" Orientation="Horizontal" />
        </ItemsPanelTemplate>
        <Style x:Key="ButtonStylebrightnessminus" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="True">
                            <Grid Height="Auto" Margin="0" VerticalAlignment="Stretch" Width="Auto">
                                <Ellipse Margin="0" Height="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="#FFFFFFFF" StrokeThickness="5" Stroke="{x:Null}" />
                                <Ellipse Margin="2" Stroke="#FF000000" Height="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" StrokeThickness="5" Fill="{x:Null}" />
                                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Height="45.844" Content="" />
                                <Rectangle Fill="#60FFFFFF" Margin="0,0,-2,0" Stroke="#FFFF0000" Opacity="0" />
                                <Grid HorizontalAlignment="Center" Margin="0" Width="30" VerticalAlignment="Center">
                                    <Rectangle Fill="#FF000000" HorizontalAlignment="Center" Margin="0" Width="4" Height="30" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Center" Stroke="{x:Null}">
                                        <Rectangle.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform />
                                                <SkewTransform />
                                                <RotateTransform Angle="90" />
                                                <TranslateTransform />
                                            </TransformGroup>
                                        </Rectangle.RenderTransform>
                                    </Rectangle>
                                </Grid>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ItemsPanelTemplate x:Key="DigiItemsPanelTemplate">
            <DataGridRowsPresenter Name="PART_RowsPresenter" IsItemsHost="True" />
        </ItemsPanelTemplate>
        <ControlTemplate x:Key="keyButtonBaseControlTemplate" TargetType="{x:Type ButtonBase}">
            <Border Name="Chrome" SnapsToDevicePixels="True" BorderBrush="#FF3F0000" BorderThickness="1" CornerRadius="2">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFC00000" Offset="0.078" />
                        <GradientStop Color="#FFFF2F00" Offset="0.733" />
                    </LinearGradientBrush>
                </Border.Background>
                <ContentPresenter ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Content="{TemplateBinding ContentControl.Content}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
            </Border>
        </ControlTemplate>
        <ControlTemplate x:Key="DigiKeyboardScrollViewerControlTemplate" TargetType="{x:Type ScrollViewer}">
            <Grid Name="Grid" Background="{TemplateBinding Control.Background}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Rectangle Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1" />
                <ScrollContentPresenter Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Content="{TemplateBinding ContentControl.Content}" Grid.Column="0" Margin="{TemplateBinding Control.Padding}" Grid.Row="0" />
                <ScrollBar Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Width="50" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}" ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                <ScrollBar Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
            </Grid>
        </ControlTemplate>
        <ItemsPanelTemplate x:Key="ItemsPanelTemplatehealth">
            <VirtualizingStackPanel IsItemsHost="True" />
        </ItemsPanelTemplate>
        <Style x:Key="ButtonStyleDigiMagic" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="True">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="Custom">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Margin="0">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                                <Image Margin="0" Source="/PhotoSW;component/images/Digimagic.png" Stretch="Uniform" />
                                <Image Name="image" Height="21.333" Source="/PhotoSW;component/images/tick.png" Stretch="Fill" VerticalAlignment="Top" Margin="0,-5.333,-5,0" HorizontalAlignment="Right" Width="20" Visibility="Collapsed" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStylePhotoSWMagic" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="True">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="Custom">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Margin="0">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                                <Image Margin="0" Source="/PhotoSW;component/images/Digimagic_act.png" Stretch="Uniform" />
                                <Image Name="image" Height="21.333" Source="/PhotoSW;component/images/tick.png" Stretch="Fill" VerticalAlignment="Top" Margin="0,-5.333,-5,0" HorizontalAlignment="Right" Width="20" Visibility="Collapsed" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ButtonStyleSpectraMagical" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="True">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="Custom">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Margin="0">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                                <Image Margin="0" Source="/PhotoSW;component/images/spectra_magic.png" Stretch="Uniform" />
                                <Image Name="image" Height="21.333" Source="/PhotoSW;component/images/tick.png" Stretch="Fill" VerticalAlignment="Top" Margin="0,-5.333,-5,0" HorizontalAlignment="Right" Width="20" Visibility="Collapsed" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="ButtonStyleKeyBoard" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome" BorderBrush="#FF707070" SnapsToDevicePixels="True" RenderTransformOrigin="0.5,0.5" BorderThickness="1" CornerRadius="2">
                            <Border.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Border.RenderTransform>
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                    <GradientStop Color="#FFF3F3F3" Offset="0" />
                                    <GradientStop Color="#FFEBEBEB" Offset="0.5" />
                                    <GradientStop Color="#FFDDDDDD" Offset="0.5" />
                                    <GradientStop Color="#FFCDCDCD" Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="Chrome">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFFFFFFF" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Offset)" Storyboard.TargetName="Chrome">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[3].(GradientStop.Offset)" Storyboard.TargetName="Chrome">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)" Storyboard.TargetName="Chrome">
                                                <EasingThicknessKeyFrame KeyTime="0" Value="1" />
                                            </ThicknessAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Chrome">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.98" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="Chrome">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.98" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="Chrome">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="-0.051" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="Chrome">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="-0.125" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="Chrome">
                                                <EasingColorKeyFrame KeyTime="0" Value="Gainsboro" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="Chrome">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFB8B8B8" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TabItemFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="3,3,3,1" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TabControlNormalBorderBrush" Color="#8C8E94" />
        <LinearGradientBrush x:Key="TabItemHotBackground" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#EAF6FD" Offset="0.15" />
            <GradientStop Color="#D9F0FC" Offset=".5" />
            <GradientStop Color="#BEE6FD" Offset=".5" />
            <GradientStop Color="#A7D9F5" Offset="1" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="TabItemSelectedBackground" Color="#F9F9F9" />
        <SolidColorBrush x:Key="TabItemHotBorderBrush" Color="#3C7FB1" />
        <SolidColorBrush x:Key="TabItemDisabledBackground" Color="#F4F4F4" />
        <SolidColorBrush x:Key="TabItemDisabledBorderBrush" Color="#FFC9C7BA" />
        <Style x:Key="DigiTabItemStyle" TargetType="{x:Type TabItem}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource TabItemFocusVisual}" />
            <Setter Property="Control.Foreground" Value="#FF000000" />
            <Setter Property="Control.Padding" Value="6,1,6,1" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="Control.VerticalContentAlignment" Value="Stretch" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid SnapsToDevicePixels="True">
                            <Border Name="Bd" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="1,1,1,0" Padding="{TemplateBinding Control.Padding}">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                        <GradientStop Color="#FFF3F3F3" Offset="0" />
                                        <GradientStop Color="#FFEBEBEB" Offset="0.5" />
                                        <GradientStop Color="#FFDDDDDD" Offset="0.5" />
                                        <GradientStop Color="#FFCDCDCD" Offset="1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <ContentPresenter Name="Content" ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                <Setter TargetName="Bd" Value="{StaticResource TabItemHotBackground}" Property="Border.Background" />
                            </Trigger>
                            <Trigger Property="TabItem.IsSelected" Value="True">
                                <Setter Property="Panel.ZIndex" Value="1" />
                                <Setter TargetName="Bd" Value="{StaticResource TabItemSelectedBackground}" Property="Border.Background" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="TabItem.IsSelected" Value="False" />
                                    <Condition Property="UIElement.IsMouseOver" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Value="{StaticResource TabItemHotBorderBrush}" Property="Border.BorderBrush" />
                            </MultiTrigger>
                            <Trigger Property="TabItem.TabStripPlacement" Value="Bottom">
                                <Setter TargetName="Bd" Property="Border.BorderThickness" Value="1,0,1,1" />
                            </Trigger>
                            <Trigger Property="TabItem.TabStripPlacement" Value="Left">
                                <Setter TargetName="Bd" Property="Border.BorderThickness" Value="1,1,0,1" />
                            </Trigger>
                            <Trigger Property="TabItem.TabStripPlacement" Value="Right">
                                <Setter TargetName="Bd" Property="Border.BorderThickness" Value="0,1,1,1" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="TabItem.IsSelected" Value="True" />
                                    <Condition Property="TabItem.TabStripPlacement" Value="Top" />
                                </MultiTrigger.Conditions>
                                <Setter Property="FrameworkElement.Margin" Value="-2,-2,-2,-1" />
                                <Setter TargetName="Content" Property="FrameworkElement.Margin" Value="0,0,0,1" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="TabItem.IsSelected" Value="True" />
                                    <Condition Property="TabItem.TabStripPlacement" Value="Bottom" />
                                </MultiTrigger.Conditions>
                                <Setter Property="FrameworkElement.Margin" Value="-2,-1,-2,-2" />
                                <Setter TargetName="Content" Property="FrameworkElement.Margin" Value="0,1,0,0" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="TabItem.IsSelected" Value="True" />
                                    <Condition Property="TabItem.TabStripPlacement" Value="Left" />
                                </MultiTrigger.Conditions>
                                <Setter Property="FrameworkElement.Margin" Value="-2,-2,-1,-2" />
                                <Setter TargetName="Content" Property="FrameworkElement.Margin" Value="0,0,1,0" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="TabItem.IsSelected" Value="True" />
                                    <Condition Property="TabItem.TabStripPlacement" Value="Right" />
                                </MultiTrigger.Conditions>
                                <Setter Property="FrameworkElement.Margin" Value="-1,-2,-2,-2" />
                                <Setter TargetName="Content" Property="FrameworkElement.Margin" Value="1,0,0,0" />
                            </MultiTrigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter TargetName="Bd" Value="{StaticResource TabItemDisabledBackground}" Property="Border.Background" />
                                <Setter TargetName="Bd" Value="{StaticResource TabItemDisabledBorderBrush}" Property="Border.BorderBrush" />
                                <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--<Style x:Key="DigiDateTimePickerStyle" TargetType="{x:Type DateTimePicker}">-->
        <Style x:Key="DigiDateTimePickerStyle">
            <!--<Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />-->
            <Setter Property="Control.Background" Value="#606060" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="UIElement.Focusable" Value="False" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Right" />
            <!--<Setter Property="InputBase.TextAlignment" Value="Right" />-->
            <!--<Setter Property="DateTimePicker.TimeWatermarkTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <ContentControl Foreground="#FF808080" Focusable="False" Content="{Binding}" />
                    </DataTemplate>
                </Setter.Value>
            </Setter>-->
            <!--<Setter Property="InputBase.WatermarkTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <ContentControl Foreground="#FF808080" Focusable="False" Content="{Binding}" />
                    </DataTemplate>
                </Setter.Value>
            </Setter>-->
            <!--<Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DateTimePicker}">
                        <Border>
                            <Grid>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <ButtonSpinner Name="Spinner" AllowSpin="{TemplateBinding UpDownBase`1[[System.Nullable`1[[System.DateTime, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].AllowSpin}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" IsTabStop="False" ShowButtonSpinner="{TemplateBinding UpDownBase`1[[System.Nullable`1[[System.DateTime, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].ShowButtonSpinner}">
                                        <WatermarkTextBox Name="TextBox" AcceptsReturn="False" BorderThickness="0" Background="#00FFFFFF" Foreground="{TemplateBinding Control.Foreground}" FontWeight="{TemplateBinding Control.FontWeight}" FontStyle="{TemplateBinding Control.FontStyle}" FontStretch="{TemplateBinding Control.FontStretch}" FontSize="{TemplateBinding Control.FontSize}" FontFamily="{TemplateBinding Control.FontFamily}" HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}" MinWidth="20" Padding="0" TextAlignment="{TemplateBinding InputBase.TextAlignment}" TextWrapping="NoWrap" TabIndex="{TemplateBinding Control.TabIndex}" WatermarkTemplate="{TemplateBinding InputBase.WatermarkTemplate}" Watermark="{TemplateBinding InputBase.Watermark}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" />
                                    </ButtonSpinner>
                                    <ToggleButton Name="_calendarToggleButton" Background="#FFFFFFFF" Grid.Column="1" IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}}">
                                        <ToggleButton.IsHitTestVisible>
                                            <Binding Path="IsOpen" RelativeSource="{RelativeSource TemplatedParent}">
                                                <Binding.Converter>
                                                    <ibc:InverseBoolConverter />
                                                </Binding.Converter>
                                            </Binding>
                                        </ToggleButton.IsHitTestVisible>
                                        <ToggleButton.IsEnabled>
                                            <Binding Path="IsReadOnly" RelativeSource="{RelativeSource TemplatedParent}">
                                                <Binding.Converter>
                                                    <ibc:InverseBoolConverter />
                                                </Binding.Converter>
                                            </Binding>
                                        </ToggleButton.IsEnabled>
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Control.Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                            <Grid SnapsToDevicePixels="True">
                                                                <bc:ButtonChrome Name="ToggleButtonChrome" CornerRadius="0,2.75,2.75,0" InnerCornerRadius="0,1.75,1.75,0" RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" RenderPressed="{TemplateBinding ButtonBase.IsPressed}" RenderChecked="{Binding IsOpen, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DateTimePicker}}}" RenderEnabled="{Binding IsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DateTimePicker}}}">
                                                                    <Grid>
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="*" />
                                                                            <ColumnDefinition Width="Auto" />
                                                                        </Grid.ColumnDefinitions>
                                                                        <ContentPresenter ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Content="{TemplateBinding ContentControl.Content}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" HorizontalAlignment="Stretch" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="Stretch" />
                                                                        <Grid Name="arrowGlyph" Grid.Column="1" IsHitTestVisible="False" Margin="5">
                                                                            <Path Data="M0,1C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1z" Fill="#FF000000" Height="4" Width="7" />
                                                                        </Grid>
                                                                    </Grid>
                                                                </bc:ButtonChrome>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                </Grid>
                                <Popup StaysOpen="False" Margin="0,2,0,-2" IsOpen="{Binding IsChecked, ElementName=_calendarToggleButton}">
                                    <Border BorderThickness="1" Padding="3">
                                        <Border.BorderBrush>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FFA3AEB9" Offset="0" />
                                                <GradientStop Color="#FF8399A9" Offset="0.375" />
                                                <GradientStop Color="#FF718597" Offset="0.375" />
                                                <GradientStop Color="#FF617584" Offset="1" />
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                <GradientStop Color="White" Offset="0" />
                                                <GradientStop Color="#FFE8EBED" Offset="1" />
                                            </LinearGradientBrush>
                                        </Border.Background>
                                        <StackPanel>
                                            <Calendar Name="PART_Calendar" BorderThickness="0" DisplayDate="2012-12-01" Style="{DynamicResource DigiSearchCalendarStyle}" />
                                            <TimePicker Name="PART_TimeUpDown" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" Foreground="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" FormatString="{TemplateBinding DateTimePicker.TimeFormatString}" Format="{TemplateBinding DateTimePicker.TimeFormat}" WatermarkTemplate="{TemplateBinding DateTimePicker.TimeWatermarkTemplate}" Watermark="{TemplateBinding DateTimePicker.TimeWatermark}" Value="{Binding Value, RelativeSource={RelativeSource TemplatedParent}}" />
                                        </StackPanel>
                                    </Border>
                                </Popup>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>-->
        </Style>
        <ControlTemplate x:Key="ScrollViewerControlTemplateOrder" TargetType="{x:Type ScrollViewer}">
            <Grid Name="Grid">
                <Rectangle Name="Corner" Grid.Column="1" Grid.Row="1" Visibility="Collapsed" Fill="{x:Null}" />
                <ScrollContentPresenter Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Content="{TemplateBinding ContentControl.Content}" Grid.Column="0" Margin="{TemplateBinding Control.Padding}" Grid.Row="0" />
                <ScrollBar Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}" ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}" Margin="0" HorizontalAlignment="Stretch" Style="{DynamicResource DigiScrollBarStyleSearch}" Width="Auto" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                <ScrollBar Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="0" Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}" Style="{DynamicResource DigiScrollBarStyleSearch}" VerticalAlignment="Stretch" Height="Auto" Margin="0" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Background="{x:Null}" />
            </Grid>
        </ControlTemplate>
        <Style x:Key="btnRed" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="True" Background="#FFFF0000" CornerRadius="5">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="BtnGreen" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="True" Background="#FF00FF00" CornerRadius="5">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="BtnBlue" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="True" Background="#FF0000FF" CornerRadius="5">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="BtnGray" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="True" Background="#FF808080" CornerRadius="5">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CheckBoxStyleGreenScreen" TargetType="{x:Type CheckBox}">
            <Setter Property="Control.Background" Value="#FF448DCA" />
            <Setter Property="Control.Foreground" Value="#FF000000" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Left" />
            <Setter Property="Control.VerticalContentAlignment" Value="Top" />
            <Setter Property="Control.Padding" Value="4,1,0,0" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFA3AEB9" Offset="0" />
                        <GradientStop Color="#FF8399A9" Offset="0.375" />
                        <GradientStop Color="#FF718597" Offset="0.375" />
                        <GradientStop Color="#FF617584" Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="0" />
                            </Grid.ColumnDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="canvas">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                    <VisualState x:Name="Indeterminate" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused" />
                                    <VisualState x:Name="Unfocused" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="Valid" />
                                    <VisualState x:Name="InvalidUnfocused" />
                                    <VisualState x:Name="InvalidFocused" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" CornerRadius="5" BorderThickness="1" BorderBrush="{x:Null}">
                                <Canvas Name="canvas" VerticalAlignment="Center" HorizontalAlignment="Left" Height="33" Width="48" Opacity="0.175" Margin="5,0,0,0">
                                    <Path Data="M36.5,29C18.5,41.500118 63.5,-0.00052527089 95.5,29 95.5,29 54.5,16.499882 36.5,29z" Fill="#FF9C3131" Height="11.18" Margin="0" Stretch="Fill" UseLayoutRounding="False" VerticalAlignment="Stretch" RenderTransformOrigin="0.5,0.5" Width="46.629" Canvas.Left="0.333" Canvas.Top="0.667">
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleY="1" ScaleX="-1" />
                                                <SkewTransform AngleY="0" AngleX="0" />
                                                <RotateTransform Angle="0" />
                                                <TranslateTransform />
                                            </TransformGroup>
                                        </Path.RenderTransform>
                                    </Path>
                                    <Path Data="M36.5,29C18.5,41.500118 63.5,-0.00052527089 95.5,29 95.5,29 54.5,16.499882 36.5,29z" Fill="#FF9C3131" Height="11.18" Margin="0" Stretch="Fill" UseLayoutRounding="False" VerticalAlignment="Stretch" RenderTransformOrigin="0.5,0.5" Width="46.629" Canvas.Top="19.222" Canvas.Left="0.333">
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleY="1" ScaleX="1" />
                                                <SkewTransform AngleY="0" AngleX="0" />
                                                <RotateTransform Angle="180" />
                                                <TranslateTransform />
                                            </TransformGroup>
                                        </Path.RenderTransform>
                                    </Path>
                                    <Ellipse Fill="#FF040404" Height="14" Canvas.Left="16" Canvas.Top="9" Width="12" />
                                    <Ellipse Fill="#FFFFFFFF" Height="4" Canvas.Left="23" Canvas.Top="16" Width="5" />
                                </Canvas>
                            </Border>
                            <ContentPresenter Name="contentPresenter" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Content="{TemplateBinding ContentControl.Content}" Grid.Column="0" HorizontalAlignment="Left" Margin="56,33,0,0" VerticalAlignment="Top" />
                            <Rectangle Grid.ColumnSpan="2" Fill="#FF9C3131" Margin="-1,-2,-1,0" Opacity="0" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RadioButtonStyleGreenScreen" TargetType="{x:Type RadioButton}">
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.Background" Value="#FFF4F4F4" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource CheckBoxStroke}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Border Name="border" Margin="0,0,4,0" BorderBrush="#FF767676" BorderThickness="1" CornerRadius="5">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                    <GradientStop Color="#FFF3F3F3" Offset="0" />
                                    <GradientStop Color="#FFEBEBEB" Offset="0.5" />
                                    <GradientStop Color="#FFDDDDDD" Offset="0.5" />
                                    <GradientStop Color="#FFCDCDCD" Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CheckStates1">
                                    <VisualState x:Name="Checked1">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="border">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFED2606" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="border">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFDC2002" />
                                            </ColorAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[2].(GradientStop.Offset)" Storyboard.TargetName="border">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.504" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="border">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFE92202" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="border">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFD01E02" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked1" />
                                    <VisualState x:Name="Indeterminate1" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="border">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFBC1212" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="border">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFFF0404" />
                                            </ColorAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[2].(GradientStop.Offset)" Storyboard.TargetName="border">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.539" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Offset)" Storyboard.TargetName="border">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.465" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                    <VisualState x:Name="Indeterminate" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter RecognizesAccessKey="True" Height="Auto" Width="Auto" Margin="52,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ContentControl.HasContent" Value="True">
                                <Setter Value="{StaticResource CheckRadioFocusVisual}" Property="FrameworkElement.FocusVisualStyle" />
                                <Setter Property="Control.Padding" Value="4,0,0,0" />
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RadioButtonStyleGreenScreenEraseNRevert" TargetType="{x:Type RadioButton}">
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Control.Background" Value="#FFF4F4F4" />
            <Setter Property="Control.BorderBrush" Value="{StaticResource CheckBoxStroke}" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Border Name="border" Margin="0" BorderBrush="#FF767676" BorderThickness="1" CornerRadius="5">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                    <GradientStop Color="#FFF3F3F3" Offset="0" />
                                    <GradientStop Color="#FFEBEBEB" Offset="0.5" />
                                    <GradientStop Color="#FFDDDDDD" Offset="0.5" />
                                    <GradientStop Color="#FFCDCDCD" Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CheckStates1">
                                    <VisualState x:Name="Checked1">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="border">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFED2606" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="border">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFDC2002" />
                                            </ColorAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[2].(GradientStop.Offset)" Storyboard.TargetName="border">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.504" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="border">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFE92202" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="border">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFD01E02" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked1" />
                                    <VisualState x:Name="Indeterminate1" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="border">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFBC1212" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="border">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFFF0404" />
                                            </ColorAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[2].(GradientStop.Offset)" Storyboard.TargetName="border">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.539" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Offset)" Storyboard.TargetName="border">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.465" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                    <VisualState x:Name="Indeterminate" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter RecognizesAccessKey="True" Height="Auto" Width="Auto" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ContentControl.HasContent" Value="True">
                                <Setter Value="{StaticResource CheckRadioFocusVisual}" Property="FrameworkElement.FocusVisualStyle" />
                                <Setter Property="Control.Padding" Value="4,0,0,0" />
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ItemsPanelTemplate x:Key="ItemsPanelTemplatePrtStatus">
            <VirtualizingStackPanel IsItemsHost="True" />
        </ItemsPanelTemplate>
        <Style x:Key="ListBoxItemStylePrtStatus" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Control.Background" Value="#00FFFFFF" />
            <Setter Property="Control.HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="Control.VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="Control.Padding" Value="2,0,0,0" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border Name="Bd" BorderThickness="{TemplateBinding Control.BorderThickness}" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="True" CornerRadius="5" Margin="0,4">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFF91717" Offset="0" />
                                    <GradientStop Color="#FFE40000" Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border.Effect>
                                <DropShadowEffect Direction="269" Opacity="0.51" ShadowDepth="3" BlurRadius="3" />
                            </Border.Effect>
                            <ContentPresenter HorizontalAlignment="Stretch" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="Stretch" Margin="0" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ListBoxItem.IsSelected" Value="True">
                                <Setter Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Control.Foreground" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="ListBoxItem.IsSelected" Value="True" />
                                    <Condition Property="Selector.IsSelectionActive" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Control.Foreground" />
                            </MultiTrigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ListBoxControlTemplategeneral" TargetType="{x:Type ListBox}">
            <Border Name="Bd" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" Padding="1" SnapsToDevicePixels="True">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="ValidationStates">
                        <VisualState x:Name="Valid" />
                        <VisualState x:Name="InvalidFocused" />
                        <VisualState x:Name="InvalidUnfocused" />
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <ScrollViewer Focusable="False" Padding="{TemplateBinding Control.Padding}" Template="{DynamicResource DigiScrollViewerControlTemplate}">
                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Margin="0" Style="{DynamicResource digiItemsPresenterStyle}" HorizontalAlignment="Stretch" />
                </ScrollViewer>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                    <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Border.Background" />
                </Trigger>
                <Trigger Property="ItemsControl.IsGrouping" Value="True">
                    <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="RadioButtonControlTemplategrnbtnSelect" TargetType="{x:Type RadioButton}">
            <Grid Name="grid" Background="#00000000">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="MouseOver" />
                        <VisualState x:Name="Pressed" />
                        <VisualState x:Name="Disabled" />
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="CheckStates">
                        <VisualState x:Name="Checked">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FFE40000" />
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unchecked" />
                        <VisualState x:Name="Indeterminate" />
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="ListBoxControlTemplategeneralNoBack" TargetType="{x:Type ListBox}">
            <Border Name="Bd" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="#FFFFFFFF" Padding="1" SnapsToDevicePixels="True">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="ValidationStates">
                        <VisualState x:Name="Valid" />
                        <VisualState x:Name="InvalidFocused" />
                        <VisualState x:Name="InvalidUnfocused" />
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <ScrollViewer Focusable="False" Padding="{TemplateBinding Control.Padding}" Template="{DynamicResource DigiScrollViewerControlTemplate}">
                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Margin="0" Style="{DynamicResource digiItemsPresenterStyle}" HorizontalAlignment="Stretch" />
                </ScrollViewer>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                    <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Border.Background" />
                </Trigger>
                <Trigger Property="ItemsControl.IsGrouping" Value="True">
                    <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Application.Resources>

</Application>
